
DSP NUCLEO G431TBT6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c6a4  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000528  0800c888  0800c888  0000d888  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800cdb0  0800cdb0  0000e224  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800cdb0  0800cdb0  0000ddb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800cdb8  0800cdb8  0000e224  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800cdb8  0800cdb8  0000ddb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800cdbc  0800cdbc  0000ddbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000224  20000000  0800cdc0  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00005084  20000224  0800cfe4  0000e224  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200052a8  0800cfe4  0000e2a8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000e224  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001a32f  00000000  00000000  0000e254  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000030ab  00000000  00000000  00028583  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000016e0  00000000  00000000  0002b630  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000011c8  00000000  00000000  0002cd10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000226d5  00000000  00000000  0002ded8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001a1e4  00000000  00000000  000505ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e2c58  00000000  00000000  0006a791  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0014d3e9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000076d0  00000000  00000000  0014d42c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  00154afc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000224 	.word	0x20000224
 80001fc:	00000000 	.word	0x00000000
 8000200:	0800c86c 	.word	0x0800c86c

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000228 	.word	0x20000228
 800021c:	0800c86c 	.word	0x0800c86c

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <memchr>:
 8000230:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000234:	2a10      	cmp	r2, #16
 8000236:	db2b      	blt.n	8000290 <memchr+0x60>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	d008      	beq.n	8000250 <memchr+0x20>
 800023e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000242:	3a01      	subs	r2, #1
 8000244:	428b      	cmp	r3, r1
 8000246:	d02d      	beq.n	80002a4 <memchr+0x74>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	b342      	cbz	r2, 80002a0 <memchr+0x70>
 800024e:	d1f6      	bne.n	800023e <memchr+0xe>
 8000250:	b4f0      	push	{r4, r5, r6, r7}
 8000252:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000256:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800025a:	f022 0407 	bic.w	r4, r2, #7
 800025e:	f07f 0700 	mvns.w	r7, #0
 8000262:	2300      	movs	r3, #0
 8000264:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000268:	3c08      	subs	r4, #8
 800026a:	ea85 0501 	eor.w	r5, r5, r1
 800026e:	ea86 0601 	eor.w	r6, r6, r1
 8000272:	fa85 f547 	uadd8	r5, r5, r7
 8000276:	faa3 f587 	sel	r5, r3, r7
 800027a:	fa86 f647 	uadd8	r6, r6, r7
 800027e:	faa5 f687 	sel	r6, r5, r7
 8000282:	b98e      	cbnz	r6, 80002a8 <memchr+0x78>
 8000284:	d1ee      	bne.n	8000264 <memchr+0x34>
 8000286:	bcf0      	pop	{r4, r5, r6, r7}
 8000288:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800028c:	f002 0207 	and.w	r2, r2, #7
 8000290:	b132      	cbz	r2, 80002a0 <memchr+0x70>
 8000292:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000296:	3a01      	subs	r2, #1
 8000298:	ea83 0301 	eor.w	r3, r3, r1
 800029c:	b113      	cbz	r3, 80002a4 <memchr+0x74>
 800029e:	d1f8      	bne.n	8000292 <memchr+0x62>
 80002a0:	2000      	movs	r0, #0
 80002a2:	4770      	bx	lr
 80002a4:	3801      	subs	r0, #1
 80002a6:	4770      	bx	lr
 80002a8:	2d00      	cmp	r5, #0
 80002aa:	bf06      	itte	eq
 80002ac:	4635      	moveq	r5, r6
 80002ae:	3803      	subeq	r0, #3
 80002b0:	3807      	subne	r0, #7
 80002b2:	f015 0f01 	tst.w	r5, #1
 80002b6:	d107      	bne.n	80002c8 <memchr+0x98>
 80002b8:	3001      	adds	r0, #1
 80002ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002be:	bf02      	ittt	eq
 80002c0:	3001      	addeq	r0, #1
 80002c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002c6:	3001      	addeq	r0, #1
 80002c8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ca:	3801      	subs	r0, #1
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop

080002d0 <__aeabi_drsub>:
 80002d0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002d4:	e002      	b.n	80002dc <__adddf3>
 80002d6:	bf00      	nop

080002d8 <__aeabi_dsub>:
 80002d8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002dc <__adddf3>:
 80002dc:	b530      	push	{r4, r5, lr}
 80002de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002e6:	ea94 0f05 	teq	r4, r5
 80002ea:	bf08      	it	eq
 80002ec:	ea90 0f02 	teqeq	r0, r2
 80002f0:	bf1f      	itttt	ne
 80002f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000302:	f000 80e2 	beq.w	80004ca <__adddf3+0x1ee>
 8000306:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800030e:	bfb8      	it	lt
 8000310:	426d      	neglt	r5, r5
 8000312:	dd0c      	ble.n	800032e <__adddf3+0x52>
 8000314:	442c      	add	r4, r5
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	ea82 0000 	eor.w	r0, r2, r0
 8000322:	ea83 0101 	eor.w	r1, r3, r1
 8000326:	ea80 0202 	eor.w	r2, r0, r2
 800032a:	ea81 0303 	eor.w	r3, r1, r3
 800032e:	2d36      	cmp	r5, #54	@ 0x36
 8000330:	bf88      	it	hi
 8000332:	bd30      	pophi	{r4, r5, pc}
 8000334:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000338:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800033c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000340:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x70>
 8000346:	4240      	negs	r0, r0
 8000348:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800034c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000350:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000354:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000358:	d002      	beq.n	8000360 <__adddf3+0x84>
 800035a:	4252      	negs	r2, r2
 800035c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000360:	ea94 0f05 	teq	r4, r5
 8000364:	f000 80a7 	beq.w	80004b6 <__adddf3+0x1da>
 8000368:	f1a4 0401 	sub.w	r4, r4, #1
 800036c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000370:	db0d      	blt.n	800038e <__adddf3+0xb2>
 8000372:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000376:	fa22 f205 	lsr.w	r2, r2, r5
 800037a:	1880      	adds	r0, r0, r2
 800037c:	f141 0100 	adc.w	r1, r1, #0
 8000380:	fa03 f20e 	lsl.w	r2, r3, lr
 8000384:	1880      	adds	r0, r0, r2
 8000386:	fa43 f305 	asr.w	r3, r3, r5
 800038a:	4159      	adcs	r1, r3
 800038c:	e00e      	b.n	80003ac <__adddf3+0xd0>
 800038e:	f1a5 0520 	sub.w	r5, r5, #32
 8000392:	f10e 0e20 	add.w	lr, lr, #32
 8000396:	2a01      	cmp	r2, #1
 8000398:	fa03 fc0e 	lsl.w	ip, r3, lr
 800039c:	bf28      	it	cs
 800039e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a2:	fa43 f305 	asr.w	r3, r3, r5
 80003a6:	18c0      	adds	r0, r0, r3
 80003a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ac:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003b0:	d507      	bpl.n	80003c2 <__adddf3+0xe6>
 80003b2:	f04f 0e00 	mov.w	lr, #0
 80003b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003be:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003c6:	d31b      	bcc.n	8000400 <__adddf3+0x124>
 80003c8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003cc:	d30c      	bcc.n	80003e8 <__adddf3+0x10c>
 80003ce:	0849      	lsrs	r1, r1, #1
 80003d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003d8:	f104 0401 	add.w	r4, r4, #1
 80003dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003e4:	f080 809a 	bcs.w	800051c <__adddf3+0x240>
 80003e8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ec:	bf08      	it	eq
 80003ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f2:	f150 0000 	adcs.w	r0, r0, #0
 80003f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fa:	ea41 0105 	orr.w	r1, r1, r5
 80003fe:	bd30      	pop	{r4, r5, pc}
 8000400:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000404:	4140      	adcs	r0, r0
 8000406:	eb41 0101 	adc.w	r1, r1, r1
 800040a:	3c01      	subs	r4, #1
 800040c:	bf28      	it	cs
 800040e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000412:	d2e9      	bcs.n	80003e8 <__adddf3+0x10c>
 8000414:	f091 0f00 	teq	r1, #0
 8000418:	bf04      	itt	eq
 800041a:	4601      	moveq	r1, r0
 800041c:	2000      	moveq	r0, #0
 800041e:	fab1 f381 	clz	r3, r1
 8000422:	bf08      	it	eq
 8000424:	3320      	addeq	r3, #32
 8000426:	f1a3 030b 	sub.w	r3, r3, #11
 800042a:	f1b3 0220 	subs.w	r2, r3, #32
 800042e:	da0c      	bge.n	800044a <__adddf3+0x16e>
 8000430:	320c      	adds	r2, #12
 8000432:	dd08      	ble.n	8000446 <__adddf3+0x16a>
 8000434:	f102 0c14 	add.w	ip, r2, #20
 8000438:	f1c2 020c 	rsb	r2, r2, #12
 800043c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000440:	fa21 f102 	lsr.w	r1, r1, r2
 8000444:	e00c      	b.n	8000460 <__adddf3+0x184>
 8000446:	f102 0214 	add.w	r2, r2, #20
 800044a:	bfd8      	it	le
 800044c:	f1c2 0c20 	rsble	ip, r2, #32
 8000450:	fa01 f102 	lsl.w	r1, r1, r2
 8000454:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000458:	bfdc      	itt	le
 800045a:	ea41 010c 	orrle.w	r1, r1, ip
 800045e:	4090      	lslle	r0, r2
 8000460:	1ae4      	subs	r4, r4, r3
 8000462:	bfa2      	ittt	ge
 8000464:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000468:	4329      	orrge	r1, r5
 800046a:	bd30      	popge	{r4, r5, pc}
 800046c:	ea6f 0404 	mvn.w	r4, r4
 8000470:	3c1f      	subs	r4, #31
 8000472:	da1c      	bge.n	80004ae <__adddf3+0x1d2>
 8000474:	340c      	adds	r4, #12
 8000476:	dc0e      	bgt.n	8000496 <__adddf3+0x1ba>
 8000478:	f104 0414 	add.w	r4, r4, #20
 800047c:	f1c4 0220 	rsb	r2, r4, #32
 8000480:	fa20 f004 	lsr.w	r0, r0, r4
 8000484:	fa01 f302 	lsl.w	r3, r1, r2
 8000488:	ea40 0003 	orr.w	r0, r0, r3
 800048c:	fa21 f304 	lsr.w	r3, r1, r4
 8000490:	ea45 0103 	orr.w	r1, r5, r3
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f1c4 040c 	rsb	r4, r4, #12
 800049a:	f1c4 0220 	rsb	r2, r4, #32
 800049e:	fa20 f002 	lsr.w	r0, r0, r2
 80004a2:	fa01 f304 	lsl.w	r3, r1, r4
 80004a6:	ea40 0003 	orr.w	r0, r0, r3
 80004aa:	4629      	mov	r1, r5
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	fa21 f004 	lsr.w	r0, r1, r4
 80004b2:	4629      	mov	r1, r5
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f094 0f00 	teq	r4, #0
 80004ba:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004be:	bf06      	itte	eq
 80004c0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004c4:	3401      	addeq	r4, #1
 80004c6:	3d01      	subne	r5, #1
 80004c8:	e74e      	b.n	8000368 <__adddf3+0x8c>
 80004ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ce:	bf18      	it	ne
 80004d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d4:	d029      	beq.n	800052a <__adddf3+0x24e>
 80004d6:	ea94 0f05 	teq	r4, r5
 80004da:	bf08      	it	eq
 80004dc:	ea90 0f02 	teqeq	r0, r2
 80004e0:	d005      	beq.n	80004ee <__adddf3+0x212>
 80004e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004e6:	bf04      	itt	eq
 80004e8:	4619      	moveq	r1, r3
 80004ea:	4610      	moveq	r0, r2
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea91 0f03 	teq	r1, r3
 80004f2:	bf1e      	ittt	ne
 80004f4:	2100      	movne	r1, #0
 80004f6:	2000      	movne	r0, #0
 80004f8:	bd30      	popne	{r4, r5, pc}
 80004fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004fe:	d105      	bne.n	800050c <__adddf3+0x230>
 8000500:	0040      	lsls	r0, r0, #1
 8000502:	4149      	adcs	r1, r1
 8000504:	bf28      	it	cs
 8000506:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800050a:	bd30      	pop	{r4, r5, pc}
 800050c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000510:	bf3c      	itt	cc
 8000512:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000516:	bd30      	popcc	{r4, r5, pc}
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800051c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000520:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000524:	f04f 0000 	mov.w	r0, #0
 8000528:	bd30      	pop	{r4, r5, pc}
 800052a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800052e:	bf1a      	itte	ne
 8000530:	4619      	movne	r1, r3
 8000532:	4610      	movne	r0, r2
 8000534:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000538:	bf1c      	itt	ne
 800053a:	460b      	movne	r3, r1
 800053c:	4602      	movne	r2, r0
 800053e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000542:	bf06      	itte	eq
 8000544:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000548:	ea91 0f03 	teqeq	r1, r3
 800054c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000550:	bd30      	pop	{r4, r5, pc}
 8000552:	bf00      	nop

08000554 <__aeabi_ui2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f04f 0500 	mov.w	r5, #0
 800056c:	f04f 0100 	mov.w	r1, #0
 8000570:	e750      	b.n	8000414 <__adddf3+0x138>
 8000572:	bf00      	nop

08000574 <__aeabi_i2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000588:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800058c:	bf48      	it	mi
 800058e:	4240      	negmi	r0, r0
 8000590:	f04f 0100 	mov.w	r1, #0
 8000594:	e73e      	b.n	8000414 <__adddf3+0x138>
 8000596:	bf00      	nop

08000598 <__aeabi_f2d>:
 8000598:	0042      	lsls	r2, r0, #1
 800059a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800059e:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005a6:	bf1f      	itttt	ne
 80005a8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005ac:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005b0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005b4:	4770      	bxne	lr
 80005b6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005ba:	bf08      	it	eq
 80005bc:	4770      	bxeq	lr
 80005be:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005c2:	bf04      	itt	eq
 80005c4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005c8:	4770      	bxeq	lr
 80005ca:	b530      	push	{r4, r5, lr}
 80005cc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005d4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005d8:	e71c      	b.n	8000414 <__adddf3+0x138>
 80005da:	bf00      	nop

080005dc <__aeabi_ul2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	e00a      	b.n	8000602 <__aeabi_l2d+0x16>

080005ec <__aeabi_l2d>:
 80005ec:	ea50 0201 	orrs.w	r2, r0, r1
 80005f0:	bf08      	it	eq
 80005f2:	4770      	bxeq	lr
 80005f4:	b530      	push	{r4, r5, lr}
 80005f6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005fa:	d502      	bpl.n	8000602 <__aeabi_l2d+0x16>
 80005fc:	4240      	negs	r0, r0
 80005fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000602:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000606:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800060a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800060e:	f43f aed8 	beq.w	80003c2 <__adddf3+0xe6>
 8000612:	f04f 0203 	mov.w	r2, #3
 8000616:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061a:	bf18      	it	ne
 800061c:	3203      	addne	r2, #3
 800061e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000622:	bf18      	it	ne
 8000624:	3203      	addne	r2, #3
 8000626:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062a:	f1c2 0320 	rsb	r3, r2, #32
 800062e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000632:	fa20 f002 	lsr.w	r0, r0, r2
 8000636:	fa01 fe03 	lsl.w	lr, r1, r3
 800063a:	ea40 000e 	orr.w	r0, r0, lr
 800063e:	fa21 f102 	lsr.w	r1, r1, r2
 8000642:	4414      	add	r4, r2
 8000644:	e6bd      	b.n	80003c2 <__adddf3+0xe6>
 8000646:	bf00      	nop

08000648 <__aeabi_dmul>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800064e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000652:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000656:	bf1d      	ittte	ne
 8000658:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800065c:	ea94 0f0c 	teqne	r4, ip
 8000660:	ea95 0f0c 	teqne	r5, ip
 8000664:	f000 f8de 	bleq	8000824 <__aeabi_dmul+0x1dc>
 8000668:	442c      	add	r4, r5
 800066a:	ea81 0603 	eor.w	r6, r1, r3
 800066e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000672:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000676:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067a:	bf18      	it	ne
 800067c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000684:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000688:	d038      	beq.n	80006fc <__aeabi_dmul+0xb4>
 800068a:	fba0 ce02 	umull	ip, lr, r0, r2
 800068e:	f04f 0500 	mov.w	r5, #0
 8000692:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000696:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800069a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800069e:	f04f 0600 	mov.w	r6, #0
 80006a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006a6:	f09c 0f00 	teq	ip, #0
 80006aa:	bf18      	it	ne
 80006ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006b4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006b8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006bc:	d204      	bcs.n	80006c8 <__aeabi_dmul+0x80>
 80006be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c2:	416d      	adcs	r5, r5
 80006c4:	eb46 0606 	adc.w	r6, r6, r6
 80006c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006dc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006e0:	bf88      	it	hi
 80006e2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006e6:	d81e      	bhi.n	8000726 <__aeabi_dmul+0xde>
 80006e8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ec:	bf08      	it	eq
 80006ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f2:	f150 0000 	adcs.w	r0, r0, #0
 80006f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000700:	ea46 0101 	orr.w	r1, r6, r1
 8000704:	ea40 0002 	orr.w	r0, r0, r2
 8000708:	ea81 0103 	eor.w	r1, r1, r3
 800070c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000710:	bfc2      	ittt	gt
 8000712:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000716:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071a:	bd70      	popgt	{r4, r5, r6, pc}
 800071c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000720:	f04f 0e00 	mov.w	lr, #0
 8000724:	3c01      	subs	r4, #1
 8000726:	f300 80ab 	bgt.w	8000880 <__aeabi_dmul+0x238>
 800072a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800072e:	bfde      	ittt	le
 8000730:	2000      	movle	r0, #0
 8000732:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000736:	bd70      	pople	{r4, r5, r6, pc}
 8000738:	f1c4 0400 	rsb	r4, r4, #0
 800073c:	3c20      	subs	r4, #32
 800073e:	da35      	bge.n	80007ac <__aeabi_dmul+0x164>
 8000740:	340c      	adds	r4, #12
 8000742:	dc1b      	bgt.n	800077c <__aeabi_dmul+0x134>
 8000744:	f104 0414 	add.w	r4, r4, #20
 8000748:	f1c4 0520 	rsb	r5, r4, #32
 800074c:	fa00 f305 	lsl.w	r3, r0, r5
 8000750:	fa20 f004 	lsr.w	r0, r0, r4
 8000754:	fa01 f205 	lsl.w	r2, r1, r5
 8000758:	ea40 0002 	orr.w	r0, r0, r2
 800075c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000760:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000764:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000768:	fa21 f604 	lsr.w	r6, r1, r4
 800076c:	eb42 0106 	adc.w	r1, r2, r6
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 040c 	rsb	r4, r4, #12
 8000780:	f1c4 0520 	rsb	r5, r4, #32
 8000784:	fa00 f304 	lsl.w	r3, r0, r4
 8000788:	fa20 f005 	lsr.w	r0, r0, r5
 800078c:	fa01 f204 	lsl.w	r2, r1, r4
 8000790:	ea40 0002 	orr.w	r0, r0, r2
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000798:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800079c:	f141 0100 	adc.w	r1, r1, #0
 80007a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a4:	bf08      	it	eq
 80007a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f1c4 0520 	rsb	r5, r4, #32
 80007b0:	fa00 f205 	lsl.w	r2, r0, r5
 80007b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007b8:	fa20 f304 	lsr.w	r3, r0, r4
 80007bc:	fa01 f205 	lsl.w	r2, r1, r5
 80007c0:	ea43 0302 	orr.w	r3, r3, r2
 80007c4:	fa21 f004 	lsr.w	r0, r1, r4
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007cc:	fa21 f204 	lsr.w	r2, r1, r4
 80007d0:	ea20 0002 	bic.w	r0, r0, r2
 80007d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007dc:	bf08      	it	eq
 80007de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e2:	bd70      	pop	{r4, r5, r6, pc}
 80007e4:	f094 0f00 	teq	r4, #0
 80007e8:	d10f      	bne.n	800080a <__aeabi_dmul+0x1c2>
 80007ea:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ee:	0040      	lsls	r0, r0, #1
 80007f0:	eb41 0101 	adc.w	r1, r1, r1
 80007f4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3c01      	subeq	r4, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1a6>
 80007fe:	ea41 0106 	orr.w	r1, r1, r6
 8000802:	f095 0f00 	teq	r5, #0
 8000806:	bf18      	it	ne
 8000808:	4770      	bxne	lr
 800080a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800080e:	0052      	lsls	r2, r2, #1
 8000810:	eb43 0303 	adc.w	r3, r3, r3
 8000814:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000818:	bf08      	it	eq
 800081a:	3d01      	subeq	r5, #1
 800081c:	d0f7      	beq.n	800080e <__aeabi_dmul+0x1c6>
 800081e:	ea43 0306 	orr.w	r3, r3, r6
 8000822:	4770      	bx	lr
 8000824:	ea94 0f0c 	teq	r4, ip
 8000828:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800082c:	bf18      	it	ne
 800082e:	ea95 0f0c 	teqne	r5, ip
 8000832:	d00c      	beq.n	800084e <__aeabi_dmul+0x206>
 8000834:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000838:	bf18      	it	ne
 800083a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083e:	d1d1      	bne.n	80007e4 <__aeabi_dmul+0x19c>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000848:	f04f 0000 	mov.w	r0, #0
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000852:	bf06      	itte	eq
 8000854:	4610      	moveq	r0, r2
 8000856:	4619      	moveq	r1, r3
 8000858:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085c:	d019      	beq.n	8000892 <__aeabi_dmul+0x24a>
 800085e:	ea94 0f0c 	teq	r4, ip
 8000862:	d102      	bne.n	800086a <__aeabi_dmul+0x222>
 8000864:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000868:	d113      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800086a:	ea95 0f0c 	teq	r5, ip
 800086e:	d105      	bne.n	800087c <__aeabi_dmul+0x234>
 8000870:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000874:	bf1c      	itt	ne
 8000876:	4610      	movne	r0, r2
 8000878:	4619      	movne	r1, r3
 800087a:	d10a      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800087c:	ea81 0103 	eor.w	r1, r1, r3
 8000880:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000884:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000888:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000896:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800089a:	bd70      	pop	{r4, r5, r6, pc}

0800089c <__aeabi_ddiv>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008a2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008aa:	bf1d      	ittte	ne
 80008ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b0:	ea94 0f0c 	teqne	r4, ip
 80008b4:	ea95 0f0c 	teqne	r5, ip
 80008b8:	f000 f8a7 	bleq	8000a0a <__aeabi_ddiv+0x16e>
 80008bc:	eba4 0405 	sub.w	r4, r4, r5
 80008c0:	ea81 0e03 	eor.w	lr, r1, r3
 80008c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008cc:	f000 8088 	beq.w	80009e0 <__aeabi_ddiv+0x144>
 80008d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008f4:	429d      	cmp	r5, r3
 80008f6:	bf08      	it	eq
 80008f8:	4296      	cmpeq	r6, r2
 80008fa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008fe:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000902:	d202      	bcs.n	800090a <__aeabi_ddiv+0x6e>
 8000904:	085b      	lsrs	r3, r3, #1
 8000906:	ea4f 0232 	mov.w	r2, r2, rrx
 800090a:	1ab6      	subs	r6, r6, r2
 800090c:	eb65 0503 	sbc.w	r5, r5, r3
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800091a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000978:	ea55 0e06 	orrs.w	lr, r5, r6
 800097c:	d018      	beq.n	80009b0 <__aeabi_ddiv+0x114>
 800097e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000982:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000986:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800098e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000992:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000996:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099a:	d1c0      	bne.n	800091e <__aeabi_ddiv+0x82>
 800099c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a0:	d10b      	bne.n	80009ba <__aeabi_ddiv+0x11e>
 80009a2:	ea41 0100 	orr.w	r1, r1, r0
 80009a6:	f04f 0000 	mov.w	r0, #0
 80009aa:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009ae:	e7b6      	b.n	800091e <__aeabi_ddiv+0x82>
 80009b0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b4:	bf04      	itt	eq
 80009b6:	4301      	orreq	r1, r0
 80009b8:	2000      	moveq	r0, #0
 80009ba:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009be:	bf88      	it	hi
 80009c0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009c4:	f63f aeaf 	bhi.w	8000726 <__aeabi_dmul+0xde>
 80009c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009cc:	bf04      	itt	eq
 80009ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009d6:	f150 0000 	adcs.w	r0, r0, #0
 80009da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009de:	bd70      	pop	{r4, r5, r6, pc}
 80009e0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ec:	bfc2      	ittt	gt
 80009ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	popgt	{r4, r5, r6, pc}
 80009f8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009fc:	f04f 0e00 	mov.w	lr, #0
 8000a00:	3c01      	subs	r4, #1
 8000a02:	e690      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a04:	ea45 0e06 	orr.w	lr, r5, r6
 8000a08:	e68d      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a0a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a0e:	ea94 0f0c 	teq	r4, ip
 8000a12:	bf08      	it	eq
 8000a14:	ea95 0f0c 	teqeq	r5, ip
 8000a18:	f43f af3b 	beq.w	8000892 <__aeabi_dmul+0x24a>
 8000a1c:	ea94 0f0c 	teq	r4, ip
 8000a20:	d10a      	bne.n	8000a38 <__aeabi_ddiv+0x19c>
 8000a22:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a26:	f47f af34 	bne.w	8000892 <__aeabi_dmul+0x24a>
 8000a2a:	ea95 0f0c 	teq	r5, ip
 8000a2e:	f47f af25 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a32:	4610      	mov	r0, r2
 8000a34:	4619      	mov	r1, r3
 8000a36:	e72c      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a38:	ea95 0f0c 	teq	r5, ip
 8000a3c:	d106      	bne.n	8000a4c <__aeabi_ddiv+0x1b0>
 8000a3e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a42:	f43f aefd 	beq.w	8000840 <__aeabi_dmul+0x1f8>
 8000a46:	4610      	mov	r0, r2
 8000a48:	4619      	mov	r1, r3
 8000a4a:	e722      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a4c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a56:	f47f aec5 	bne.w	80007e4 <__aeabi_dmul+0x19c>
 8000a5a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a5e:	f47f af0d 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a62:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a66:	f47f aeeb 	bne.w	8000840 <__aeabi_dmul+0x1f8>
 8000a6a:	e712      	b.n	8000892 <__aeabi_dmul+0x24a>

08000a6c <__gedf2>:
 8000a6c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a70:	e006      	b.n	8000a80 <__cmpdf2+0x4>
 8000a72:	bf00      	nop

08000a74 <__ledf2>:
 8000a74:	f04f 0c01 	mov.w	ip, #1
 8000a78:	e002      	b.n	8000a80 <__cmpdf2+0x4>
 8000a7a:	bf00      	nop

08000a7c <__cmpdf2>:
 8000a7c:	f04f 0c01 	mov.w	ip, #1
 8000a80:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a90:	bf18      	it	ne
 8000a92:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a96:	d01b      	beq.n	8000ad0 <__cmpdf2+0x54>
 8000a98:	b001      	add	sp, #4
 8000a9a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a9e:	bf0c      	ite	eq
 8000aa0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa4:	ea91 0f03 	teqne	r1, r3
 8000aa8:	bf02      	ittt	eq
 8000aaa:	ea90 0f02 	teqeq	r0, r2
 8000aae:	2000      	moveq	r0, #0
 8000ab0:	4770      	bxeq	lr
 8000ab2:	f110 0f00 	cmn.w	r0, #0
 8000ab6:	ea91 0f03 	teq	r1, r3
 8000aba:	bf58      	it	pl
 8000abc:	4299      	cmppl	r1, r3
 8000abe:	bf08      	it	eq
 8000ac0:	4290      	cmpeq	r0, r2
 8000ac2:	bf2c      	ite	cs
 8000ac4:	17d8      	asrcs	r0, r3, #31
 8000ac6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aca:	f040 0001 	orr.w	r0, r0, #1
 8000ace:	4770      	bx	lr
 8000ad0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d102      	bne.n	8000ae0 <__cmpdf2+0x64>
 8000ada:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ade:	d107      	bne.n	8000af0 <__cmpdf2+0x74>
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae8:	d1d6      	bne.n	8000a98 <__cmpdf2+0x1c>
 8000aea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aee:	d0d3      	beq.n	8000a98 <__cmpdf2+0x1c>
 8000af0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af4:	4770      	bx	lr
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdrcmple>:
 8000af8:	4684      	mov	ip, r0
 8000afa:	4610      	mov	r0, r2
 8000afc:	4662      	mov	r2, ip
 8000afe:	468c      	mov	ip, r1
 8000b00:	4619      	mov	r1, r3
 8000b02:	4663      	mov	r3, ip
 8000b04:	e000      	b.n	8000b08 <__aeabi_cdcmpeq>
 8000b06:	bf00      	nop

08000b08 <__aeabi_cdcmpeq>:
 8000b08:	b501      	push	{r0, lr}
 8000b0a:	f7ff ffb7 	bl	8000a7c <__cmpdf2>
 8000b0e:	2800      	cmp	r0, #0
 8000b10:	bf48      	it	mi
 8000b12:	f110 0f00 	cmnmi.w	r0, #0
 8000b16:	bd01      	pop	{r0, pc}

08000b18 <__aeabi_dcmpeq>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff fff4 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b20:	bf0c      	ite	eq
 8000b22:	2001      	moveq	r0, #1
 8000b24:	2000      	movne	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmplt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffea 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmple>:
 8000b40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b44:	f7ff ffe0 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b48:	bf94      	ite	ls
 8000b4a:	2001      	movls	r0, #1
 8000b4c:	2000      	movhi	r0, #0
 8000b4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b52:	bf00      	nop

08000b54 <__aeabi_dcmpge>:
 8000b54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b58:	f7ff ffce 	bl	8000af8 <__aeabi_cdrcmple>
 8000b5c:	bf94      	ite	ls
 8000b5e:	2001      	movls	r0, #1
 8000b60:	2000      	movhi	r0, #0
 8000b62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b66:	bf00      	nop

08000b68 <__aeabi_dcmpgt>:
 8000b68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b6c:	f7ff ffc4 	bl	8000af8 <__aeabi_cdrcmple>
 8000b70:	bf34      	ite	cc
 8000b72:	2001      	movcc	r0, #1
 8000b74:	2000      	movcs	r0, #0
 8000b76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7a:	bf00      	nop

08000b7c <__aeabi_d2uiz>:
 8000b7c:	004a      	lsls	r2, r1, #1
 8000b7e:	d211      	bcs.n	8000ba4 <__aeabi_d2uiz+0x28>
 8000b80:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b84:	d211      	bcs.n	8000baa <__aeabi_d2uiz+0x2e>
 8000b86:	d50d      	bpl.n	8000ba4 <__aeabi_d2uiz+0x28>
 8000b88:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b90:	d40e      	bmi.n	8000bb0 <__aeabi_d2uiz+0x34>
 8000b92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b96:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	4770      	bx	lr
 8000ba4:	f04f 0000 	mov.w	r0, #0
 8000ba8:	4770      	bx	lr
 8000baa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bae:	d102      	bne.n	8000bb6 <__aeabi_d2uiz+0x3a>
 8000bb0:	f04f 30ff 	mov.w	r0, #4294967295
 8000bb4:	4770      	bx	lr
 8000bb6:	f04f 0000 	mov.w	r0, #0
 8000bba:	4770      	bx	lr

08000bbc <__aeabi_d2f>:
 8000bbc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bc0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bc4:	bf24      	itt	cs
 8000bc6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bca:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bce:	d90d      	bls.n	8000bec <__aeabi_d2f+0x30>
 8000bd0:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bd4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bdc:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000be0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be4:	bf08      	it	eq
 8000be6:	f020 0001 	biceq.w	r0, r0, #1
 8000bea:	4770      	bx	lr
 8000bec:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bf0:	d121      	bne.n	8000c36 <__aeabi_d2f+0x7a>
 8000bf2:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bf6:	bfbc      	itt	lt
 8000bf8:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bfc:	4770      	bxlt	lr
 8000bfe:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c02:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c06:	f1c2 0218 	rsb	r2, r2, #24
 8000c0a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c12:	fa20 f002 	lsr.w	r0, r0, r2
 8000c16:	bf18      	it	ne
 8000c18:	f040 0001 	orrne.w	r0, r0, #1
 8000c1c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c20:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c24:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c28:	ea40 000c 	orr.w	r0, r0, ip
 8000c2c:	fa23 f302 	lsr.w	r3, r3, r2
 8000c30:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c34:	e7cc      	b.n	8000bd0 <__aeabi_d2f+0x14>
 8000c36:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c3a:	d107      	bne.n	8000c4c <__aeabi_d2f+0x90>
 8000c3c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c40:	bf1e      	ittt	ne
 8000c42:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c46:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c4a:	4770      	bxne	lr
 8000c4c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c50:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c54:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop

08000c5c <__aeabi_uldivmod>:
 8000c5c:	b953      	cbnz	r3, 8000c74 <__aeabi_uldivmod+0x18>
 8000c5e:	b94a      	cbnz	r2, 8000c74 <__aeabi_uldivmod+0x18>
 8000c60:	2900      	cmp	r1, #0
 8000c62:	bf08      	it	eq
 8000c64:	2800      	cmpeq	r0, #0
 8000c66:	bf1c      	itt	ne
 8000c68:	f04f 31ff 	movne.w	r1, #4294967295
 8000c6c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c70:	f000 b9be 	b.w	8000ff0 <__aeabi_idiv0>
 8000c74:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c78:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c7c:	f000 f83c 	bl	8000cf8 <__udivmoddi4>
 8000c80:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c88:	b004      	add	sp, #16
 8000c8a:	4770      	bx	lr

08000c8c <__aeabi_d2lz>:
 8000c8c:	b538      	push	{r3, r4, r5, lr}
 8000c8e:	2200      	movs	r2, #0
 8000c90:	2300      	movs	r3, #0
 8000c92:	4604      	mov	r4, r0
 8000c94:	460d      	mov	r5, r1
 8000c96:	f7ff ff49 	bl	8000b2c <__aeabi_dcmplt>
 8000c9a:	b928      	cbnz	r0, 8000ca8 <__aeabi_d2lz+0x1c>
 8000c9c:	4620      	mov	r0, r4
 8000c9e:	4629      	mov	r1, r5
 8000ca0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca4:	f000 b80a 	b.w	8000cbc <__aeabi_d2ulz>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cae:	f000 f805 	bl	8000cbc <__aeabi_d2ulz>
 8000cb2:	4240      	negs	r0, r0
 8000cb4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb8:	bd38      	pop	{r3, r4, r5, pc}
 8000cba:	bf00      	nop

08000cbc <__aeabi_d2ulz>:
 8000cbc:	b5d0      	push	{r4, r6, r7, lr}
 8000cbe:	4b0c      	ldr	r3, [pc, #48]	@ (8000cf0 <__aeabi_d2ulz+0x34>)
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	4606      	mov	r6, r0
 8000cc4:	460f      	mov	r7, r1
 8000cc6:	f7ff fcbf 	bl	8000648 <__aeabi_dmul>
 8000cca:	f7ff ff57 	bl	8000b7c <__aeabi_d2uiz>
 8000cce:	4604      	mov	r4, r0
 8000cd0:	f7ff fc40 	bl	8000554 <__aeabi_ui2d>
 8000cd4:	4b07      	ldr	r3, [pc, #28]	@ (8000cf4 <__aeabi_d2ulz+0x38>)
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	f7ff fcb6 	bl	8000648 <__aeabi_dmul>
 8000cdc:	4602      	mov	r2, r0
 8000cde:	460b      	mov	r3, r1
 8000ce0:	4630      	mov	r0, r6
 8000ce2:	4639      	mov	r1, r7
 8000ce4:	f7ff faf8 	bl	80002d8 <__aeabi_dsub>
 8000ce8:	f7ff ff48 	bl	8000b7c <__aeabi_d2uiz>
 8000cec:	4621      	mov	r1, r4
 8000cee:	bdd0      	pop	{r4, r6, r7, pc}
 8000cf0:	3df00000 	.word	0x3df00000
 8000cf4:	41f00000 	.word	0x41f00000

08000cf8 <__udivmoddi4>:
 8000cf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cfc:	9d08      	ldr	r5, [sp, #32]
 8000cfe:	468e      	mov	lr, r1
 8000d00:	4604      	mov	r4, r0
 8000d02:	4688      	mov	r8, r1
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d14a      	bne.n	8000d9e <__udivmoddi4+0xa6>
 8000d08:	428a      	cmp	r2, r1
 8000d0a:	4617      	mov	r7, r2
 8000d0c:	d962      	bls.n	8000dd4 <__udivmoddi4+0xdc>
 8000d0e:	fab2 f682 	clz	r6, r2
 8000d12:	b14e      	cbz	r6, 8000d28 <__udivmoddi4+0x30>
 8000d14:	f1c6 0320 	rsb	r3, r6, #32
 8000d18:	fa01 f806 	lsl.w	r8, r1, r6
 8000d1c:	fa20 f303 	lsr.w	r3, r0, r3
 8000d20:	40b7      	lsls	r7, r6
 8000d22:	ea43 0808 	orr.w	r8, r3, r8
 8000d26:	40b4      	lsls	r4, r6
 8000d28:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d2c:	fa1f fc87 	uxth.w	ip, r7
 8000d30:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d34:	0c23      	lsrs	r3, r4, #16
 8000d36:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d3a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d3e:	fb01 f20c 	mul.w	r2, r1, ip
 8000d42:	429a      	cmp	r2, r3
 8000d44:	d909      	bls.n	8000d5a <__udivmoddi4+0x62>
 8000d46:	18fb      	adds	r3, r7, r3
 8000d48:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d4c:	f080 80ea 	bcs.w	8000f24 <__udivmoddi4+0x22c>
 8000d50:	429a      	cmp	r2, r3
 8000d52:	f240 80e7 	bls.w	8000f24 <__udivmoddi4+0x22c>
 8000d56:	3902      	subs	r1, #2
 8000d58:	443b      	add	r3, r7
 8000d5a:	1a9a      	subs	r2, r3, r2
 8000d5c:	b2a3      	uxth	r3, r4
 8000d5e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d62:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d6a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d6e:	459c      	cmp	ip, r3
 8000d70:	d909      	bls.n	8000d86 <__udivmoddi4+0x8e>
 8000d72:	18fb      	adds	r3, r7, r3
 8000d74:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d78:	f080 80d6 	bcs.w	8000f28 <__udivmoddi4+0x230>
 8000d7c:	459c      	cmp	ip, r3
 8000d7e:	f240 80d3 	bls.w	8000f28 <__udivmoddi4+0x230>
 8000d82:	443b      	add	r3, r7
 8000d84:	3802      	subs	r0, #2
 8000d86:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d8a:	eba3 030c 	sub.w	r3, r3, ip
 8000d8e:	2100      	movs	r1, #0
 8000d90:	b11d      	cbz	r5, 8000d9a <__udivmoddi4+0xa2>
 8000d92:	40f3      	lsrs	r3, r6
 8000d94:	2200      	movs	r2, #0
 8000d96:	e9c5 3200 	strd	r3, r2, [r5]
 8000d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d9e:	428b      	cmp	r3, r1
 8000da0:	d905      	bls.n	8000dae <__udivmoddi4+0xb6>
 8000da2:	b10d      	cbz	r5, 8000da8 <__udivmoddi4+0xb0>
 8000da4:	e9c5 0100 	strd	r0, r1, [r5]
 8000da8:	2100      	movs	r1, #0
 8000daa:	4608      	mov	r0, r1
 8000dac:	e7f5      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000dae:	fab3 f183 	clz	r1, r3
 8000db2:	2900      	cmp	r1, #0
 8000db4:	d146      	bne.n	8000e44 <__udivmoddi4+0x14c>
 8000db6:	4573      	cmp	r3, lr
 8000db8:	d302      	bcc.n	8000dc0 <__udivmoddi4+0xc8>
 8000dba:	4282      	cmp	r2, r0
 8000dbc:	f200 8105 	bhi.w	8000fca <__udivmoddi4+0x2d2>
 8000dc0:	1a84      	subs	r4, r0, r2
 8000dc2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000dc6:	2001      	movs	r0, #1
 8000dc8:	4690      	mov	r8, r2
 8000dca:	2d00      	cmp	r5, #0
 8000dcc:	d0e5      	beq.n	8000d9a <__udivmoddi4+0xa2>
 8000dce:	e9c5 4800 	strd	r4, r8, [r5]
 8000dd2:	e7e2      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000dd4:	2a00      	cmp	r2, #0
 8000dd6:	f000 8090 	beq.w	8000efa <__udivmoddi4+0x202>
 8000dda:	fab2 f682 	clz	r6, r2
 8000dde:	2e00      	cmp	r6, #0
 8000de0:	f040 80a4 	bne.w	8000f2c <__udivmoddi4+0x234>
 8000de4:	1a8a      	subs	r2, r1, r2
 8000de6:	0c03      	lsrs	r3, r0, #16
 8000de8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dec:	b280      	uxth	r0, r0
 8000dee:	b2bc      	uxth	r4, r7
 8000df0:	2101      	movs	r1, #1
 8000df2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000df6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dfa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dfe:	fb04 f20c 	mul.w	r2, r4, ip
 8000e02:	429a      	cmp	r2, r3
 8000e04:	d907      	bls.n	8000e16 <__udivmoddi4+0x11e>
 8000e06:	18fb      	adds	r3, r7, r3
 8000e08:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000e0c:	d202      	bcs.n	8000e14 <__udivmoddi4+0x11c>
 8000e0e:	429a      	cmp	r2, r3
 8000e10:	f200 80e0 	bhi.w	8000fd4 <__udivmoddi4+0x2dc>
 8000e14:	46c4      	mov	ip, r8
 8000e16:	1a9b      	subs	r3, r3, r2
 8000e18:	fbb3 f2fe 	udiv	r2, r3, lr
 8000e1c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e20:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e24:	fb02 f404 	mul.w	r4, r2, r4
 8000e28:	429c      	cmp	r4, r3
 8000e2a:	d907      	bls.n	8000e3c <__udivmoddi4+0x144>
 8000e2c:	18fb      	adds	r3, r7, r3
 8000e2e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e32:	d202      	bcs.n	8000e3a <__udivmoddi4+0x142>
 8000e34:	429c      	cmp	r4, r3
 8000e36:	f200 80ca 	bhi.w	8000fce <__udivmoddi4+0x2d6>
 8000e3a:	4602      	mov	r2, r0
 8000e3c:	1b1b      	subs	r3, r3, r4
 8000e3e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e42:	e7a5      	b.n	8000d90 <__udivmoddi4+0x98>
 8000e44:	f1c1 0620 	rsb	r6, r1, #32
 8000e48:	408b      	lsls	r3, r1
 8000e4a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e4e:	431f      	orrs	r7, r3
 8000e50:	fa0e f401 	lsl.w	r4, lr, r1
 8000e54:	fa20 f306 	lsr.w	r3, r0, r6
 8000e58:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e5c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e60:	4323      	orrs	r3, r4
 8000e62:	fa00 f801 	lsl.w	r8, r0, r1
 8000e66:	fa1f fc87 	uxth.w	ip, r7
 8000e6a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e6e:	0c1c      	lsrs	r4, r3, #16
 8000e70:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e74:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e78:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e7c:	45a6      	cmp	lr, r4
 8000e7e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e82:	d909      	bls.n	8000e98 <__udivmoddi4+0x1a0>
 8000e84:	193c      	adds	r4, r7, r4
 8000e86:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e8a:	f080 809c 	bcs.w	8000fc6 <__udivmoddi4+0x2ce>
 8000e8e:	45a6      	cmp	lr, r4
 8000e90:	f240 8099 	bls.w	8000fc6 <__udivmoddi4+0x2ce>
 8000e94:	3802      	subs	r0, #2
 8000e96:	443c      	add	r4, r7
 8000e98:	eba4 040e 	sub.w	r4, r4, lr
 8000e9c:	fa1f fe83 	uxth.w	lr, r3
 8000ea0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ea4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ea8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000eac:	fb03 fc0c 	mul.w	ip, r3, ip
 8000eb0:	45a4      	cmp	ip, r4
 8000eb2:	d908      	bls.n	8000ec6 <__udivmoddi4+0x1ce>
 8000eb4:	193c      	adds	r4, r7, r4
 8000eb6:	f103 3eff 	add.w	lr, r3, #4294967295
 8000eba:	f080 8082 	bcs.w	8000fc2 <__udivmoddi4+0x2ca>
 8000ebe:	45a4      	cmp	ip, r4
 8000ec0:	d97f      	bls.n	8000fc2 <__udivmoddi4+0x2ca>
 8000ec2:	3b02      	subs	r3, #2
 8000ec4:	443c      	add	r4, r7
 8000ec6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000eca:	eba4 040c 	sub.w	r4, r4, ip
 8000ece:	fba0 ec02 	umull	lr, ip, r0, r2
 8000ed2:	4564      	cmp	r4, ip
 8000ed4:	4673      	mov	r3, lr
 8000ed6:	46e1      	mov	r9, ip
 8000ed8:	d362      	bcc.n	8000fa0 <__udivmoddi4+0x2a8>
 8000eda:	d05f      	beq.n	8000f9c <__udivmoddi4+0x2a4>
 8000edc:	b15d      	cbz	r5, 8000ef6 <__udivmoddi4+0x1fe>
 8000ede:	ebb8 0203 	subs.w	r2, r8, r3
 8000ee2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ee6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eea:	fa22 f301 	lsr.w	r3, r2, r1
 8000eee:	431e      	orrs	r6, r3
 8000ef0:	40cc      	lsrs	r4, r1
 8000ef2:	e9c5 6400 	strd	r6, r4, [r5]
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	e74f      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000efa:	fbb1 fcf2 	udiv	ip, r1, r2
 8000efe:	0c01      	lsrs	r1, r0, #16
 8000f00:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000f04:	b280      	uxth	r0, r0
 8000f06:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000f0a:	463b      	mov	r3, r7
 8000f0c:	4638      	mov	r0, r7
 8000f0e:	463c      	mov	r4, r7
 8000f10:	46b8      	mov	r8, r7
 8000f12:	46be      	mov	lr, r7
 8000f14:	2620      	movs	r6, #32
 8000f16:	fbb1 f1f7 	udiv	r1, r1, r7
 8000f1a:	eba2 0208 	sub.w	r2, r2, r8
 8000f1e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f22:	e766      	b.n	8000df2 <__udivmoddi4+0xfa>
 8000f24:	4601      	mov	r1, r0
 8000f26:	e718      	b.n	8000d5a <__udivmoddi4+0x62>
 8000f28:	4610      	mov	r0, r2
 8000f2a:	e72c      	b.n	8000d86 <__udivmoddi4+0x8e>
 8000f2c:	f1c6 0220 	rsb	r2, r6, #32
 8000f30:	fa2e f302 	lsr.w	r3, lr, r2
 8000f34:	40b7      	lsls	r7, r6
 8000f36:	40b1      	lsls	r1, r6
 8000f38:	fa20 f202 	lsr.w	r2, r0, r2
 8000f3c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f40:	430a      	orrs	r2, r1
 8000f42:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f46:	b2bc      	uxth	r4, r7
 8000f48:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f4c:	0c11      	lsrs	r1, r2, #16
 8000f4e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f52:	fb08 f904 	mul.w	r9, r8, r4
 8000f56:	40b0      	lsls	r0, r6
 8000f58:	4589      	cmp	r9, r1
 8000f5a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f5e:	b280      	uxth	r0, r0
 8000f60:	d93e      	bls.n	8000fe0 <__udivmoddi4+0x2e8>
 8000f62:	1879      	adds	r1, r7, r1
 8000f64:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f68:	d201      	bcs.n	8000f6e <__udivmoddi4+0x276>
 8000f6a:	4589      	cmp	r9, r1
 8000f6c:	d81f      	bhi.n	8000fae <__udivmoddi4+0x2b6>
 8000f6e:	eba1 0109 	sub.w	r1, r1, r9
 8000f72:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f76:	fb09 f804 	mul.w	r8, r9, r4
 8000f7a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f7e:	b292      	uxth	r2, r2
 8000f80:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f84:	4542      	cmp	r2, r8
 8000f86:	d229      	bcs.n	8000fdc <__udivmoddi4+0x2e4>
 8000f88:	18ba      	adds	r2, r7, r2
 8000f8a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f8e:	d2c4      	bcs.n	8000f1a <__udivmoddi4+0x222>
 8000f90:	4542      	cmp	r2, r8
 8000f92:	d2c2      	bcs.n	8000f1a <__udivmoddi4+0x222>
 8000f94:	f1a9 0102 	sub.w	r1, r9, #2
 8000f98:	443a      	add	r2, r7
 8000f9a:	e7be      	b.n	8000f1a <__udivmoddi4+0x222>
 8000f9c:	45f0      	cmp	r8, lr
 8000f9e:	d29d      	bcs.n	8000edc <__udivmoddi4+0x1e4>
 8000fa0:	ebbe 0302 	subs.w	r3, lr, r2
 8000fa4:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000fa8:	3801      	subs	r0, #1
 8000faa:	46e1      	mov	r9, ip
 8000fac:	e796      	b.n	8000edc <__udivmoddi4+0x1e4>
 8000fae:	eba7 0909 	sub.w	r9, r7, r9
 8000fb2:	4449      	add	r1, r9
 8000fb4:	f1a8 0c02 	sub.w	ip, r8, #2
 8000fb8:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fbc:	fb09 f804 	mul.w	r8, r9, r4
 8000fc0:	e7db      	b.n	8000f7a <__udivmoddi4+0x282>
 8000fc2:	4673      	mov	r3, lr
 8000fc4:	e77f      	b.n	8000ec6 <__udivmoddi4+0x1ce>
 8000fc6:	4650      	mov	r0, sl
 8000fc8:	e766      	b.n	8000e98 <__udivmoddi4+0x1a0>
 8000fca:	4608      	mov	r0, r1
 8000fcc:	e6fd      	b.n	8000dca <__udivmoddi4+0xd2>
 8000fce:	443b      	add	r3, r7
 8000fd0:	3a02      	subs	r2, #2
 8000fd2:	e733      	b.n	8000e3c <__udivmoddi4+0x144>
 8000fd4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fd8:	443b      	add	r3, r7
 8000fda:	e71c      	b.n	8000e16 <__udivmoddi4+0x11e>
 8000fdc:	4649      	mov	r1, r9
 8000fde:	e79c      	b.n	8000f1a <__udivmoddi4+0x222>
 8000fe0:	eba1 0109 	sub.w	r1, r1, r9
 8000fe4:	46c4      	mov	ip, r8
 8000fe6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fea:	fb09 f804 	mul.w	r8, r9, r4
 8000fee:	e7c4      	b.n	8000f7a <__udivmoddi4+0x282>

08000ff0 <__aeabi_idiv0>:
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop

08000ff4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b088      	sub	sp, #32
 8000ff8:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ffa:	f002 f934 	bl	8003266 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ffe:	f000 f977 	bl	80012f0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001002:	f000 fb8d 	bl	8001720 <MX_GPIO_Init>
  MX_ADC1_Init();
 8001006:	f000 f9bf 	bl	8001388 <MX_ADC1_Init>
  MX_DAC1_Init();
 800100a:	f000 fa37 	bl	800147c <MX_DAC1_Init>
  MX_OPAMP1_Init();
 800100e:	f000 fa6f 	bl	80014f0 <MX_OPAMP1_Init>
  MX_TIM1_Init();
 8001012:	f000 fa99 	bl	8001548 <MX_TIM1_Init>
  MX_USART2_UART_Init();
 8001016:	f000 faeb 	bl	80015f0 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();  // Initialize USART3 for ESP32
 800101a:	f000 fb35 	bl	8001688 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */
  
  // **Clear UART buffers and state variables**
  memset(uart_rx_buffer, 0, UART_RX_BUFFER_SIZE);
 800101e:	2240      	movs	r2, #64	@ 0x40
 8001020:	2100      	movs	r1, #0
 8001022:	489c      	ldr	r0, [pc, #624]	@ (8001294 <main+0x2a0>)
 8001024:	f009 fb63 	bl	800a6ee <memset>
  uart_rx_index = 0;
 8001028:	4b9b      	ldr	r3, [pc, #620]	@ (8001298 <main+0x2a4>)
 800102a:	2200      	movs	r2, #0
 800102c:	701a      	strb	r2, [r3, #0]
  uart_rx_byte = 0;
 800102e:	4b9b      	ldr	r3, [pc, #620]	@ (800129c <main+0x2a8>)
 8001030:	2200      	movs	r2, #0
 8001032:	701a      	strb	r2, [r3, #0]
  uart_command_ready = 0;
 8001034:	4b9a      	ldr	r3, [pc, #616]	@ (80012a0 <main+0x2ac>)
 8001036:	2200      	movs	r2, #0
 8001038:	701a      	strb	r2, [r3, #0]
  
  // Initialize delay buffer to zero
  memset(delay_buffer, 0, sizeof(delay_buffer));
 800103a:	f44f 4296 	mov.w	r2, #19200	@ 0x4b00
 800103e:	2100      	movs	r1, #0
 8001040:	4898      	ldr	r0, [pc, #608]	@ (80012a4 <main+0x2b0>)
 8001042:	f009 fb54 	bl	800a6ee <memset>
  delay_write_index = 0;
 8001046:	4b98      	ldr	r3, [pc, #608]	@ (80012a8 <main+0x2b4>)
 8001048:	2200      	movs	r2, #0
 800104a:	601a      	str	r2, [r3, #0]
  
  // **ENSURE CLEAN SIGNAL ON STARTUP**
  // Make sure all effects are disabled and filter states are zeroed
  overdrive.enabled = 0;
 800104c:	4b97      	ldr	r3, [pc, #604]	@ (80012ac <main+0x2b8>)
 800104e:	2200      	movs	r2, #0
 8001050:	745a      	strb	r2, [r3, #17]
  overdrive.hp_state = 0.0f;
 8001052:	4b96      	ldr	r3, [pc, #600]	@ (80012ac <main+0x2b8>)
 8001054:	f04f 0200 	mov.w	r2, #0
 8001058:	615a      	str	r2, [r3, #20]
  overdrive.lp_state = 0.0f;
 800105a:	4b94      	ldr	r3, [pc, #592]	@ (80012ac <main+0x2b8>)
 800105c:	f04f 0200 	mov.w	r2, #0
 8001060:	619a      	str	r2, [r3, #24]
  delay_effect.enabled = 0;
 8001062:	4b93      	ldr	r3, [pc, #588]	@ (80012b0 <main+0x2bc>)
 8001064:	2200      	movs	r2, #0
 8001066:	741a      	strb	r2, [r3, #16]
  delay_effect.lp_state = 0.0f;
 8001068:	4b91      	ldr	r3, [pc, #580]	@ (80012b0 <main+0x2bc>)
 800106a:	f04f 0200 	mov.w	r2, #0
 800106e:	615a      	str	r2, [r3, #20]
  noise_gate.enabled = 1;  // Only gate is enabled
 8001070:	4b90      	ldr	r3, [pc, #576]	@ (80012b4 <main+0x2c0>)
 8001072:	2201      	movs	r2, #1
 8001074:	741a      	strb	r2, [r3, #16]
  noise_gate.envelope = 0.0f;
 8001076:	4b8f      	ldr	r3, [pc, #572]	@ (80012b4 <main+0x2c0>)
 8001078:	f04f 0200 	mov.w	r2, #0
 800107c:	60da      	str	r2, [r3, #12]
  output_volume = 0.8f;
 800107e:	4b8e      	ldr	r3, [pc, #568]	@ (80012b8 <main+0x2c4>)
 8001080:	4a8e      	ldr	r2, [pc, #568]	@ (80012bc <main+0x2c8>)
 8001082:	601a      	str	r2, [r3, #0]
  
  // **STARTUP LED PATTERN - 5 fast blinks to show STM32 is running**
  for(int i = 0; i < 5; i++)
 8001084:	2300      	movs	r3, #0
 8001086:	61fb      	str	r3, [r7, #28]
 8001088:	e014      	b.n	80010b4 <main+0xc0>
  {
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 800108a:	2201      	movs	r2, #1
 800108c:	2120      	movs	r1, #32
 800108e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001092:	f004 fc01 	bl	8005898 <HAL_GPIO_WritePin>
    HAL_Delay(100);
 8001096:	2064      	movs	r0, #100	@ 0x64
 8001098:	f002 f956 	bl	8003348 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 800109c:	2200      	movs	r2, #0
 800109e:	2120      	movs	r1, #32
 80010a0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80010a4:	f004 fbf8 	bl	8005898 <HAL_GPIO_WritePin>
    HAL_Delay(100);
 80010a8:	2064      	movs	r0, #100	@ 0x64
 80010aa:	f002 f94d 	bl	8003348 <HAL_Delay>
  for(int i = 0; i < 5; i++)
 80010ae:	69fb      	ldr	r3, [r7, #28]
 80010b0:	3301      	adds	r3, #1
 80010b2:	61fb      	str	r3, [r7, #28]
 80010b4:	69fb      	ldr	r3, [r7, #28]
 80010b6:	2b04      	cmp	r3, #4
 80010b8:	dde7      	ble.n	800108a <main+0x96>
  }
  
  // **Enable USART3 interrupt in NVIC for ESP32 communication**
  // CRITICAL: UART must have HIGHER priority than audio processing timer
  // so it can respond to commands even during heavy DSP load
  HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);  // Highest priority
 80010ba:	2200      	movs	r2, #0
 80010bc:	2100      	movs	r1, #0
 80010be:	2027      	movs	r0, #39	@ 0x27
 80010c0:	f003 fefd 	bl	8004ebe <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USART3_IRQn);
 80010c4:	2027      	movs	r0, #39	@ 0x27
 80010c6:	f003 ff14 	bl	8004ef2 <HAL_NVIC_EnableIRQ>
  
  // **Flush any garbage in UART before starting**
  HAL_Delay(100);
 80010ca:	2064      	movs	r0, #100	@ 0x64
 80010cc:	f002 f93c 	bl	8003348 <HAL_Delay>
  __HAL_UART_FLUSH_DRREGISTER(&huart3);
 80010d0:	4b7b      	ldr	r3, [pc, #492]	@ (80012c0 <main+0x2cc>)
 80010d2:	681b      	ldr	r3, [r3, #0]
 80010d4:	699a      	ldr	r2, [r3, #24]
 80010d6:	4b7a      	ldr	r3, [pc, #488]	@ (80012c0 <main+0x2cc>)
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	f042 0208 	orr.w	r2, r2, #8
 80010de:	619a      	str	r2, [r3, #24]
 80010e0:	4b77      	ldr	r3, [pc, #476]	@ (80012c0 <main+0x2cc>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	699a      	ldr	r2, [r3, #24]
 80010e6:	4b76      	ldr	r3, [pc, #472]	@ (80012c0 <main+0x2cc>)
 80010e8:	681b      	ldr	r3, [r3, #0]
 80010ea:	f042 0210 	orr.w	r2, r2, #16
 80010ee:	619a      	str	r2, [r3, #24]
  __HAL_UART_CLEAR_FLAG(&huart3, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 80010f0:	4b73      	ldr	r3, [pc, #460]	@ (80012c0 <main+0x2cc>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	220f      	movs	r2, #15
 80010f6:	621a      	str	r2, [r3, #32]
  
  // Start UART reception interrupt on USART3
  HAL_UART_Receive_IT(&huart3, &uart_rx_byte, 1);
 80010f8:	2201      	movs	r2, #1
 80010fa:	4968      	ldr	r1, [pc, #416]	@ (800129c <main+0x2a8>)
 80010fc:	4870      	ldr	r0, [pc, #448]	@ (80012c0 <main+0x2cc>)
 80010fe:	f006 fae3 	bl	80076c8 <HAL_UART_Receive_IT>
  
  // Start OPAMP
  HAL_OPAMP_Start(&hopamp1);
 8001102:	4870      	ldr	r0, [pc, #448]	@ (80012c4 <main+0x2d0>)
 8001104:	f004 fcca 	bl	8005a9c <HAL_OPAMP_Start>
  
  // Calibrate ADC (use DIFFERENTIAL mode since ADC is configured as differential)
  HAL_ADCEx_Calibration_Start(&hadc1, ADC_DIFFERENTIAL_ENDED);
 8001108:	496f      	ldr	r1, [pc, #444]	@ (80012c8 <main+0x2d4>)
 800110a:	4870      	ldr	r0, [pc, #448]	@ (80012cc <main+0x2d8>)
 800110c:	f003 fcf6 	bl	8004afc <HAL_ADCEx_Calibration_Start>
  
  // Start DAC
  HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 8001110:	2100      	movs	r1, #0
 8001112:	486f      	ldr	r0, [pc, #444]	@ (80012d0 <main+0x2dc>)
 8001114:	f003 ff2a 	bl	8004f6c <HAL_DAC_Start>
  
  // Calibrate baseline ADC value (read several samples)
  HAL_ADC_Start(&hadc1);
 8001118:	486c      	ldr	r0, [pc, #432]	@ (80012cc <main+0x2d8>)
 800111a:	f002 fd35 	bl	8003b88 <HAL_ADC_Start>
  HAL_Delay(10);
 800111e:	200a      	movs	r0, #10
 8001120:	f002 f912 	bl	8003348 <HAL_Delay>
  uint32_t adc_sum = 0;
 8001124:	2300      	movs	r3, #0
 8001126:	61bb      	str	r3, [r7, #24]
  uint16_t adc_min = 4095;
 8001128:	f640 73ff 	movw	r3, #4095	@ 0xfff
 800112c:	82fb      	strh	r3, [r7, #22]
  uint16_t adc_max = 0;
 800112e:	2300      	movs	r3, #0
 8001130:	82bb      	strh	r3, [r7, #20]
  
  for(int i = 0; i < 32; i++)
 8001132:	2300      	movs	r3, #0
 8001134:	613b      	str	r3, [r7, #16]
 8001136:	e024      	b.n	8001182 <main+0x18e>
  {
    HAL_ADC_Start(&hadc1);
 8001138:	4864      	ldr	r0, [pc, #400]	@ (80012cc <main+0x2d8>)
 800113a:	f002 fd25 	bl	8003b88 <HAL_ADC_Start>
    HAL_ADC_PollForConversion(&hadc1, 10);
 800113e:	210a      	movs	r1, #10
 8001140:	4862      	ldr	r0, [pc, #392]	@ (80012cc <main+0x2d8>)
 8001142:	f002 fe11 	bl	8003d68 <HAL_ADC_PollForConversion>
    uint16_t sample = HAL_ADC_GetValue(&hadc1);
 8001146:	4861      	ldr	r0, [pc, #388]	@ (80012cc <main+0x2d8>)
 8001148:	f002 fee6 	bl	8003f18 <HAL_ADC_GetValue>
 800114c:	4603      	mov	r3, r0
 800114e:	80fb      	strh	r3, [r7, #6]
    adc_sum += sample;
 8001150:	88fb      	ldrh	r3, [r7, #6]
 8001152:	69ba      	ldr	r2, [r7, #24]
 8001154:	4413      	add	r3, r2
 8001156:	61bb      	str	r3, [r7, #24]
    
    if(sample < adc_min) adc_min = sample;
 8001158:	88fa      	ldrh	r2, [r7, #6]
 800115a:	8afb      	ldrh	r3, [r7, #22]
 800115c:	429a      	cmp	r2, r3
 800115e:	d201      	bcs.n	8001164 <main+0x170>
 8001160:	88fb      	ldrh	r3, [r7, #6]
 8001162:	82fb      	strh	r3, [r7, #22]
    if(sample > adc_max) adc_max = sample;
 8001164:	88fa      	ldrh	r2, [r7, #6]
 8001166:	8abb      	ldrh	r3, [r7, #20]
 8001168:	429a      	cmp	r2, r3
 800116a:	d901      	bls.n	8001170 <main+0x17c>
 800116c:	88fb      	ldrh	r3, [r7, #6]
 800116e:	82bb      	strh	r3, [r7, #20]
    
    HAL_ADC_Stop(&hadc1);
 8001170:	4856      	ldr	r0, [pc, #344]	@ (80012cc <main+0x2d8>)
 8001172:	f002 fdc5 	bl	8003d00 <HAL_ADC_Stop>
    HAL_Delay(1);
 8001176:	2001      	movs	r0, #1
 8001178:	f002 f8e6 	bl	8003348 <HAL_Delay>
  for(int i = 0; i < 32; i++)
 800117c:	693b      	ldr	r3, [r7, #16]
 800117e:	3301      	adds	r3, #1
 8001180:	613b      	str	r3, [r7, #16]
 8001182:	693b      	ldr	r3, [r7, #16]
 8001184:	2b1f      	cmp	r3, #31
 8001186:	ddd7      	ble.n	8001138 <main+0x144>
  }
  adc_baseline = adc_sum / 32;
 8001188:	69bb      	ldr	r3, [r7, #24]
 800118a:	095b      	lsrs	r3, r3, #5
 800118c:	b29a      	uxth	r2, r3
 800118e:	4b51      	ldr	r3, [pc, #324]	@ (80012d4 <main+0x2e0>)
 8001190:	801a      	strh	r2, [r3, #0]
  adc_noise_level = (adc_max - adc_min) / 2;  // Measure noise
 8001192:	8aba      	ldrh	r2, [r7, #20]
 8001194:	8afb      	ldrh	r3, [r7, #22]
 8001196:	1ad3      	subs	r3, r2, r3
 8001198:	0fda      	lsrs	r2, r3, #31
 800119a:	4413      	add	r3, r2
 800119c:	105b      	asrs	r3, r3, #1
 800119e:	b29a      	uxth	r2, r3
 80011a0:	4b4d      	ldr	r3, [pc, #308]	@ (80012d8 <main+0x2e4>)
 80011a2:	801a      	strh	r2, [r3, #0]
  HAL_ADC_Stop(&hadc1);
 80011a4:	4849      	ldr	r0, [pc, #292]	@ (80012cc <main+0x2d8>)
 80011a6:	f002 fdab 	bl	8003d00 <HAL_ADC_Stop>
  
  // Configure Timer for 48kHz sampling rate
  TIM1_Config_For_Sampling();
 80011aa:	f000 faf7 	bl	800179c <TIM1_Config_For_Sampling>
  
  // Enable TIM1 interrupt in NVIC
  // IMPORTANT: Timer has LOWER priority than UART so commands can be processed
  // even during heavy audio processing
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 1, 0);  // Lower priority than UART
 80011ae:	2200      	movs	r2, #0
 80011b0:	2101      	movs	r1, #1
 80011b2:	2019      	movs	r0, #25
 80011b4:	f003 fe83 	bl	8004ebe <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 80011b8:	2019      	movs	r0, #25
 80011ba:	f003 fe9a 	bl	8004ef2 <HAL_NVIC_EnableIRQ>
  
  // Start Timer interrupt
  HAL_TIM_Base_Start_IT(&htim1);  // Re-enabled
 80011be:	4847      	ldr	r0, [pc, #284]	@ (80012dc <main+0x2e8>)
 80011c0:	f005 fcc8 	bl	8006b54 <HAL_TIM_Base_Start_IT>
  
  // Simple LED test - blink 3 times at startup to show baseline calibration done
  for(int i = 0; i < 6; i++)  // 6 toggles = 3 blinks
 80011c4:	2300      	movs	r3, #0
 80011c6:	60fb      	str	r3, [r7, #12]
 80011c8:	e00a      	b.n	80011e0 <main+0x1ec>
  {
    HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 80011ca:	2120      	movs	r1, #32
 80011cc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80011d0:	f004 fb7a 	bl	80058c8 <HAL_GPIO_TogglePin>
    HAL_Delay(200);
 80011d4:	20c8      	movs	r0, #200	@ 0xc8
 80011d6:	f002 f8b7 	bl	8003348 <HAL_Delay>
  for(int i = 0; i < 6; i++)  // 6 toggles = 3 blinks
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	3301      	adds	r3, #1
 80011de:	60fb      	str	r3, [r7, #12]
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	2b05      	cmp	r3, #5
 80011e4:	ddf1      	ble.n	80011ca <main+0x1d6>
  }
  
  // Turn LED OFF initially - will be toggled by timer interrupt
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 80011e6:	2200      	movs	r2, #0
 80011e8:	2120      	movs	r1, #32
 80011ea:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80011ee:	f004 fb53 	bl	8005898 <HAL_GPIO_WritePin>
  
  // Small delay before starting interrupts
  HAL_Delay(1000);
 80011f2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80011f6:	f002 f8a7 	bl	8003348 <HAL_Delay>

  // **Send READY signal to ESP32 once initialization is truly complete**
  const char *ready_msg = "STM32_READY\n";
 80011fa:	4b39      	ldr	r3, [pc, #228]	@ (80012e0 <main+0x2ec>)
 80011fc:	60bb      	str	r3, [r7, #8]
  HAL_UART_Transmit(&huart3, (uint8_t*)ready_msg, strlen(ready_msg), 100);
 80011fe:	68b8      	ldr	r0, [r7, #8]
 8001200:	f7ff f80e 	bl	8000220 <strlen>
 8001204:	4603      	mov	r3, r0
 8001206:	b29a      	uxth	r2, r3
 8001208:	2364      	movs	r3, #100	@ 0x64
 800120a:	68b9      	ldr	r1, [r7, #8]
 800120c:	482c      	ldr	r0, [pc, #176]	@ (80012c0 <main+0x2cc>)
 800120e:	f006 f9cd 	bl	80075ac <HAL_UART_Transmit>

  // Brief LED pulse to show comms are live
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 8001212:	2201      	movs	r2, #1
 8001214:	2120      	movs	r1, #32
 8001216:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800121a:	f004 fb3d 	bl	8005898 <HAL_GPIO_WritePin>
  HAL_Delay(100);
 800121e:	2064      	movs	r0, #100	@ 0x64
 8001220:	f002 f892 	bl	8003348 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8001224:	2200      	movs	r2, #0
 8001226:	2120      	movs	r1, #32
 8001228:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800122c:	f004 fb34 	bl	8005898 <HAL_GPIO_WritePin>
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

    // Process UART commands
    if (uart_command_ready)
 8001230:	4b1b      	ldr	r3, [pc, #108]	@ (80012a0 <main+0x2ac>)
 8001232:	781b      	ldrb	r3, [r3, #0]
 8001234:	b2db      	uxtb	r3, r3
 8001236:	2b00      	cmp	r3, #0
 8001238:	d004      	beq.n	8001244 <main+0x250>
    {
      uart_command_ready = 0;
 800123a:	4b19      	ldr	r3, [pc, #100]	@ (80012a0 <main+0x2ac>)
 800123c:	2200      	movs	r2, #0
 800123e:	701a      	strb	r2, [r3, #0]
      Parse_UART_Command();
 8001240:	f000 fe76 	bl	8001f30 <Parse_UART_Command>
    }
    
    // Handle command confirmation blinks (non-blocking)
    if (command_blink_counter > 0)
 8001244:	4b27      	ldr	r3, [pc, #156]	@ (80012e4 <main+0x2f0>)
 8001246:	781b      	ldrb	r3, [r3, #0]
 8001248:	b2db      	uxtb	r3, r3
 800124a:	2b00      	cmp	r3, #0
 800124c:	d018      	beq.n	8001280 <main+0x28c>
    {
      static uint32_t last_blink_time = 0;
      if (HAL_GetTick() - last_blink_time >= 100)  // Toggle every 100ms
 800124e:	f002 f86f 	bl	8003330 <HAL_GetTick>
 8001252:	4602      	mov	r2, r0
 8001254:	4b24      	ldr	r3, [pc, #144]	@ (80012e8 <main+0x2f4>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	1ad3      	subs	r3, r2, r3
 800125a:	2b63      	cmp	r3, #99	@ 0x63
 800125c:	d910      	bls.n	8001280 <main+0x28c>
      {
        HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 800125e:	2120      	movs	r1, #32
 8001260:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001264:	f004 fb30 	bl	80058c8 <HAL_GPIO_TogglePin>
        command_blink_counter--;
 8001268:	4b1e      	ldr	r3, [pc, #120]	@ (80012e4 <main+0x2f0>)
 800126a:	781b      	ldrb	r3, [r3, #0]
 800126c:	b2db      	uxtb	r3, r3
 800126e:	3b01      	subs	r3, #1
 8001270:	b2da      	uxtb	r2, r3
 8001272:	4b1c      	ldr	r3, [pc, #112]	@ (80012e4 <main+0x2f0>)
 8001274:	701a      	strb	r2, [r3, #0]
        last_blink_time = HAL_GetTick();
 8001276:	f002 f85b 	bl	8003330 <HAL_GetTick>
 800127a:	4603      	mov	r3, r0
 800127c:	4a1a      	ldr	r2, [pc, #104]	@ (80012e8 <main+0x2f4>)
 800127e:	6013      	str	r3, [r2, #0]
      }
    }
    
    // Process audio when flag is set (if needed)
    if (process_audio_flag)
 8001280:	4b1a      	ldr	r3, [pc, #104]	@ (80012ec <main+0x2f8>)
 8001282:	781b      	ldrb	r3, [r3, #0]
 8001284:	b2db      	uxtb	r3, r3
 8001286:	2b00      	cmp	r3, #0
 8001288:	d0d2      	beq.n	8001230 <main+0x23c>
    {
      process_audio_flag = 0;
 800128a:	4b18      	ldr	r3, [pc, #96]	@ (80012ec <main+0x2f8>)
 800128c:	2200      	movs	r2, #0
 800128e:	701a      	strb	r2, [r3, #0]
    if (uart_command_ready)
 8001290:	e7ce      	b.n	8001230 <main+0x23c>
 8001292:	bf00      	nop
 8001294:	2000507c 	.word	0x2000507c
 8001298:	200050bd 	.word	0x200050bd
 800129c:	200050bc 	.word	0x200050bc
 80012a0:	200050be 	.word	0x200050be
 80012a4:	20000570 	.word	0x20000570
 80012a8:	20005070 	.word	0x20005070
 80012ac:	20000000 	.word	0x20000000
 80012b0:	2000001c 	.word	0x2000001c
 80012b4:	20000034 	.word	0x20000034
 80012b8:	20000048 	.word	0x20000048
 80012bc:	3f4ccccd 	.word	0x3f4ccccd
 80012c0:	200003dc 	.word	0x200003dc
 80012c4:	200002c0 	.word	0x200002c0
 80012c8:	407f0000 	.word	0x407f0000
 80012cc:	20000240 	.word	0x20000240
 80012d0:	200002ac 	.word	0x200002ac
 80012d4:	2000004c 	.word	0x2000004c
 80012d8:	2000507a 	.word	0x2000507a
 80012dc:	200002fc 	.word	0x200002fc
 80012e0:	0800c888 	.word	0x0800c888
 80012e4:	20005078 	.word	0x20005078
 80012e8:	20005140 	.word	0x20005140
 80012ec:	20005074 	.word	0x20005074

080012f0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80012f0:	b580      	push	{r7, lr}
 80012f2:	b094      	sub	sp, #80	@ 0x50
 80012f4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012f6:	f107 0318 	add.w	r3, r7, #24
 80012fa:	2238      	movs	r2, #56	@ 0x38
 80012fc:	2100      	movs	r1, #0
 80012fe:	4618      	mov	r0, r3
 8001300:	f009 f9f5 	bl	800a6ee <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001304:	1d3b      	adds	r3, r7, #4
 8001306:	2200      	movs	r2, #0
 8001308:	601a      	str	r2, [r3, #0]
 800130a:	605a      	str	r2, [r3, #4]
 800130c:	609a      	str	r2, [r3, #8]
 800130e:	60da      	str	r2, [r3, #12]
 8001310:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 8001312:	2000      	movs	r0, #0
 8001314:	f004 fbf4 	bl	8005b00 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001318:	2302      	movs	r3, #2
 800131a:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800131c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001320:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001322:	2340      	movs	r3, #64	@ 0x40
 8001324:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001326:	2302      	movs	r3, #2
 8001328:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800132a:	2302      	movs	r3, #2
 800132c:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 800132e:	2304      	movs	r3, #4
 8001330:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 85;
 8001332:	2355      	movs	r3, #85	@ 0x55
 8001334:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001336:	2302      	movs	r3, #2
 8001338:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800133a:	2302      	movs	r3, #2
 800133c:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800133e:	2302      	movs	r3, #2
 8001340:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001342:	f107 0318 	add.w	r3, r7, #24
 8001346:	4618      	mov	r0, r3
 8001348:	f004 fc8e 	bl	8005c68 <HAL_RCC_OscConfig>
 800134c:	4603      	mov	r3, r0
 800134e:	2b00      	cmp	r3, #0
 8001350:	d001      	beq.n	8001356 <SystemClock_Config+0x66>
  {
    Error_Handler();
 8001352:	f001 fc93 	bl	8002c7c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001356:	230f      	movs	r3, #15
 8001358:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800135a:	2303      	movs	r3, #3
 800135c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800135e:	2300      	movs	r3, #0
 8001360:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001362:	2300      	movs	r3, #0
 8001364:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001366:	2300      	movs	r3, #0
 8001368:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800136a:	1d3b      	adds	r3, r7, #4
 800136c:	2104      	movs	r1, #4
 800136e:	4618      	mov	r0, r3
 8001370:	f004 ff8c 	bl	800628c <HAL_RCC_ClockConfig>
 8001374:	4603      	mov	r3, r0
 8001376:	2b00      	cmp	r3, #0
 8001378:	d001      	beq.n	800137e <SystemClock_Config+0x8e>
  {
    Error_Handler();
 800137a:	f001 fc7f 	bl	8002c7c <Error_Handler>
  }
}
 800137e:	bf00      	nop
 8001380:	3750      	adds	r7, #80	@ 0x50
 8001382:	46bd      	mov	sp, r7
 8001384:	bd80      	pop	{r7, pc}
	...

08001388 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001388:	b580      	push	{r7, lr}
 800138a:	b08c      	sub	sp, #48	@ 0x30
 800138c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 800138e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001392:	2200      	movs	r2, #0
 8001394:	601a      	str	r2, [r3, #0]
 8001396:	605a      	str	r2, [r3, #4]
 8001398:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 800139a:	1d3b      	adds	r3, r7, #4
 800139c:	2220      	movs	r2, #32
 800139e:	2100      	movs	r1, #0
 80013a0:	4618      	mov	r0, r3
 80013a2:	f009 f9a4 	bl	800a6ee <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80013a6:	4b32      	ldr	r3, [pc, #200]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013a8:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 80013ac:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80013ae:	4b30      	ldr	r3, [pc, #192]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013b0:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 80013b4:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80013b6:	4b2e      	ldr	r3, [pc, #184]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013b8:	2200      	movs	r2, #0
 80013ba:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80013bc:	4b2c      	ldr	r3, [pc, #176]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013be:	2200      	movs	r2, #0
 80013c0:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 80013c2:	4b2b      	ldr	r3, [pc, #172]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013c4:	2200      	movs	r2, #0
 80013c6:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80013c8:	4b29      	ldr	r3, [pc, #164]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80013ce:	4b28      	ldr	r3, [pc, #160]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013d0:	2204      	movs	r2, #4
 80013d2:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 80013d4:	4b26      	ldr	r3, [pc, #152]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013d6:	2200      	movs	r2, #0
 80013d8:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80013da:	4b25      	ldr	r3, [pc, #148]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013dc:	2200      	movs	r2, #0
 80013de:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 1;
 80013e0:	4b23      	ldr	r3, [pc, #140]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013e2:	2201      	movs	r2, #1
 80013e4:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013e6:	4b22      	ldr	r3, [pc, #136]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013e8:	2200      	movs	r2, #0
 80013ea:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80013ee:	4b20      	ldr	r3, [pc, #128]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013f0:	2200      	movs	r2, #0
 80013f2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80013f4:	4b1e      	ldr	r3, [pc, #120]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013f6:	2200      	movs	r2, #0
 80013f8:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80013fa:	4b1d      	ldr	r3, [pc, #116]	@ (8001470 <MX_ADC1_Init+0xe8>)
 80013fc:	2200      	movs	r2, #0
 80013fe:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001402:	4b1b      	ldr	r3, [pc, #108]	@ (8001470 <MX_ADC1_Init+0xe8>)
 8001404:	2200      	movs	r2, #0
 8001406:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 8001408:	4b19      	ldr	r3, [pc, #100]	@ (8001470 <MX_ADC1_Init+0xe8>)
 800140a:	2200      	movs	r2, #0
 800140c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001410:	4817      	ldr	r0, [pc, #92]	@ (8001470 <MX_ADC1_Init+0xe8>)
 8001412:	f002 fa35 	bl	8003880 <HAL_ADC_Init>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <MX_ADC1_Init+0x98>
  {
    Error_Handler();
 800141c:	f001 fc2e 	bl	8002c7c <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8001420:	2300      	movs	r3, #0
 8001422:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8001424:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001428:	4619      	mov	r1, r3
 800142a:	4811      	ldr	r0, [pc, #68]	@ (8001470 <MX_ADC1_Init+0xe8>)
 800142c:	f003 fbc8 	bl	8004bc0 <HAL_ADCEx_MultiModeConfigChannel>
 8001430:	4603      	mov	r3, r0
 8001432:	2b00      	cmp	r3, #0
 8001434:	d001      	beq.n	800143a <MX_ADC1_Init+0xb2>
  {
    Error_Handler();
 8001436:	f001 fc21 	bl	8002c7c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 800143a:	4b0e      	ldr	r3, [pc, #56]	@ (8001474 <MX_ADC1_Init+0xec>)
 800143c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800143e:	2306      	movs	r3, #6
 8001440:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8001442:	2300      	movs	r3, #0
 8001444:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 8001446:	4b0c      	ldr	r3, [pc, #48]	@ (8001478 <MX_ADC1_Init+0xf0>)
 8001448:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800144a:	2304      	movs	r3, #4
 800144c:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 800144e:	2300      	movs	r3, #0
 8001450:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001452:	1d3b      	adds	r3, r7, #4
 8001454:	4619      	mov	r1, r3
 8001456:	4806      	ldr	r0, [pc, #24]	@ (8001470 <MX_ADC1_Init+0xe8>)
 8001458:	f002 fd6c 	bl	8003f34 <HAL_ADC_ConfigChannel>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <MX_ADC1_Init+0xde>
  {
    Error_Handler();
 8001462:	f001 fc0b 	bl	8002c7c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001466:	bf00      	nop
 8001468:	3730      	adds	r7, #48	@ 0x30
 800146a:	46bd      	mov	sp, r7
 800146c:	bd80      	pop	{r7, pc}
 800146e:	bf00      	nop
 8001470:	20000240 	.word	0x20000240
 8001474:	04300002 	.word	0x04300002
 8001478:	407f0000 	.word	0x407f0000

0800147c <MX_DAC1_Init>:
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{
 800147c:	b580      	push	{r7, lr}
 800147e:	b08c      	sub	sp, #48	@ 0x30
 8001480:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8001482:	463b      	mov	r3, r7
 8001484:	2230      	movs	r2, #48	@ 0x30
 8001486:	2100      	movs	r1, #0
 8001488:	4618      	mov	r0, r3
 800148a:	f009 f930 	bl	800a6ee <memset>

  /* USER CODE END DAC1_Init 1 */

  /** DAC Initialization
  */
  hdac1.Instance = DAC1;
 800148e:	4b16      	ldr	r3, [pc, #88]	@ (80014e8 <MX_DAC1_Init+0x6c>)
 8001490:	4a16      	ldr	r2, [pc, #88]	@ (80014ec <MX_DAC1_Init+0x70>)
 8001492:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
 8001494:	4814      	ldr	r0, [pc, #80]	@ (80014e8 <MX_DAC1_Init+0x6c>)
 8001496:	f003 fd46 	bl	8004f26 <HAL_DAC_Init>
 800149a:	4603      	mov	r3, r0
 800149c:	2b00      	cmp	r3, #0
 800149e:	d001      	beq.n	80014a4 <MX_DAC1_Init+0x28>
  {
    Error_Handler();
 80014a0:	f001 fbec 	bl	8002c7c <Error_Handler>
  }

  /** DAC channel OUT1 config
  */
  sConfig.DAC_HighFrequency = DAC_HIGH_FREQUENCY_INTERFACE_MODE_AUTOMATIC;
 80014a4:	2302      	movs	r3, #2
 80014a6:	603b      	str	r3, [r7, #0]
  sConfig.DAC_DMADoubleDataMode = DISABLE;
 80014a8:	2300      	movs	r3, #0
 80014aa:	713b      	strb	r3, [r7, #4]
  sConfig.DAC_SignedFormat = DISABLE;
 80014ac:	2300      	movs	r3, #0
 80014ae:	717b      	strb	r3, [r7, #5]
  sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 80014b0:	2300      	movs	r3, #0
 80014b2:	60bb      	str	r3, [r7, #8]
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 80014b4:	2300      	movs	r3, #0
 80014b6:	60fb      	str	r3, [r7, #12]
  sConfig.DAC_Trigger2 = DAC_TRIGGER_NONE;
 80014b8:	2300      	movs	r3, #0
 80014ba:	613b      	str	r3, [r7, #16]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80014bc:	2300      	movs	r3, #0
 80014be:	617b      	str	r3, [r7, #20]
  sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_EXTERNAL;
 80014c0:	2301      	movs	r3, #1
 80014c2:	61bb      	str	r3, [r7, #24]
  sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 80014c4:	2300      	movs	r3, #0
 80014c6:	61fb      	str	r3, [r7, #28]
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 80014c8:	463b      	mov	r3, r7
 80014ca:	2200      	movs	r2, #0
 80014cc:	4619      	mov	r1, r3
 80014ce:	4806      	ldr	r0, [pc, #24]	@ (80014e8 <MX_DAC1_Init+0x6c>)
 80014d0:	f003 fde6 	bl	80050a0 <HAL_DAC_ConfigChannel>
 80014d4:	4603      	mov	r3, r0
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d001      	beq.n	80014de <MX_DAC1_Init+0x62>
  {
    Error_Handler();
 80014da:	f001 fbcf 	bl	8002c7c <Error_Handler>
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}
 80014de:	bf00      	nop
 80014e0:	3730      	adds	r7, #48	@ 0x30
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bd80      	pop	{r7, pc}
 80014e6:	bf00      	nop
 80014e8:	200002ac 	.word	0x200002ac
 80014ec:	50000800 	.word	0x50000800

080014f0 <MX_OPAMP1_Init>:
  * @brief OPAMP1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_OPAMP1_Init(void)
{
 80014f0:	b580      	push	{r7, lr}
 80014f2:	af00      	add	r7, sp, #0
  /* USER CODE END OPAMP1_Init 0 */

  /* USER CODE BEGIN OPAMP1_Init 1 */

  /* USER CODE END OPAMP1_Init 1 */
  hopamp1.Instance = OPAMP1;
 80014f4:	4b12      	ldr	r3, [pc, #72]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 80014f6:	4a13      	ldr	r2, [pc, #76]	@ (8001544 <MX_OPAMP1_Init+0x54>)
 80014f8:	601a      	str	r2, [r3, #0]
  hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 80014fa:	4b11      	ldr	r3, [pc, #68]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	605a      	str	r2, [r3, #4]
  hopamp1.Init.Mode = OPAMP_PGA_MODE;
 8001500:	4b0f      	ldr	r3, [pc, #60]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 8001502:	2240      	movs	r2, #64	@ 0x40
 8001504:	609a      	str	r2, [r3, #8]
  hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO2;
 8001506:	4b0e      	ldr	r3, [pc, #56]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 8001508:	2208      	movs	r2, #8
 800150a:	611a      	str	r2, [r3, #16]
  hopamp1.Init.InternalOutput = ENABLE;
 800150c:	4b0c      	ldr	r3, [pc, #48]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 800150e:	2201      	movs	r2, #1
 8001510:	751a      	strb	r2, [r3, #20]
  hopamp1.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 8001512:	4b0b      	ldr	r3, [pc, #44]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 8001514:	2200      	movs	r2, #0
 8001516:	619a      	str	r2, [r3, #24]
  hopamp1.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_NO;
 8001518:	4b09      	ldr	r3, [pc, #36]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 800151a:	2200      	movs	r2, #0
 800151c:	625a      	str	r2, [r3, #36]	@ 0x24
  hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_32_OR_MINUS_31;
 800151e:	4b08      	ldr	r3, [pc, #32]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 8001520:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001524:	629a      	str	r2, [r3, #40]	@ 0x28
  hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 8001526:	4b06      	ldr	r3, [pc, #24]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 8001528:	2200      	movs	r2, #0
 800152a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 800152c:	4804      	ldr	r0, [pc, #16]	@ (8001540 <MX_OPAMP1_Init+0x50>)
 800152e:	f004 f9e5 	bl	80058fc <HAL_OPAMP_Init>
 8001532:	4603      	mov	r3, r0
 8001534:	2b00      	cmp	r3, #0
 8001536:	d001      	beq.n	800153c <MX_OPAMP1_Init+0x4c>
  {
    Error_Handler();
 8001538:	f001 fba0 	bl	8002c7c <Error_Handler>
  }
  /* USER CODE BEGIN OPAMP1_Init 2 */

  /* USER CODE END OPAMP1_Init 2 */

}
 800153c:	bf00      	nop
 800153e:	bd80      	pop	{r7, pc}
 8001540:	200002c0 	.word	0x200002c0
 8001544:	40010300 	.word	0x40010300

08001548 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001548:	b580      	push	{r7, lr}
 800154a:	b088      	sub	sp, #32
 800154c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800154e:	f107 0310 	add.w	r3, r7, #16
 8001552:	2200      	movs	r2, #0
 8001554:	601a      	str	r2, [r3, #0]
 8001556:	605a      	str	r2, [r3, #4]
 8001558:	609a      	str	r2, [r3, #8]
 800155a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800155c:	1d3b      	adds	r3, r7, #4
 800155e:	2200      	movs	r2, #0
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	605a      	str	r2, [r3, #4]
 8001564:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001566:	4b20      	ldr	r3, [pc, #128]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 8001568:	4a20      	ldr	r2, [pc, #128]	@ (80015ec <MX_TIM1_Init+0xa4>)
 800156a:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800156c:	4b1e      	ldr	r3, [pc, #120]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 800156e:	2200      	movs	r2, #0
 8001570:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001572:	4b1d      	ldr	r3, [pc, #116]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 8001574:	2200      	movs	r2, #0
 8001576:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001578:	4b1b      	ldr	r3, [pc, #108]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 800157a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800157e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001580:	4b19      	ldr	r3, [pc, #100]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 8001582:	2200      	movs	r2, #0
 8001584:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001586:	4b18      	ldr	r3, [pc, #96]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 8001588:	2200      	movs	r2, #0
 800158a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800158c:	4b16      	ldr	r3, [pc, #88]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 800158e:	2200      	movs	r2, #0
 8001590:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001592:	4815      	ldr	r0, [pc, #84]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 8001594:	f005 fa86 	bl	8006aa4 <HAL_TIM_Base_Init>
 8001598:	4603      	mov	r3, r0
 800159a:	2b00      	cmp	r3, #0
 800159c:	d001      	beq.n	80015a2 <MX_TIM1_Init+0x5a>
  {
    Error_Handler();
 800159e:	f001 fb6d 	bl	8002c7c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80015a2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015a6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80015a8:	f107 0310 	add.w	r3, r7, #16
 80015ac:	4619      	mov	r1, r3
 80015ae:	480e      	ldr	r0, [pc, #56]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 80015b0:	f005 fc8a 	bl	8006ec8 <HAL_TIM_ConfigClockSource>
 80015b4:	4603      	mov	r3, r0
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d001      	beq.n	80015be <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 80015ba:	f001 fb5f 	bl	8002c7c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015be:	2300      	movs	r3, #0
 80015c0:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 80015c2:	2300      	movs	r3, #0
 80015c4:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015c6:	2300      	movs	r3, #0
 80015c8:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80015ca:	1d3b      	adds	r3, r7, #4
 80015cc:	4619      	mov	r1, r3
 80015ce:	4806      	ldr	r0, [pc, #24]	@ (80015e8 <MX_TIM1_Init+0xa0>)
 80015d0:	f005 fed4 	bl	800737c <HAL_TIMEx_MasterConfigSynchronization>
 80015d4:	4603      	mov	r3, r0
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d001      	beq.n	80015de <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 80015da:	f001 fb4f 	bl	8002c7c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80015de:	bf00      	nop
 80015e0:	3720      	adds	r7, #32
 80015e2:	46bd      	mov	sp, r7
 80015e4:	bd80      	pop	{r7, pc}
 80015e6:	bf00      	nop
 80015e8:	200002fc 	.word	0x200002fc
 80015ec:	40012c00 	.word	0x40012c00

080015f0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80015f4:	4b22      	ldr	r3, [pc, #136]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 80015f6:	4a23      	ldr	r2, [pc, #140]	@ (8001684 <MX_USART2_UART_Init+0x94>)
 80015f8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80015fa:	4b21      	ldr	r3, [pc, #132]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 80015fc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001600:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001602:	4b1f      	ldr	r3, [pc, #124]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001604:	2200      	movs	r2, #0
 8001606:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001608:	4b1d      	ldr	r3, [pc, #116]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800160a:	2200      	movs	r2, #0
 800160c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800160e:	4b1c      	ldr	r3, [pc, #112]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001610:	2200      	movs	r2, #0
 8001612:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001614:	4b1a      	ldr	r3, [pc, #104]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001616:	220c      	movs	r2, #12
 8001618:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800161a:	4b19      	ldr	r3, [pc, #100]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800161c:	2200      	movs	r2, #0
 800161e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001620:	4b17      	ldr	r3, [pc, #92]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001622:	2200      	movs	r2, #0
 8001624:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001626:	4b16      	ldr	r3, [pc, #88]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001628:	2200      	movs	r2, #0
 800162a:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800162c:	4b14      	ldr	r3, [pc, #80]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800162e:	2200      	movs	r2, #0
 8001630:	625a      	str	r2, [r3, #36]	@ 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001632:	4b13      	ldr	r3, [pc, #76]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 8001634:	2200      	movs	r2, #0
 8001636:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001638:	4811      	ldr	r0, [pc, #68]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800163a:	f005 ff67 	bl	800750c <HAL_UART_Init>
 800163e:	4603      	mov	r3, r0
 8001640:	2b00      	cmp	r3, #0
 8001642:	d001      	beq.n	8001648 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8001644:	f001 fb1a 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001648:	2100      	movs	r1, #0
 800164a:	480d      	ldr	r0, [pc, #52]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800164c:	f007 ffad 	bl	80095aa <HAL_UARTEx_SetTxFifoThreshold>
 8001650:	4603      	mov	r3, r0
 8001652:	2b00      	cmp	r3, #0
 8001654:	d001      	beq.n	800165a <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 8001656:	f001 fb11 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800165a:	2100      	movs	r1, #0
 800165c:	4808      	ldr	r0, [pc, #32]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800165e:	f007 ffe2 	bl	8009626 <HAL_UARTEx_SetRxFifoThreshold>
 8001662:	4603      	mov	r3, r0
 8001664:	2b00      	cmp	r3, #0
 8001666:	d001      	beq.n	800166c <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8001668:	f001 fb08 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 800166c:	4804      	ldr	r0, [pc, #16]	@ (8001680 <MX_USART2_UART_Init+0x90>)
 800166e:	f007 ff63 	bl	8009538 <HAL_UARTEx_DisableFifoMode>
 8001672:	4603      	mov	r3, r0
 8001674:	2b00      	cmp	r3, #0
 8001676:	d001      	beq.n	800167c <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8001678:	f001 fb00 	bl	8002c7c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800167c:	bf00      	nop
 800167e:	bd80      	pop	{r7, pc}
 8001680:	20000348 	.word	0x20000348
 8001684:	40004400 	.word	0x40004400

08001688 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function (for ESP32)
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	af00      	add	r7, sp, #0
  huart3.Instance = USART3;
 800168c:	4b22      	ldr	r3, [pc, #136]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 800168e:	4a23      	ldr	r2, [pc, #140]	@ (800171c <MX_USART3_UART_Init+0x94>)
 8001690:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8001692:	4b21      	ldr	r3, [pc, #132]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 8001694:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001698:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800169a:	4b1f      	ldr	r3, [pc, #124]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 800169c:	2200      	movs	r2, #0
 800169e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80016a0:	4b1d      	ldr	r3, [pc, #116]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016a2:	2200      	movs	r2, #0
 80016a4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80016a6:	4b1c      	ldr	r3, [pc, #112]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016a8:	2200      	movs	r2, #0
 80016aa:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80016ac:	4b1a      	ldr	r3, [pc, #104]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016ae:	220c      	movs	r2, #12
 80016b0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80016b2:	4b19      	ldr	r3, [pc, #100]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016b4:	2200      	movs	r2, #0
 80016b6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80016b8:	4b17      	ldr	r3, [pc, #92]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016ba:	2200      	movs	r2, #0
 80016bc:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80016be:	4b16      	ldr	r3, [pc, #88]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80016c4:	4b14      	ldr	r3, [pc, #80]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	625a      	str	r2, [r3, #36]	@ 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80016ca:	4b13      	ldr	r3, [pc, #76]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016cc:	2200      	movs	r2, #0
 80016ce:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80016d0:	4811      	ldr	r0, [pc, #68]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016d2:	f005 ff1b 	bl	800750c <HAL_UART_Init>
 80016d6:	4603      	mov	r3, r0
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d001      	beq.n	80016e0 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 80016dc:	f001 face 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80016e0:	2100      	movs	r1, #0
 80016e2:	480d      	ldr	r0, [pc, #52]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016e4:	f007 ff61 	bl	80095aa <HAL_UARTEx_SetTxFifoThreshold>
 80016e8:	4603      	mov	r3, r0
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d001      	beq.n	80016f2 <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 80016ee:	f001 fac5 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80016f2:	2100      	movs	r1, #0
 80016f4:	4808      	ldr	r0, [pc, #32]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 80016f6:	f007 ff96 	bl	8009626 <HAL_UARTEx_SetRxFifoThreshold>
 80016fa:	4603      	mov	r3, r0
 80016fc:	2b00      	cmp	r3, #0
 80016fe:	d001      	beq.n	8001704 <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8001700:	f001 fabc 	bl	8002c7c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 8001704:	4804      	ldr	r0, [pc, #16]	@ (8001718 <MX_USART3_UART_Init+0x90>)
 8001706:	f007 ff17 	bl	8009538 <HAL_UARTEx_DisableFifoMode>
 800170a:	4603      	mov	r3, r0
 800170c:	2b00      	cmp	r3, #0
 800170e:	d001      	beq.n	8001714 <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8001710:	f001 fab4 	bl	8002c7c <Error_Handler>
  }
}
 8001714:	bf00      	nop
 8001716:	bd80      	pop	{r7, pc}
 8001718:	200003dc 	.word	0x200003dc
 800171c:	40004800 	.word	0x40004800

08001720 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001720:	b580      	push	{r7, lr}
 8001722:	b088      	sub	sp, #32
 8001724:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001726:	f107 030c 	add.w	r3, r7, #12
 800172a:	2200      	movs	r2, #0
 800172c:	601a      	str	r2, [r3, #0]
 800172e:	605a      	str	r2, [r3, #4]
 8001730:	609a      	str	r2, [r3, #8]
 8001732:	60da      	str	r2, [r3, #12]
 8001734:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001736:	4b18      	ldr	r3, [pc, #96]	@ (8001798 <MX_GPIO_Init+0x78>)
 8001738:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800173a:	4a17      	ldr	r2, [pc, #92]	@ (8001798 <MX_GPIO_Init+0x78>)
 800173c:	f043 0320 	orr.w	r3, r3, #32
 8001740:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001742:	4b15      	ldr	r3, [pc, #84]	@ (8001798 <MX_GPIO_Init+0x78>)
 8001744:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001746:	f003 0320 	and.w	r3, r3, #32
 800174a:	60bb      	str	r3, [r7, #8]
 800174c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800174e:	4b12      	ldr	r3, [pc, #72]	@ (8001798 <MX_GPIO_Init+0x78>)
 8001750:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001752:	4a11      	ldr	r2, [pc, #68]	@ (8001798 <MX_GPIO_Init+0x78>)
 8001754:	f043 0301 	orr.w	r3, r3, #1
 8001758:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800175a:	4b0f      	ldr	r3, [pc, #60]	@ (8001798 <MX_GPIO_Init+0x78>)
 800175c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800175e:	f003 0301 	and.w	r3, r3, #1
 8001762:	607b      	str	r3, [r7, #4]
 8001764:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8001766:	2200      	movs	r2, #0
 8001768:	2120      	movs	r1, #32
 800176a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800176e:	f004 f893 	bl	8005898 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001772:	2320      	movs	r3, #32
 8001774:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001776:	2301      	movs	r3, #1
 8001778:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800177a:	2300      	movs	r3, #0
 800177c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800177e:	2300      	movs	r3, #0
 8001780:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001782:	f107 030c 	add.w	r3, r7, #12
 8001786:	4619      	mov	r1, r3
 8001788:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800178c:	f003 ff02 	bl	8005594 <HAL_GPIO_Init>
  
  // LED is already configured by CubeMX above as PA5 (GPIO_PIN_5)
  // USART3 pins (PC10/PC11) are configured automatically in HAL_UART_MspInit()

  /* USER CODE END MX_GPIO_Init_2 */
}
 8001790:	bf00      	nop
 8001792:	3720      	adds	r7, #32
 8001794:	46bd      	mov	sp, r7
 8001796:	bd80      	pop	{r7, pc}
 8001798:	40021000 	.word	0x40021000

0800179c <TIM1_Config_For_Sampling>:
  * @brief  Configure Timer1 for audio sampling rate (48kHz)
  * @param  None
  * @retval None
  */
void TIM1_Config_For_Sampling(void)
{
 800179c:	b580      	push	{r7, lr}
 800179e:	af00      	add	r7, sp, #0
  // Timer prescaler and period calculation for 48kHz:
  // Timer frequency = 170MHz
  // Desired interrupt frequency = 48kHz
  // ARR = (170,000,000 / 48,000) - 1 = 3541.67 ≈ 3541
  
  htim1.Instance = TIM1;
 80017a0:	4b0f      	ldr	r3, [pc, #60]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017a2:	4a10      	ldr	r2, [pc, #64]	@ (80017e4 <TIM1_Config_For_Sampling+0x48>)
 80017a4:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80017a6:	4b0e      	ldr	r3, [pc, #56]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017a8:	2200      	movs	r2, #0
 80017aa:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017ac:	4b0c      	ldr	r3, [pc, #48]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017ae:	2200      	movs	r2, #0
 80017b0:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 3541;  // 48kHz sampling rate
 80017b2:	4b0b      	ldr	r3, [pc, #44]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017b4:	f640 52d5 	movw	r2, #3541	@ 0xdd5
 80017b8:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017ba:	4b09      	ldr	r3, [pc, #36]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017bc:	2200      	movs	r2, #0
 80017be:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80017c0:	4b07      	ldr	r3, [pc, #28]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017c2:	2200      	movs	r2, #0
 80017c4:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80017c6:	4b06      	ldr	r3, [pc, #24]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017c8:	2280      	movs	r2, #128	@ 0x80
 80017ca:	619a      	str	r2, [r3, #24]
  
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80017cc:	4804      	ldr	r0, [pc, #16]	@ (80017e0 <TIM1_Config_For_Sampling+0x44>)
 80017ce:	f005 f969 	bl	8006aa4 <HAL_TIM_Base_Init>
 80017d2:	4603      	mov	r3, r0
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d001      	beq.n	80017dc <TIM1_Config_For_Sampling+0x40>
  {
    Error_Handler();
 80017d8:	f001 fa50 	bl	8002c7c <Error_Handler>
  }
}
 80017dc:	bf00      	nop
 80017de:	bd80      	pop	{r7, pc}
 80017e0:	200002fc 	.word	0x200002fc
 80017e4:	40012c00 	.word	0x40012c00

080017e8 <Apply_Overdrive>:
  *         - Multiple clipping modes (soft/hard/asymmetric)
  *         - Tone control with adjustable low-pass filter
  *         - Wet/dry mix for parallel processing
  */
float32_t Apply_Overdrive(float32_t input)
{
 80017e8:	b480      	push	{r7}
 80017ea:	b08f      	sub	sp, #60	@ 0x3c
 80017ec:	af00      	add	r7, sp, #0
 80017ee:	ed87 0a01 	vstr	s0, [r7, #4]
  if (!overdrive.enabled) return input;
 80017f2:	4bb6      	ldr	r3, [pc, #728]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80017f4:	7c5b      	ldrb	r3, [r3, #17]
 80017f6:	2b00      	cmp	r3, #0
 80017f8:	d101      	bne.n	80017fe <Apply_Overdrive+0x16>
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	e1a9      	b.n	8001b52 <Apply_Overdrive+0x36a>

  // 1. INPUT HIGH-PASS FILTER (removes DC offset and rumble below 80Hz)
  //    This prevents "muddy" bass from distorting
  //    Formula: y[n] = alpha * (y[n-1] + x[n] - x[n-1])
  //    alpha = 0.99 gives ~80Hz cutoff at 48kHz sample rate
  float32_t hp_alpha = 0.99f;
 80017fe:	4bb4      	ldr	r3, [pc, #720]	@ (8001ad0 <Apply_Overdrive+0x2e8>)
 8001800:	62fb      	str	r3, [r7, #44]	@ 0x2c
  float32_t hp_output = input - overdrive.hp_state;
 8001802:	4bb2      	ldr	r3, [pc, #712]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001804:	edd3 7a05 	vldr	s15, [r3, #20]
 8001808:	ed97 7a01 	vldr	s14, [r7, #4]
 800180c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001810:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
  overdrive.hp_state = input - hp_alpha * hp_output;
 8001814:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 8001818:	edd7 7a0a 	vldr	s15, [r7, #40]	@ 0x28
 800181c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001820:	ed97 7a01 	vldr	s14, [r7, #4]
 8001824:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001828:	4ba8      	ldr	r3, [pc, #672]	@ (8001acc <Apply_Overdrive+0x2e4>)
 800182a:	edc3 7a05 	vstr	s15, [r3, #20]
  
  // 2. APPLY GAIN
  float32_t gained = hp_output * overdrive.gain;
 800182e:	4ba7      	ldr	r3, [pc, #668]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001830:	edd3 7a00 	vldr	s15, [r3]
 8001834:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 8001838:	ee67 7a27 	vmul.f32	s15, s14, s15
 800183c:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
  
  // 3. CLIPPING STAGE - Multiple modes for different tones
  float32_t clipped;
  
  if (overdrive.mode == 0)  // SOFT CLIPPING (smooth, tube-like)
 8001840:	4ba2      	ldr	r3, [pc, #648]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001842:	7c1b      	ldrb	r3, [r3, #16]
 8001844:	2b00      	cmp	r3, #0
 8001846:	d13d      	bne.n	80018c4 <Apply_Overdrive+0xdc>
  {
    // Fast soft clipping using tanh approximation
    // Much faster than expf() while still smooth
    float32_t abs_gained = fabsf(gained);
 8001848:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800184c:	eef0 7ae7 	vabs.f32	s15, s15
 8001850:	edc7 7a04 	vstr	s15, [r7, #16]
    if (abs_gained < 0.001f)
 8001854:	edd7 7a04 	vldr	s15, [r7, #16]
 8001858:	ed9f 7a9e 	vldr	s14, [pc, #632]	@ 8001ad4 <Apply_Overdrive+0x2ec>
 800185c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001864:	d502      	bpl.n	800186c <Apply_Overdrive+0x84>
    {
      clipped = gained;  // Linear region for small signals
 8001866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001868:	637b      	str	r3, [r7, #52]	@ 0x34
 800186a:	e0db      	b.n	8001a24 <Apply_Overdrive+0x23c>
    }
    else
    {
      // Fast tanh approximation: tanh(x) ≈ x / (1 + |x|)
      // Even faster: use simple rational function
      if (gained > 3.0f)
 800186c:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8001870:	eeb0 7a08 	vmov.f32	s14, #8	@ 0x40400000  3.0
 8001874:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800187c:	dd03      	ble.n	8001886 <Apply_Overdrive+0x9e>
        clipped = 1.0f;
 800187e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001882:	637b      	str	r3, [r7, #52]	@ 0x34
 8001884:	e0ce      	b.n	8001a24 <Apply_Overdrive+0x23c>
      else if (gained < -3.0f)
 8001886:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800188a:	eeb8 7a08 	vmov.f32	s14, #136	@ 0xc0400000 -3.0
 800188e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001896:	d502      	bpl.n	800189e <Apply_Overdrive+0xb6>
        clipped = -1.0f;
 8001898:	4b8f      	ldr	r3, [pc, #572]	@ (8001ad8 <Apply_Overdrive+0x2f0>)
 800189a:	637b      	str	r3, [r7, #52]	@ 0x34
 800189c:	e0c2      	b.n	8001a24 <Apply_Overdrive+0x23c>
      else
        clipped = gained / (1.0f + fabsf(gained) * 0.3f);
 800189e:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80018a2:	eef0 7ae7 	vabs.f32	s15, s15
 80018a6:	ed9f 7a8d 	vldr	s14, [pc, #564]	@ 8001adc <Apply_Overdrive+0x2f4>
 80018aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80018b2:	ee37 7a87 	vadd.f32	s14, s15, s14
 80018b6:	edd7 6a09 	vldr	s13, [r7, #36]	@ 0x24
 80018ba:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80018be:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
 80018c2:	e0af      	b.n	8001a24 <Apply_Overdrive+0x23c>
    }
  }
  else if (overdrive.mode == 1)  // HARD CLIPPING (aggressive, solid-state)
 80018c4:	4b81      	ldr	r3, [pc, #516]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80018c6:	7c1b      	ldrb	r3, [r3, #16]
 80018c8:	2b01      	cmp	r3, #1
 80018ca:	d155      	bne.n	8001978 <Apply_Overdrive+0x190>
  {
    // Simplified hard clipping without powf() - MUCH faster
    float32_t abs_gained = fabsf(gained);
 80018cc:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80018d0:	eef0 7ae7 	vabs.f32	s15, s15
 80018d4:	edc7 7a08 	vstr	s15, [r7, #32]
    float32_t sign = (gained >= 0.0f) ? 1.0f : -1.0f;
 80018d8:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80018dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80018e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018e4:	db02      	blt.n	80018ec <Apply_Overdrive+0x104>
 80018e6:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80018ea:	e000      	b.n	80018ee <Apply_Overdrive+0x106>
 80018ec:	4b7a      	ldr	r3, [pc, #488]	@ (8001ad8 <Apply_Overdrive+0x2f0>)
 80018ee:	61fb      	str	r3, [r7, #28]
    float32_t th = overdrive.threshold;
 80018f0:	4b76      	ldr	r3, [pc, #472]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80018f2:	685b      	ldr	r3, [r3, #4]
 80018f4:	61bb      	str	r3, [r7, #24]
    
    if (abs_gained < th)
 80018f6:	ed97 7a08 	vldr	s14, [r7, #32]
 80018fa:	edd7 7a06 	vldr	s15, [r7, #24]
 80018fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001906:	d506      	bpl.n	8001916 <Apply_Overdrive+0x12e>
      clipped = 2.0f * gained;
 8001908:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800190c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001910:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
 8001914:	e086      	b.n	8001a24 <Apply_Overdrive+0x23c>
    else if (abs_gained < 2.0f * th)
 8001916:	edd7 7a06 	vldr	s15, [r7, #24]
 800191a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800191e:	ed97 7a08 	vldr	s14, [r7, #32]
 8001922:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800192a:	d522      	bpl.n	8001972 <Apply_Overdrive+0x18a>
    {
      // Replace powf() with fast quadratic approximation
      float32_t x = (2.0f - 3.0f * abs_gained / th);
 800192c:	edd7 7a08 	vldr	s15, [r7, #32]
 8001930:	eeb0 7a08 	vmov.f32	s14, #8	@ 0x40400000  3.0
 8001934:	ee67 6a87 	vmul.f32	s13, s15, s14
 8001938:	ed97 7a06 	vldr	s14, [r7, #24]
 800193c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001940:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8001944:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001948:	edc7 7a05 	vstr	s15, [r7, #20]
      clipped = sign * (3.0f - x * x) / 3.0f;  // x^2 is just multiplication
 800194c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001950:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8001954:	eeb0 7a08 	vmov.f32	s14, #8	@ 0x40400000  3.0
 8001958:	ee37 7a67 	vsub.f32	s14, s14, s15
 800195c:	edd7 7a07 	vldr	s15, [r7, #28]
 8001960:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001964:	eef0 6a08 	vmov.f32	s13, #8	@ 0x40400000  3.0
 8001968:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800196c:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
 8001970:	e058      	b.n	8001a24 <Apply_Overdrive+0x23c>
    }
    else
      clipped = sign;
 8001972:	69fb      	ldr	r3, [r7, #28]
 8001974:	637b      	str	r3, [r7, #52]	@ 0x34
 8001976:	e055      	b.n	8001a24 <Apply_Overdrive+0x23c>
  }
  else  // ASYMMETRIC CLIPPING (diode-like, classic overdrive)
  {
    // Different clipping for positive and negative - sounds more "organic"
    if (gained > 0.0f)
 8001978:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800197c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001984:	dd1f      	ble.n	80019c6 <Apply_Overdrive+0x1de>
    {
      // Positive side: harder clipping (like forward-biased diode)
      if (gained > overdrive.threshold)
 8001986:	4b51      	ldr	r3, [pc, #324]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001988:	edd3 7a01 	vldr	s15, [r3, #4]
 800198c:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 8001990:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001998:	dd12      	ble.n	80019c0 <Apply_Overdrive+0x1d8>
        clipped = overdrive.threshold + (gained - overdrive.threshold) * 0.1f;
 800199a:	4b4c      	ldr	r3, [pc, #304]	@ (8001acc <Apply_Overdrive+0x2e4>)
 800199c:	ed93 7a01 	vldr	s14, [r3, #4]
 80019a0:	4b4a      	ldr	r3, [pc, #296]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80019a2:	edd3 7a01 	vldr	s15, [r3, #4]
 80019a6:	edd7 6a09 	vldr	s13, [r7, #36]	@ 0x24
 80019aa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80019ae:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 8001ae8 <Apply_Overdrive+0x300>
 80019b2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80019b6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019ba:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
 80019be:	e031      	b.n	8001a24 <Apply_Overdrive+0x23c>
      else
        clipped = gained;
 80019c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80019c2:	637b      	str	r3, [r7, #52]	@ 0x34
 80019c4:	e02e      	b.n	8001a24 <Apply_Overdrive+0x23c>
    }
    else
    {
      // Negative side: softer clipping (like reverse-biased diode)
      if (gained < -overdrive.threshold * 1.5f)
 80019c6:	4b41      	ldr	r3, [pc, #260]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80019c8:	edd3 7a01 	vldr	s15, [r3, #4]
 80019cc:	eef1 7a67 	vneg.f32	s15, s15
 80019d0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80019d4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019d8:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 80019dc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80019e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019e4:	d51c      	bpl.n	8001a20 <Apply_Overdrive+0x238>
        clipped = -overdrive.threshold * 1.5f + (gained + overdrive.threshold * 1.5f) * 0.3f;
 80019e6:	4b39      	ldr	r3, [pc, #228]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80019e8:	edd3 7a01 	vldr	s15, [r3, #4]
 80019ec:	eef1 7a67 	vneg.f32	s15, s15
 80019f0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80019f4:	ee27 7a87 	vmul.f32	s14, s15, s14
 80019f8:	4b34      	ldr	r3, [pc, #208]	@ (8001acc <Apply_Overdrive+0x2e4>)
 80019fa:	edd3 7a01 	vldr	s15, [r3, #4]
 80019fe:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 8001a02:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8001a06:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8001a0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8001a0e:	eddf 6a33 	vldr	s13, [pc, #204]	@ 8001adc <Apply_Overdrive+0x2f4>
 8001a12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001a16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a1a:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
 8001a1e:	e001      	b.n	8001a24 <Apply_Overdrive+0x23c>
      else
        clipped = gained;
 8001a20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a22:	637b      	str	r3, [r7, #52]	@ 0x34
  
  // 4. TONE CONTROL - Adjustable low-pass filter
  //    Removes harsh high-frequency harmonics created by clipping
  //    tone=0 (dark), tone=0.5 (balanced), tone=1 (bright)
  //    Frequency range: ~1kHz to ~8kHz
  float32_t lp_alpha = 0.3f + overdrive.tone * 0.6f;  // Maps 0-1 to 0.3-0.9
 8001a24:	4b29      	ldr	r3, [pc, #164]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a26:	edd3 7a02 	vldr	s15, [r3, #8]
 8001a2a:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 8001ae0 <Apply_Overdrive+0x2f8>
 8001a2e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a32:	ed9f 7a2a 	vldr	s14, [pc, #168]	@ 8001adc <Apply_Overdrive+0x2f4>
 8001a36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001a3a:	edc7 7a03 	vstr	s15, [r7, #12]
  overdrive.lp_state = lp_alpha * clipped + (1.0f - lp_alpha) * overdrive.lp_state;
 8001a3e:	ed97 7a03 	vldr	s14, [r7, #12]
 8001a42:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8001a46:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a4a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001a4e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001a52:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001a56:	4b1d      	ldr	r3, [pc, #116]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a58:	edd3 7a06 	vldr	s15, [r3, #24]
 8001a5c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a64:	4b19      	ldr	r3, [pc, #100]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a66:	edc3 7a06 	vstr	s15, [r3, #24]
  
  // 5. WET/DRY MIX - Parallel processing for more natural sound
  //    Preserves some clean signal for clarity
  float32_t output = overdrive.mix * overdrive.lp_state + (1.0f - overdrive.mix) * input;
 8001a6a:	4b18      	ldr	r3, [pc, #96]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a6c:	ed93 7a03 	vldr	s14, [r3, #12]
 8001a70:	4b16      	ldr	r3, [pc, #88]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a72:	edd3 7a06 	vldr	s15, [r3, #24]
 8001a76:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a7a:	4b14      	ldr	r3, [pc, #80]	@ (8001acc <Apply_Overdrive+0x2e4>)
 8001a7c:	edd3 7a03 	vldr	s15, [r3, #12]
 8001a80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001a84:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001a88:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a8c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a90:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a94:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
  
  // 6. SOFT LIMITER - Prevent output from exceeding ±1.0
  //    Smoother than hard clipping
  if (output > 0.95f)
 8001a98:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001a9c:	ed9f 7a13 	vldr	s14, [pc, #76]	@ 8001aec <Apply_Overdrive+0x304>
 8001aa0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001aa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aa8:	dd22      	ble.n	8001af0 <Apply_Overdrive+0x308>
    output = 0.95f + (output - 0.95f) * 0.1f;
 8001aaa:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001aae:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 8001aec <Apply_Overdrive+0x304>
 8001ab2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001ab6:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8001ae8 <Apply_Overdrive+0x300>
 8001aba:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001abe:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001aec <Apply_Overdrive+0x304>
 8001ac2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001ac6:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
 8001aca:	e02a      	b.n	8001b22 <Apply_Overdrive+0x33a>
 8001acc:	20000000 	.word	0x20000000
 8001ad0:	3f7d70a4 	.word	0x3f7d70a4
 8001ad4:	3a83126f 	.word	0x3a83126f
 8001ad8:	bf800000 	.word	0xbf800000
 8001adc:	3e99999a 	.word	0x3e99999a
 8001ae0:	3f19999a 	.word	0x3f19999a
 8001ae4:	bf733333 	.word	0xbf733333
 8001ae8:	3dcccccd 	.word	0x3dcccccd
 8001aec:	3f733333 	.word	0x3f733333
  else if (output < -0.95f)
 8001af0:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001af4:	ed1f 7a05 	vldr	s14, [pc, #-20]	@ 8001ae4 <Apply_Overdrive+0x2fc>
 8001af8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b00:	d50f      	bpl.n	8001b22 <Apply_Overdrive+0x33a>
    output = -0.95f + (output + 0.95f) * 0.1f;
 8001b02:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001b06:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8001aec <Apply_Overdrive+0x304>
 8001b0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001b0e:	ed1f 7a0a 	vldr	s14, [pc, #-40]	@ 8001ae8 <Apply_Overdrive+0x300>
 8001b12:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b16:	ed1f 7a0b 	vldr	s14, [pc, #-44]	@ 8001aec <Apply_Overdrive+0x304>
 8001b1a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001b1e:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30
  
  // Final hard limit
  if (output > 1.0f) output = 1.0f;
 8001b22:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001b26:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001b2a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b32:	dd02      	ble.n	8001b3a <Apply_Overdrive+0x352>
 8001b34:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001b38:	633b      	str	r3, [r7, #48]	@ 0x30
  if (output < -1.0f) output = -1.0f;
 8001b3a:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8001b3e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8001b42:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b4a:	d501      	bpl.n	8001b50 <Apply_Overdrive+0x368>
 8001b4c:	4b05      	ldr	r3, [pc, #20]	@ (8001b64 <Apply_Overdrive+0x37c>)
 8001b4e:	633b      	str	r3, [r7, #48]	@ 0x30
  
  return output;
 8001b50:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
}
 8001b52:	ee07 3a90 	vmov	s15, r3
 8001b56:	eeb0 0a67 	vmov.f32	s0, s15
 8001b5a:	373c      	adds	r7, #60	@ 0x3c
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b62:	4770      	bx	lr
 8001b64:	bf800000 	.word	0xbf800000

08001b68 <Apply_Delay>:
  *         - Added tone/damping control for tape-like delay
  *         - Better feedback limiting to prevent runaway
  *         - Interpolation for smoother delay changes (future)
  */
float32_t Apply_Delay(float32_t input)
{
 8001b68:	b480      	push	{r7}
 8001b6a:	b08b      	sub	sp, #44	@ 0x2c
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	ed87 0a01 	vstr	s0, [r7, #4]
  if (!delay_effect.enabled) return input;
 8001b72:	4b64      	ldr	r3, [pc, #400]	@ (8001d04 <Apply_Delay+0x19c>)
 8001b74:	7c1b      	ldrb	r3, [r3, #16]
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d102      	bne.n	8001b80 <Apply_Delay+0x18>
 8001b7a:	edd7 7a01 	vldr	s15, [r7, #4]
 8001b7e:	e0ba      	b.n	8001cf6 <Apply_Delay+0x18e>
  
  // Calculate read position with proper wraparound
  int32_t delay_read_index = (int32_t)delay_write_index - (int32_t)delay_effect.delay_samples;
 8001b80:	4b61      	ldr	r3, [pc, #388]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	461a      	mov	r2, r3
 8001b86:	4b5f      	ldr	r3, [pc, #380]	@ (8001d04 <Apply_Delay+0x19c>)
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	1ad3      	subs	r3, r2, r3
 8001b8c:	627b      	str	r3, [r7, #36]	@ 0x24
  while (delay_read_index < 0)
 8001b8e:	e003      	b.n	8001b98 <Apply_Delay+0x30>
  {
    delay_read_index += DELAY_BUFFER_SIZE;
 8001b90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b92:	f503 5396 	add.w	r3, r3, #4800	@ 0x12c0
 8001b96:	627b      	str	r3, [r7, #36]	@ 0x24
  while (delay_read_index < 0)
 8001b98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	dbf8      	blt.n	8001b90 <Apply_Delay+0x28>
  }
  
  // Read delayed sample
  float32_t delayed_sample = delay_buffer[delay_read_index];
 8001b9e:	4a5b      	ldr	r2, [pc, #364]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001ba0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ba2:	009b      	lsls	r3, r3, #2
 8001ba4:	4413      	add	r3, r2
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	61fb      	str	r3, [r7, #28]
  
  // TONE CONTROL - Low-pass filter on feedback path (tape-like delay)
  // This makes each repeat progressively darker, more natural
  // tone=0 (very dark repeats), tone=0.5 (balanced), tone=1 (bright repeats)
  float32_t tone_alpha = 0.2f + delay_effect.tone * 0.7f;  // Maps to 0.2-0.9
 8001baa:	4b56      	ldr	r3, [pc, #344]	@ (8001d04 <Apply_Delay+0x19c>)
 8001bac:	edd3 7a03 	vldr	s15, [r3, #12]
 8001bb0:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8001d10 <Apply_Delay+0x1a8>
 8001bb4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001bb8:	ed9f 7a56 	vldr	s14, [pc, #344]	@ 8001d14 <Apply_Delay+0x1ac>
 8001bbc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001bc0:	edc7 7a06 	vstr	s15, [r7, #24]
  delay_effect.lp_state = tone_alpha * delayed_sample + (1.0f - tone_alpha) * delay_effect.lp_state;
 8001bc4:	ed97 7a06 	vldr	s14, [r7, #24]
 8001bc8:	edd7 7a07 	vldr	s15, [r7, #28]
 8001bcc:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001bd0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001bd4:	edd7 7a06 	vldr	s15, [r7, #24]
 8001bd8:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001bdc:	4b49      	ldr	r3, [pc, #292]	@ (8001d04 <Apply_Delay+0x19c>)
 8001bde:	edd3 7a05 	vldr	s15, [r3, #20]
 8001be2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001be6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001bea:	4b46      	ldr	r3, [pc, #280]	@ (8001d04 <Apply_Delay+0x19c>)
 8001bec:	edc3 7a05 	vstr	s15, [r3, #20]
  
  // Use filtered signal for feedback
  float32_t filtered_delay = delay_effect.lp_state;
 8001bf0:	4b44      	ldr	r3, [pc, #272]	@ (8001d04 <Apply_Delay+0x19c>)
 8001bf2:	695b      	ldr	r3, [r3, #20]
 8001bf4:	617b      	str	r3, [r7, #20]
  
  // FEEDBACK LIMITING - Prevent runaway oscillation
  // Soft limit feedback to prevent clicks/distortion
  float32_t feedback_signal = filtered_delay * delay_effect.feedback;
 8001bf6:	4b43      	ldr	r3, [pc, #268]	@ (8001d04 <Apply_Delay+0x19c>)
 8001bf8:	edd3 7a01 	vldr	s15, [r3, #4]
 8001bfc:	ed97 7a05 	vldr	s14, [r7, #20]
 8001c00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001c04:	edc7 7a08 	vstr	s15, [r7, #32]
  if (feedback_signal > 0.95f)
 8001c08:	edd7 7a08 	vldr	s15, [r7, #32]
 8001c0c:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8001d18 <Apply_Delay+0x1b0>
 8001c10:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c18:	dd02      	ble.n	8001c20 <Apply_Delay+0xb8>
    feedback_signal = 0.95f;
 8001c1a:	4b40      	ldr	r3, [pc, #256]	@ (8001d1c <Apply_Delay+0x1b4>)
 8001c1c:	623b      	str	r3, [r7, #32]
 8001c1e:	e00a      	b.n	8001c36 <Apply_Delay+0xce>
  else if (feedback_signal < -0.95f)
 8001c20:	edd7 7a08 	vldr	s15, [r7, #32]
 8001c24:	ed9f 7a3e 	vldr	s14, [pc, #248]	@ 8001d20 <Apply_Delay+0x1b8>
 8001c28:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c30:	d501      	bpl.n	8001c36 <Apply_Delay+0xce>
    feedback_signal = -0.95f;
 8001c32:	4b3c      	ldr	r3, [pc, #240]	@ (8001d24 <Apply_Delay+0x1bc>)
 8001c34:	623b      	str	r3, [r7, #32]
  
  // Write to delay buffer (input + limited feedback)
  delay_buffer[delay_write_index] = input + feedback_signal;
 8001c36:	4b34      	ldr	r3, [pc, #208]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	ed97 7a01 	vldr	s14, [r7, #4]
 8001c3e:	edd7 7a08 	vldr	s15, [r7, #32]
 8001c42:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c46:	4a31      	ldr	r2, [pc, #196]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001c48:	009b      	lsls	r3, r3, #2
 8001c4a:	4413      	add	r3, r2
 8001c4c:	edc3 7a00 	vstr	s15, [r3]
  
  // Additional safety: limit buffer writes
  if (delay_buffer[delay_write_index] > 1.0f)
 8001c50:	4b2d      	ldr	r3, [pc, #180]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	4a2d      	ldr	r2, [pc, #180]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001c56:	009b      	lsls	r3, r3, #2
 8001c58:	4413      	add	r3, r2
 8001c5a:	edd3 7a00 	vldr	s15, [r3]
 8001c5e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001c62:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c6a:	dd08      	ble.n	8001c7e <Apply_Delay+0x116>
    delay_buffer[delay_write_index] = 1.0f;
 8001c6c:	4b26      	ldr	r3, [pc, #152]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	4a26      	ldr	r2, [pc, #152]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001c72:	009b      	lsls	r3, r3, #2
 8001c74:	4413      	add	r3, r2
 8001c76:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8001c7a:	601a      	str	r2, [r3, #0]
 8001c7c:	e014      	b.n	8001ca8 <Apply_Delay+0x140>
  else if (delay_buffer[delay_write_index] < -1.0f)
 8001c7e:	4b22      	ldr	r3, [pc, #136]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	4a22      	ldr	r2, [pc, #136]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001c84:	009b      	lsls	r3, r3, #2
 8001c86:	4413      	add	r3, r2
 8001c88:	edd3 7a00 	vldr	s15, [r3]
 8001c8c:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8001c90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c98:	d506      	bpl.n	8001ca8 <Apply_Delay+0x140>
    delay_buffer[delay_write_index] = -1.0f;
 8001c9a:	4b1b      	ldr	r3, [pc, #108]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4a1b      	ldr	r2, [pc, #108]	@ (8001d0c <Apply_Delay+0x1a4>)
 8001ca0:	009b      	lsls	r3, r3, #2
 8001ca2:	4413      	add	r3, r2
 8001ca4:	4a20      	ldr	r2, [pc, #128]	@ (8001d28 <Apply_Delay+0x1c0>)
 8001ca6:	601a      	str	r2, [r3, #0]
  
  // Increment write index
  delay_write_index++;
 8001ca8:	4b17      	ldr	r3, [pc, #92]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	3301      	adds	r3, #1
 8001cae:	4a16      	ldr	r2, [pc, #88]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001cb0:	6013      	str	r3, [r2, #0]
  if (delay_write_index >= DELAY_BUFFER_SIZE)
 8001cb2:	4b15      	ldr	r3, [pc, #84]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	f5b3 5f96 	cmp.w	r3, #4800	@ 0x12c0
 8001cba:	d302      	bcc.n	8001cc2 <Apply_Delay+0x15a>
  {
    delay_write_index = 0;
 8001cbc:	4b12      	ldr	r3, [pc, #72]	@ (8001d08 <Apply_Delay+0x1a0>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	601a      	str	r2, [r3, #0]
  }
  
  // Mix dry and wet signals
  // Simple linear mix instead of equal-power crossfade (much faster)
  float32_t dry_gain = 1.0f - delay_effect.mix;
 8001cc2:	4b10      	ldr	r3, [pc, #64]	@ (8001d04 <Apply_Delay+0x19c>)
 8001cc4:	edd3 7a02 	vldr	s15, [r3, #8]
 8001cc8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001ccc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001cd0:	edc7 7a04 	vstr	s15, [r7, #16]
  float32_t wet_gain = delay_effect.mix;
 8001cd4:	4b0b      	ldr	r3, [pc, #44]	@ (8001d04 <Apply_Delay+0x19c>)
 8001cd6:	689b      	ldr	r3, [r3, #8]
 8001cd8:	60fb      	str	r3, [r7, #12]
  
  return (input * dry_gain) + (delayed_sample * wet_gain);
 8001cda:	ed97 7a01 	vldr	s14, [r7, #4]
 8001cde:	edd7 7a04 	vldr	s15, [r7, #16]
 8001ce2:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001ce6:	edd7 6a07 	vldr	s13, [r7, #28]
 8001cea:	edd7 7a03 	vldr	s15, [r7, #12]
 8001cee:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001cf2:	ee77 7a27 	vadd.f32	s15, s14, s15
}
 8001cf6:	eeb0 0a67 	vmov.f32	s0, s15
 8001cfa:	372c      	adds	r7, #44	@ 0x2c
 8001cfc:	46bd      	mov	sp, r7
 8001cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d02:	4770      	bx	lr
 8001d04:	2000001c 	.word	0x2000001c
 8001d08:	20005070 	.word	0x20005070
 8001d0c:	20000570 	.word	0x20000570
 8001d10:	3f333333 	.word	0x3f333333
 8001d14:	3e4ccccd 	.word	0x3e4ccccd
 8001d18:	3f733333 	.word	0x3f733333
 8001d1c:	3f733333 	.word	0x3f733333
 8001d20:	bf733333 	.word	0xbf733333
 8001d24:	bf733333 	.word	0xbf733333
 8001d28:	bf800000 	.word	0xbf800000

08001d2c <Apply_NoiseGate>:
  * @retval Gated output sample
  * @note   This should be the FIRST effect in the chain
  *         Prevents noise from being amplified by other effects
  */
float32_t Apply_NoiseGate(float32_t input)
{
 8001d2c:	b480      	push	{r7}
 8001d2e:	b089      	sub	sp, #36	@ 0x24
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	ed87 0a01 	vstr	s0, [r7, #4]
  if (!noise_gate.enabled) return input;
 8001d36:	4b78      	ldr	r3, [pc, #480]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001d38:	7c1b      	ldrb	r3, [r3, #16]
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d102      	bne.n	8001d44 <Apply_NoiseGate+0x18>
 8001d3e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001d42:	e0e1      	b.n	8001f08 <Apply_NoiseGate+0x1dc>
  
  // 1. ENVELOPE FOLLOWER - Track signal level
  //    Calculate absolute value (rectification)
  float32_t input_level = fabsf(input);
 8001d44:	edd7 7a01 	vldr	s15, [r7, #4]
 8001d48:	eef0 7ae7 	vabs.f32	s15, s15
 8001d4c:	edc7 7a04 	vstr	s15, [r7, #16]
  //    Original: exp(-1 / (time * sample_rate))
  //    For typical values (attack=0.001, release=0.1, fs=48000):
  //    attack_coeff ≈ 0.9792, release_coeff ≈ 0.9998
  //    
  // Fast approximation: coeff ≈ 1 - (1 / (time * fs))
  float32_t attack_coeff = 1.0f - (1.0f / (noise_gate.attack_time * SAMPLE_RATE));
 8001d50:	4b71      	ldr	r3, [pc, #452]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001d52:	edd3 7a01 	vldr	s15, [r3, #4]
 8001d56:	ed9f 7a71 	vldr	s14, [pc, #452]	@ 8001f1c <Apply_NoiseGate+0x1f0>
 8001d5a:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001d5e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001d62:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d66:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001d6a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001d6e:	edc7 7a07 	vstr	s15, [r7, #28]
  float32_t release_coeff = 1.0f - (1.0f / (noise_gate.release_time * SAMPLE_RATE));
 8001d72:	4b69      	ldr	r3, [pc, #420]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001d74:	edd3 7a02 	vldr	s15, [r3, #8]
 8001d78:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8001f1c <Apply_NoiseGate+0x1f0>
 8001d7c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001d80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8001d84:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d88:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001d8c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001d90:	edc7 7a06 	vstr	s15, [r7, #24]
  
  // Clamp to valid range [0, 1)
  if (attack_coeff < 0.0f) attack_coeff = 0.0f;
 8001d94:	edd7 7a07 	vldr	s15, [r7, #28]
 8001d98:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001d9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001da0:	d502      	bpl.n	8001da8 <Apply_NoiseGate+0x7c>
 8001da2:	f04f 0300 	mov.w	r3, #0
 8001da6:	61fb      	str	r3, [r7, #28]
  if (attack_coeff >= 1.0f) attack_coeff = 0.999f;
 8001da8:	edd7 7a07 	vldr	s15, [r7, #28]
 8001dac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001db0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001db4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001db8:	db01      	blt.n	8001dbe <Apply_NoiseGate+0x92>
 8001dba:	4b59      	ldr	r3, [pc, #356]	@ (8001f20 <Apply_NoiseGate+0x1f4>)
 8001dbc:	61fb      	str	r3, [r7, #28]
  if (release_coeff < 0.0f) release_coeff = 0.0f;
 8001dbe:	edd7 7a06 	vldr	s15, [r7, #24]
 8001dc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001dc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001dca:	d502      	bpl.n	8001dd2 <Apply_NoiseGate+0xa6>
 8001dcc:	f04f 0300 	mov.w	r3, #0
 8001dd0:	61bb      	str	r3, [r7, #24]
  if (release_coeff >= 1.0f) release_coeff = 0.999f;
 8001dd2:	edd7 7a06 	vldr	s15, [r7, #24]
 8001dd6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001dda:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001dde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001de2:	db01      	blt.n	8001de8 <Apply_NoiseGate+0xbc>
 8001de4:	4b4e      	ldr	r3, [pc, #312]	@ (8001f20 <Apply_NoiseGate+0x1f4>)
 8001de6:	61bb      	str	r3, [r7, #24]
  
  // 3. UPDATE ENVELOPE with attack/release
  if (input_level > noise_gate.envelope)
 8001de8:	4b4b      	ldr	r3, [pc, #300]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001dea:	edd3 7a03 	vldr	s15, [r3, #12]
 8001dee:	ed97 7a04 	vldr	s14, [r7, #16]
 8001df2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001df6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001dfa:	dd17      	ble.n	8001e2c <Apply_NoiseGate+0x100>
  {
    // Attack phase (signal rising) - fast
    noise_gate.envelope += (input_level - noise_gate.envelope) * (1.0f - attack_coeff);
 8001dfc:	4b46      	ldr	r3, [pc, #280]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001dfe:	ed93 7a03 	vldr	s14, [r3, #12]
 8001e02:	4b45      	ldr	r3, [pc, #276]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e04:	edd3 7a03 	vldr	s15, [r3, #12]
 8001e08:	edd7 6a04 	vldr	s13, [r7, #16]
 8001e0c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001e10:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8001e14:	edd7 7a07 	vldr	s15, [r7, #28]
 8001e18:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001e1c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001e20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e24:	4b3c      	ldr	r3, [pc, #240]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e26:	edc3 7a03 	vstr	s15, [r3, #12]
 8001e2a:	e016      	b.n	8001e5a <Apply_NoiseGate+0x12e>
  }
  else
  {
    // Release phase (signal falling) - slow
    noise_gate.envelope += (input_level - noise_gate.envelope) * (1.0f - release_coeff);
 8001e2c:	4b3a      	ldr	r3, [pc, #232]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e2e:	ed93 7a03 	vldr	s14, [r3, #12]
 8001e32:	4b39      	ldr	r3, [pc, #228]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e34:	edd3 7a03 	vldr	s15, [r3, #12]
 8001e38:	edd7 6a04 	vldr	s13, [r7, #16]
 8001e3c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001e40:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8001e44:	edd7 7a06 	vldr	s15, [r7, #24]
 8001e48:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001e4c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001e50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e54:	4b30      	ldr	r3, [pc, #192]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e56:	edc3 7a03 	vstr	s15, [r3, #12]
  
  // 4. CALCULATE GATE GAIN
  //    Creates smooth transition to avoid clicks
  float32_t gate_gain;
  
  if (noise_gate.envelope > noise_gate.threshold * 1.2f)
 8001e5a:	4b2f      	ldr	r3, [pc, #188]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e5c:	ed93 7a03 	vldr	s14, [r3, #12]
 8001e60:	4b2d      	ldr	r3, [pc, #180]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e62:	edd3 7a00 	vldr	s15, [r3]
 8001e66:	eddf 6a2f 	vldr	s13, [pc, #188]	@ 8001f24 <Apply_NoiseGate+0x1f8>
 8001e6a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001e6e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e76:	dd03      	ble.n	8001e80 <Apply_NoiseGate+0x154>
  {
    // Well above threshold - gate fully open
    gate_gain = 1.0f;
 8001e78:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001e7c:	617b      	str	r3, [r7, #20]
 8001e7e:	e03d      	b.n	8001efc <Apply_NoiseGate+0x1d0>
  }
  else if (noise_gate.envelope < noise_gate.threshold * 0.8f)
 8001e80:	4b25      	ldr	r3, [pc, #148]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e82:	ed93 7a03 	vldr	s14, [r3, #12]
 8001e86:	4b24      	ldr	r3, [pc, #144]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001e88:	edd3 7a00 	vldr	s15, [r3]
 8001e8c:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8001f28 <Apply_NoiseGate+0x1fc>
 8001e90:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001e94:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e9c:	d503      	bpl.n	8001ea6 <Apply_NoiseGate+0x17a>
  {
    // Well below threshold - gate fully closed
    gate_gain = 0.0f;
 8001e9e:	f04f 0300 	mov.w	r3, #0
 8001ea2:	617b      	str	r3, [r7, #20]
 8001ea4:	e02a      	b.n	8001efc <Apply_NoiseGate+0x1d0>
  }
  else
  {
    // Transition region - smooth crossfade
    // Linear interpolation between 0.8*threshold and 1.2*threshold
    float32_t range = noise_gate.threshold * 0.4f;  // 1.2 - 0.8 = 0.4
 8001ea6:	4b1c      	ldr	r3, [pc, #112]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001ea8:	edd3 7a00 	vldr	s15, [r3]
 8001eac:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 8001f2c <Apply_NoiseGate+0x200>
 8001eb0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001eb4:	edc7 7a03 	vstr	s15, [r7, #12]
    float32_t position = (noise_gate.envelope - noise_gate.threshold * 0.8f) / range;
 8001eb8:	4b17      	ldr	r3, [pc, #92]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001eba:	ed93 7a03 	vldr	s14, [r3, #12]
 8001ebe:	4b16      	ldr	r3, [pc, #88]	@ (8001f18 <Apply_NoiseGate+0x1ec>)
 8001ec0:	edd3 7a00 	vldr	s15, [r3]
 8001ec4:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8001f28 <Apply_NoiseGate+0x1fc>
 8001ec8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001ecc:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001ed0:	ed97 7a03 	vldr	s14, [r7, #12]
 8001ed4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001ed8:	edc7 7a02 	vstr	s15, [r7, #8]
    
    // Smooth S-curve for even better transition
    gate_gain = position * position * (3.0f - 2.0f * position);  // Smoothstep
 8001edc:	edd7 7a02 	vldr	s15, [r7, #8]
 8001ee0:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8001ee4:	edd7 7a02 	vldr	s15, [r7, #8]
 8001ee8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001eec:	eef0 6a08 	vmov.f32	s13, #8	@ 0x40400000  3.0
 8001ef0:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8001ef4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ef8:	edc7 7a05 	vstr	s15, [r7, #20]
  }
  
  // 5. APPLY GATE
  return input * gate_gain;
 8001efc:	ed97 7a01 	vldr	s14, [r7, #4]
 8001f00:	edd7 7a05 	vldr	s15, [r7, #20]
 8001f04:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 8001f08:	eeb0 0a67 	vmov.f32	s0, s15
 8001f0c:	3724      	adds	r7, #36	@ 0x24
 8001f0e:	46bd      	mov	sp, r7
 8001f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f14:	4770      	bx	lr
 8001f16:	bf00      	nop
 8001f18:	20000034 	.word	0x20000034
 8001f1c:	473b8000 	.word	0x473b8000
 8001f20:	3f7fbe77 	.word	0x3f7fbe77
 8001f24:	3f99999a 	.word	0x3f99999a
 8001f28:	3f4ccccd 	.word	0x3f4ccccd
 8001f2c:	3ecccccd 	.word	0x3ecccccd

08001f30 <Parse_UART_Command>:
  * @brief  Parse UART command from ESP32
  * @param  None
  * @retval None
  */
void Parse_UART_Command(void)
{
 8001f30:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001f34:	b0ba      	sub	sp, #232	@ 0xe8
 8001f36:	af0a      	add	r7, sp, #40	@ 0x28
  // DLY:OFF\n         - Disable delay
  // GATE:0.02,0.001,0.1\n - Set gate threshold=0.02, attack=0.001s, release=0.1s
  // GATE:ON\n         - Enable noise gate
  // GATE:OFF\n        - Disable noise gate
  
  char* cmd = (char*)uart_rx_buffer;
 8001f38:	4b49      	ldr	r3, [pc, #292]	@ (8002060 <Parse_UART_Command+0x130>)
 8001f3a:	673b      	str	r3, [r7, #112]	@ 0x70
  uint8_t command_received = 0;
 8001f3c:	2300      	movs	r3, #0
 8001f3e:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
  
  // LED blink to show command was received (visual feedback)
  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 8001f42:	2120      	movs	r1, #32
 8001f44:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001f48:	f003 fcbe 	bl	80058c8 <HAL_GPIO_TogglePin>
  
  if (strncmp(cmd, "VOL:", 4) == 0)
 8001f4c:	2204      	movs	r2, #4
 8001f4e:	4945      	ldr	r1, [pc, #276]	@ (8002064 <Parse_UART_Command+0x134>)
 8001f50:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8001f52:	f008 fbd4 	bl	800a6fe <strncmp>
 8001f56:	4603      	mov	r3, r0
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d13c      	bne.n	8001fd6 <Parse_UART_Command+0xa6>
  {
    float vol = atof(cmd + 4);
 8001f5c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8001f5e:	3304      	adds	r3, #4
 8001f60:	4618      	mov	r0, r3
 8001f62:	f007 fbed 	bl	8009740 <atof>
 8001f66:	ec53 2b10 	vmov	r2, r3, d0
 8001f6a:	4610      	mov	r0, r2
 8001f6c:	4619      	mov	r1, r3
 8001f6e:	f7fe fe25 	bl	8000bbc <__aeabi_d2f>
 8001f72:	4603      	mov	r3, r0
 8001f74:	653b      	str	r3, [r7, #80]	@ 0x50
    if (vol >= 0.0f && vol <= 1.0f)
 8001f76:	edd7 7a14 	vldr	s15, [r7, #80]	@ 0x50
 8001f7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f82:	f2c0 84f5 	blt.w	8002970 <Parse_UART_Command+0xa40>
 8001f86:	edd7 7a14 	vldr	s15, [r7, #80]	@ 0x50
 8001f8a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001f8e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f96:	f200 84eb 	bhi.w	8002970 <Parse_UART_Command+0xa40>
    {
      output_volume = vol;
 8001f9a:	4a33      	ldr	r2, [pc, #204]	@ (8002068 <Parse_UART_Command+0x138>)
 8001f9c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001f9e:	6013      	str	r3, [r2, #0]
      command_received = 1;
 8001fa0:	2301      	movs	r3, #1
 8001fa2:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation back to ESP32
      snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), "ACK:VOL=%.2f\n", vol);
 8001fa6:	6d38      	ldr	r0, [r7, #80]	@ 0x50
 8001fa8:	f7fe faf6 	bl	8000598 <__aeabi_f2d>
 8001fac:	4602      	mov	r2, r0
 8001fae:	460b      	mov	r3, r1
 8001fb0:	e9cd 2300 	strd	r2, r3, [sp]
 8001fb4:	4a2d      	ldr	r2, [pc, #180]	@ (800206c <Parse_UART_Command+0x13c>)
 8001fb6:	2180      	movs	r1, #128	@ 0x80
 8001fb8:	482d      	ldr	r0, [pc, #180]	@ (8002070 <Parse_UART_Command+0x140>)
 8001fba:	f008 fb1f 	bl	800a5fc <sniprintf>
      HAL_UART_Transmit(&huart3, (uint8_t*)uart_tx_buffer, strlen(uart_tx_buffer), 100);
 8001fbe:	482c      	ldr	r0, [pc, #176]	@ (8002070 <Parse_UART_Command+0x140>)
 8001fc0:	f7fe f92e 	bl	8000220 <strlen>
 8001fc4:	4603      	mov	r3, r0
 8001fc6:	b29a      	uxth	r2, r3
 8001fc8:	2364      	movs	r3, #100	@ 0x64
 8001fca:	4929      	ldr	r1, [pc, #164]	@ (8002070 <Parse_UART_Command+0x140>)
 8001fcc:	4829      	ldr	r0, [pc, #164]	@ (8002074 <Parse_UART_Command+0x144>)
 8001fce:	f005 faed 	bl	80075ac <HAL_UART_Transmit>
 8001fd2:	f000 bccd 	b.w	8002970 <Parse_UART_Command+0xa40>
    }
  }
  else if (strncmp(cmd, "OVR:", 4) == 0)
 8001fd6:	2204      	movs	r2, #4
 8001fd8:	4927      	ldr	r1, [pc, #156]	@ (8002078 <Parse_UART_Command+0x148>)
 8001fda:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8001fdc:	f008 fb8f 	bl	800a6fe <strncmp>
 8001fe0:	4603      	mov	r3, r0
 8001fe2:	2b00      	cmp	r3, #0
 8001fe4:	f040 81b3 	bne.w	800234e <Parse_UART_Command+0x41e>
  {
    if (strncmp(cmd + 4, "ON", 2) == 0)
 8001fe8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8001fea:	3304      	adds	r3, #4
 8001fec:	2202      	movs	r2, #2
 8001fee:	4923      	ldr	r1, [pc, #140]	@ (800207c <Parse_UART_Command+0x14c>)
 8001ff0:	4618      	mov	r0, r3
 8001ff2:	f008 fb84 	bl	800a6fe <strncmp>
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d113      	bne.n	8002024 <Parse_UART_Command+0xf4>
    {
      overdrive.enabled = 1;
 8001ffc:	4b20      	ldr	r3, [pc, #128]	@ (8002080 <Parse_UART_Command+0x150>)
 8001ffe:	2201      	movs	r2, #1
 8002000:	745a      	strb	r2, [r3, #17]
      command_received = 1;
 8002002:	2301      	movs	r3, #1
 8002004:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:OVR=ON\n";
 8002008:	4b1e      	ldr	r3, [pc, #120]	@ (8002084 <Parse_UART_Command+0x154>)
 800200a:	657b      	str	r3, [r7, #84]	@ 0x54
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 800200c:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 800200e:	f7fe f907 	bl	8000220 <strlen>
 8002012:	4603      	mov	r3, r0
 8002014:	b29a      	uxth	r2, r3
 8002016:	2364      	movs	r3, #100	@ 0x64
 8002018:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800201a:	4816      	ldr	r0, [pc, #88]	@ (8002074 <Parse_UART_Command+0x144>)
 800201c:	f005 fac6 	bl	80075ac <HAL_UART_Transmit>
 8002020:	f000 bca6 	b.w	8002970 <Parse_UART_Command+0xa40>
    }
    else if (strncmp(cmd + 4, "OFF", 3) == 0)
 8002024:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002026:	3304      	adds	r3, #4
 8002028:	2203      	movs	r2, #3
 800202a:	4917      	ldr	r1, [pc, #92]	@ (8002088 <Parse_UART_Command+0x158>)
 800202c:	4618      	mov	r0, r3
 800202e:	f008 fb66 	bl	800a6fe <strncmp>
 8002032:	4603      	mov	r3, r0
 8002034:	2b00      	cmp	r3, #0
 8002036:	d12b      	bne.n	8002090 <Parse_UART_Command+0x160>
    {
      overdrive.enabled = 0;
 8002038:	4b11      	ldr	r3, [pc, #68]	@ (8002080 <Parse_UART_Command+0x150>)
 800203a:	2200      	movs	r2, #0
 800203c:	745a      	strb	r2, [r3, #17]
      command_received = 1;
 800203e:	2301      	movs	r3, #1
 8002040:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:OVR=OFF\n";
 8002044:	4b11      	ldr	r3, [pc, #68]	@ (800208c <Parse_UART_Command+0x15c>)
 8002046:	65bb      	str	r3, [r7, #88]	@ 0x58
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 8002048:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800204a:	f7fe f8e9 	bl	8000220 <strlen>
 800204e:	4603      	mov	r3, r0
 8002050:	b29a      	uxth	r2, r3
 8002052:	2364      	movs	r3, #100	@ 0x64
 8002054:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 8002056:	4807      	ldr	r0, [pc, #28]	@ (8002074 <Parse_UART_Command+0x144>)
 8002058:	f005 faa8 	bl	80075ac <HAL_UART_Transmit>
 800205c:	f000 bc88 	b.w	8002970 <Parse_UART_Command+0xa40>
 8002060:	2000507c 	.word	0x2000507c
 8002064:	0800c898 	.word	0x0800c898
 8002068:	20000048 	.word	0x20000048
 800206c:	0800c8a0 	.word	0x0800c8a0
 8002070:	200050c0 	.word	0x200050c0
 8002074:	200003dc 	.word	0x200003dc
 8002078:	0800c8b0 	.word	0x0800c8b0
 800207c:	0800c8b8 	.word	0x0800c8b8
 8002080:	20000000 	.word	0x20000000
 8002084:	0800c8bc 	.word	0x0800c8bc
 8002088:	0800c8c8 	.word	0x0800c8c8
 800208c:	0800c8cc 	.word	0x0800c8cc
    else
    {
      // Parse parameters: gain,threshold,tone,mix,mode
      // Example: OVR:20.0,0.6,0.5,0.8,0
      char params[UART_RX_BUFFER_SIZE];
      strncpy(params, cmd + 4, sizeof(params));
 8002090:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002092:	1d19      	adds	r1, r3, #4
 8002094:	1d3b      	adds	r3, r7, #4
 8002096:	2240      	movs	r2, #64	@ 0x40
 8002098:	4618      	mov	r0, r3
 800209a:	f008 fb42 	bl	800a722 <strncpy>
      params[sizeof(params) - 1] = '\0';
 800209e:	2300      	movs	r3, #0
 80020a0:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43

      char *saveptr = NULL;
 80020a4:	2300      	movs	r3, #0
 80020a6:	64fb      	str	r3, [r7, #76]	@ 0x4c
      char *token = strtok_r(params, ",", &saveptr);
 80020a8:	f107 024c 	add.w	r2, r7, #76	@ 0x4c
 80020ac:	1d3b      	adds	r3, r7, #4
 80020ae:	49bb      	ldr	r1, [pc, #748]	@ (800239c <Parse_UART_Command+0x46c>)
 80020b0:	4618      	mov	r0, r3
 80020b2:	f008 fb71 	bl	800a798 <strtok_r>
 80020b6:	f8c7 00b8 	str.w	r0, [r7, #184]	@ 0xb8
      uint8_t parsed = 0;
 80020ba:	2300      	movs	r3, #0
 80020bc:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
      float gain = overdrive.gain;
 80020c0:	4bb7      	ldr	r3, [pc, #732]	@ (80023a0 <Parse_UART_Command+0x470>)
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      float threshold = overdrive.threshold;
 80020c8:	4bb5      	ldr	r3, [pc, #724]	@ (80023a0 <Parse_UART_Command+0x470>)
 80020ca:	685b      	ldr	r3, [r3, #4]
 80020cc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      float tone = overdrive.tone;
 80020d0:	4bb3      	ldr	r3, [pc, #716]	@ (80023a0 <Parse_UART_Command+0x470>)
 80020d2:	689b      	ldr	r3, [r3, #8]
 80020d4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
      float mix = overdrive.mix;
 80020d8:	4bb1      	ldr	r3, [pc, #708]	@ (80023a0 <Parse_UART_Command+0x470>)
 80020da:	68db      	ldr	r3, [r3, #12]
 80020dc:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
      int mode = overdrive.mode;
 80020e0:	4baf      	ldr	r3, [pc, #700]	@ (80023a0 <Parse_UART_Command+0x470>)
 80020e2:	7c1b      	ldrb	r3, [r3, #16]
 80020e4:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0

      if (token)
 80020e8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d01a      	beq.n	8002126 <Parse_UART_Command+0x1f6>
      {
        gain = atof(token);
 80020f0:	f8d7 00b8 	ldr.w	r0, [r7, #184]	@ 0xb8
 80020f4:	f007 fb24 	bl	8009740 <atof>
 80020f8:	ec53 2b10 	vmov	r2, r3, d0
 80020fc:	4610      	mov	r0, r2
 80020fe:	4619      	mov	r1, r3
 8002100:	f7fe fd5c 	bl	8000bbc <__aeabi_d2f>
 8002104:	4603      	mov	r3, r0
 8002106:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
        parsed++;
 800210a:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 800210e:	3301      	adds	r3, #1
 8002110:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
        token = strtok_r(NULL, ",", &saveptr);
 8002114:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8002118:	461a      	mov	r2, r3
 800211a:	49a0      	ldr	r1, [pc, #640]	@ (800239c <Parse_UART_Command+0x46c>)
 800211c:	2000      	movs	r0, #0
 800211e:	f008 fb3b 	bl	800a798 <strtok_r>
 8002122:	f8c7 00b8 	str.w	r0, [r7, #184]	@ 0xb8
      }
      if (token)
 8002126:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800212a:	2b00      	cmp	r3, #0
 800212c:	d01a      	beq.n	8002164 <Parse_UART_Command+0x234>
      {
        threshold = atof(token);
 800212e:	f8d7 00b8 	ldr.w	r0, [r7, #184]	@ 0xb8
 8002132:	f007 fb05 	bl	8009740 <atof>
 8002136:	ec53 2b10 	vmov	r2, r3, d0
 800213a:	4610      	mov	r0, r2
 800213c:	4619      	mov	r1, r3
 800213e:	f7fe fd3d 	bl	8000bbc <__aeabi_d2f>
 8002142:	4603      	mov	r3, r0
 8002144:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
        parsed++;
 8002148:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 800214c:	3301      	adds	r3, #1
 800214e:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
        token = strtok_r(NULL, ",", &saveptr);
 8002152:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8002156:	461a      	mov	r2, r3
 8002158:	4990      	ldr	r1, [pc, #576]	@ (800239c <Parse_UART_Command+0x46c>)
 800215a:	2000      	movs	r0, #0
 800215c:	f008 fb1c 	bl	800a798 <strtok_r>
 8002160:	f8c7 00b8 	str.w	r0, [r7, #184]	@ 0xb8
      }
      if (token)
 8002164:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8002168:	2b00      	cmp	r3, #0
 800216a:	d01a      	beq.n	80021a2 <Parse_UART_Command+0x272>
      {
        tone = atof(token);
 800216c:	f8d7 00b8 	ldr.w	r0, [r7, #184]	@ 0xb8
 8002170:	f007 fae6 	bl	8009740 <atof>
 8002174:	ec53 2b10 	vmov	r2, r3, d0
 8002178:	4610      	mov	r0, r2
 800217a:	4619      	mov	r1, r3
 800217c:	f7fe fd1e 	bl	8000bbc <__aeabi_d2f>
 8002180:	4603      	mov	r3, r0
 8002182:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
        parsed++;
 8002186:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 800218a:	3301      	adds	r3, #1
 800218c:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
        token = strtok_r(NULL, ",", &saveptr);
 8002190:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8002194:	461a      	mov	r2, r3
 8002196:	4981      	ldr	r1, [pc, #516]	@ (800239c <Parse_UART_Command+0x46c>)
 8002198:	2000      	movs	r0, #0
 800219a:	f008 fafd 	bl	800a798 <strtok_r>
 800219e:	f8c7 00b8 	str.w	r0, [r7, #184]	@ 0xb8
      }
      if (token)
 80021a2:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d01a      	beq.n	80021e0 <Parse_UART_Command+0x2b0>
      {
        mix = atof(token);
 80021aa:	f8d7 00b8 	ldr.w	r0, [r7, #184]	@ 0xb8
 80021ae:	f007 fac7 	bl	8009740 <atof>
 80021b2:	ec53 2b10 	vmov	r2, r3, d0
 80021b6:	4610      	mov	r0, r2
 80021b8:	4619      	mov	r1, r3
 80021ba:	f7fe fcff 	bl	8000bbc <__aeabi_d2f>
 80021be:	4603      	mov	r3, r0
 80021c0:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
        parsed++;
 80021c4:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 80021c8:	3301      	adds	r3, #1
 80021ca:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
        token = strtok_r(NULL, ",", &saveptr);
 80021ce:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 80021d2:	461a      	mov	r2, r3
 80021d4:	4971      	ldr	r1, [pc, #452]	@ (800239c <Parse_UART_Command+0x46c>)
 80021d6:	2000      	movs	r0, #0
 80021d8:	f008 fade 	bl	800a798 <strtok_r>
 80021dc:	f8c7 00b8 	str.w	r0, [r7, #184]	@ 0xb8
      }
      if (token)
 80021e0:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d00a      	beq.n	80021fe <Parse_UART_Command+0x2ce>
      {
        mode = atoi(token);
 80021e8:	f8d7 00b8 	ldr.w	r0, [r7, #184]	@ 0xb8
 80021ec:	f007 faab 	bl	8009746 <atoi>
 80021f0:	f8c7 00a0 	str.w	r0, [r7, #160]	@ 0xa0
        parsed++;
 80021f4:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 80021f8:	3301      	adds	r3, #1
 80021fa:	f887 30b7 	strb.w	r3, [r7, #183]	@ 0xb7
      }

      if (parsed >= 3)  // At least gain, threshold, tone
 80021fe:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 8002202:	2b02      	cmp	r3, #2
 8002204:	f240 83b4 	bls.w	8002970 <Parse_UART_Command+0xa40>
      {
        if (gain >= 1.0f && gain <= 100.0f) overdrive.gain = gain;
 8002208:	edd7 7a2c 	vldr	s15, [r7, #176]	@ 0xb0
 800220c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002210:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002218:	db0c      	blt.n	8002234 <Parse_UART_Command+0x304>
 800221a:	edd7 7a2c 	vldr	s15, [r7, #176]	@ 0xb0
 800221e:	ed9f 7a61 	vldr	s14, [pc, #388]	@ 80023a4 <Parse_UART_Command+0x474>
 8002222:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002226:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800222a:	d803      	bhi.n	8002234 <Parse_UART_Command+0x304>
 800222c:	4a5c      	ldr	r2, [pc, #368]	@ (80023a0 <Parse_UART_Command+0x470>)
 800222e:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002232:	6013      	str	r3, [r2, #0]
        if (threshold >= 0.1f && threshold <= 0.95f) overdrive.threshold = threshold;
 8002234:	edd7 7a2b 	vldr	s15, [r7, #172]	@ 0xac
 8002238:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 80023a8 <Parse_UART_Command+0x478>
 800223c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002244:	db0c      	blt.n	8002260 <Parse_UART_Command+0x330>
 8002246:	edd7 7a2b 	vldr	s15, [r7, #172]	@ 0xac
 800224a:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 80023ac <Parse_UART_Command+0x47c>
 800224e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002256:	d803      	bhi.n	8002260 <Parse_UART_Command+0x330>
 8002258:	4a51      	ldr	r2, [pc, #324]	@ (80023a0 <Parse_UART_Command+0x470>)
 800225a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800225e:	6053      	str	r3, [r2, #4]
        if (tone >= 0.0f && tone <= 1.0f) overdrive.tone = tone;
 8002260:	edd7 7a2a 	vldr	s15, [r7, #168]	@ 0xa8
 8002264:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800226c:	db0c      	blt.n	8002288 <Parse_UART_Command+0x358>
 800226e:	edd7 7a2a 	vldr	s15, [r7, #168]	@ 0xa8
 8002272:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002276:	eef4 7ac7 	vcmpe.f32	s15, s14
 800227a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800227e:	d803      	bhi.n	8002288 <Parse_UART_Command+0x358>
 8002280:	4a47      	ldr	r2, [pc, #284]	@ (80023a0 <Parse_UART_Command+0x470>)
 8002282:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002286:	6093      	str	r3, [r2, #8]
        if (parsed >= 4 && mix >= 0.0f && mix <= 1.0f) overdrive.mix = mix;
 8002288:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 800228c:	2b03      	cmp	r3, #3
 800228e:	d913      	bls.n	80022b8 <Parse_UART_Command+0x388>
 8002290:	edd7 7a29 	vldr	s15, [r7, #164]	@ 0xa4
 8002294:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800229c:	db0c      	blt.n	80022b8 <Parse_UART_Command+0x388>
 800229e:	edd7 7a29 	vldr	s15, [r7, #164]	@ 0xa4
 80022a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80022a6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80022aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022ae:	d803      	bhi.n	80022b8 <Parse_UART_Command+0x388>
 80022b0:	4a3b      	ldr	r2, [pc, #236]	@ (80023a0 <Parse_UART_Command+0x470>)
 80022b2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80022b6:	60d3      	str	r3, [r2, #12]
        if (parsed >= 5 && mode >= 0 && mode <= 2) overdrive.mode = mode;
 80022b8:	f897 30b7 	ldrb.w	r3, [r7, #183]	@ 0xb7
 80022bc:	2b04      	cmp	r3, #4
 80022be:	d90c      	bls.n	80022da <Parse_UART_Command+0x3aa>
 80022c0:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	db08      	blt.n	80022da <Parse_UART_Command+0x3aa>
 80022c8:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80022cc:	2b02      	cmp	r3, #2
 80022ce:	dc04      	bgt.n	80022da <Parse_UART_Command+0x3aa>
 80022d0:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80022d4:	b2da      	uxtb	r2, r3
 80022d6:	4b32      	ldr	r3, [pc, #200]	@ (80023a0 <Parse_UART_Command+0x470>)
 80022d8:	741a      	strb	r2, [r3, #16]

        // **DON'T auto-enable - let the user control on/off explicitly**
        // Parameters can be set while effect is disabled (for preset loading)
        
        command_received = 1;
 80022da:	2301      	movs	r3, #1
 80022dc:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
        // Send confirmation
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
                 "ACK:OVR=%.1f,%.2f,%.2f,%.2f,%d\n", 
                 overdrive.gain, overdrive.threshold, overdrive.tone, overdrive.mix, overdrive.mode);
 80022e0:	4b2f      	ldr	r3, [pc, #188]	@ (80023a0 <Parse_UART_Command+0x470>)
 80022e2:	681b      	ldr	r3, [r3, #0]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 80022e4:	4618      	mov	r0, r3
 80022e6:	f7fe f957 	bl	8000598 <__aeabi_f2d>
 80022ea:	4604      	mov	r4, r0
 80022ec:	460d      	mov	r5, r1
                 overdrive.gain, overdrive.threshold, overdrive.tone, overdrive.mix, overdrive.mode);
 80022ee:	4b2c      	ldr	r3, [pc, #176]	@ (80023a0 <Parse_UART_Command+0x470>)
 80022f0:	685b      	ldr	r3, [r3, #4]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 80022f2:	4618      	mov	r0, r3
 80022f4:	f7fe f950 	bl	8000598 <__aeabi_f2d>
 80022f8:	4680      	mov	r8, r0
 80022fa:	4689      	mov	r9, r1
                 overdrive.gain, overdrive.threshold, overdrive.tone, overdrive.mix, overdrive.mode);
 80022fc:	4b28      	ldr	r3, [pc, #160]	@ (80023a0 <Parse_UART_Command+0x470>)
 80022fe:	689b      	ldr	r3, [r3, #8]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 8002300:	4618      	mov	r0, r3
 8002302:	f7fe f949 	bl	8000598 <__aeabi_f2d>
 8002306:	4682      	mov	sl, r0
 8002308:	468b      	mov	fp, r1
                 overdrive.gain, overdrive.threshold, overdrive.tone, overdrive.mix, overdrive.mode);
 800230a:	4b25      	ldr	r3, [pc, #148]	@ (80023a0 <Parse_UART_Command+0x470>)
 800230c:	68db      	ldr	r3, [r3, #12]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 800230e:	4618      	mov	r0, r3
 8002310:	f7fe f942 	bl	8000598 <__aeabi_f2d>
 8002314:	4602      	mov	r2, r0
 8002316:	460b      	mov	r3, r1
                 overdrive.gain, overdrive.threshold, overdrive.tone, overdrive.mix, overdrive.mode);
 8002318:	4921      	ldr	r1, [pc, #132]	@ (80023a0 <Parse_UART_Command+0x470>)
 800231a:	7c09      	ldrb	r1, [r1, #16]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 800231c:	9108      	str	r1, [sp, #32]
 800231e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8002322:	e9cd ab04 	strd	sl, fp, [sp, #16]
 8002326:	e9cd 8902 	strd	r8, r9, [sp, #8]
 800232a:	e9cd 4500 	strd	r4, r5, [sp]
 800232e:	4a20      	ldr	r2, [pc, #128]	@ (80023b0 <Parse_UART_Command+0x480>)
 8002330:	2180      	movs	r1, #128	@ 0x80
 8002332:	4820      	ldr	r0, [pc, #128]	@ (80023b4 <Parse_UART_Command+0x484>)
 8002334:	f008 f962 	bl	800a5fc <sniprintf>
        HAL_UART_Transmit(&huart3, (uint8_t*)uart_tx_buffer, strlen(uart_tx_buffer), 100);
 8002338:	481e      	ldr	r0, [pc, #120]	@ (80023b4 <Parse_UART_Command+0x484>)
 800233a:	f7fd ff71 	bl	8000220 <strlen>
 800233e:	4603      	mov	r3, r0
 8002340:	b29a      	uxth	r2, r3
 8002342:	2364      	movs	r3, #100	@ 0x64
 8002344:	491b      	ldr	r1, [pc, #108]	@ (80023b4 <Parse_UART_Command+0x484>)
 8002346:	481c      	ldr	r0, [pc, #112]	@ (80023b8 <Parse_UART_Command+0x488>)
 8002348:	f005 f930 	bl	80075ac <HAL_UART_Transmit>
 800234c:	e310      	b.n	8002970 <Parse_UART_Command+0xa40>
      }
    }
  }
  else if (strncmp(cmd, "DLY:", 4) == 0)
 800234e:	2204      	movs	r2, #4
 8002350:	491a      	ldr	r1, [pc, #104]	@ (80023bc <Parse_UART_Command+0x48c>)
 8002352:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8002354:	f008 f9d3 	bl	800a6fe <strncmp>
 8002358:	4603      	mov	r3, r0
 800235a:	2b00      	cmp	r3, #0
 800235c:	f040 818f 	bne.w	800267e <Parse_UART_Command+0x74e>
  {
    if (strncmp(cmd + 4, "ON", 2) == 0)
 8002360:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002362:	3304      	adds	r3, #4
 8002364:	2202      	movs	r2, #2
 8002366:	4916      	ldr	r1, [pc, #88]	@ (80023c0 <Parse_UART_Command+0x490>)
 8002368:	4618      	mov	r0, r3
 800236a:	f008 f9c8 	bl	800a6fe <strncmp>
 800236e:	4603      	mov	r3, r0
 8002370:	2b00      	cmp	r3, #0
 8002372:	d12b      	bne.n	80023cc <Parse_UART_Command+0x49c>
    {
      delay_effect.enabled = 1;
 8002374:	4b13      	ldr	r3, [pc, #76]	@ (80023c4 <Parse_UART_Command+0x494>)
 8002376:	2201      	movs	r2, #1
 8002378:	741a      	strb	r2, [r3, #16]
      command_received = 1;
 800237a:	2301      	movs	r3, #1
 800237c:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:DLY=ON\n";
 8002380:	4b11      	ldr	r3, [pc, #68]	@ (80023c8 <Parse_UART_Command+0x498>)
 8002382:	65fb      	str	r3, [r7, #92]	@ 0x5c
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 8002384:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
 8002386:	f7fd ff4b 	bl	8000220 <strlen>
 800238a:	4603      	mov	r3, r0
 800238c:	b29a      	uxth	r2, r3
 800238e:	2364      	movs	r3, #100	@ 0x64
 8002390:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 8002392:	4809      	ldr	r0, [pc, #36]	@ (80023b8 <Parse_UART_Command+0x488>)
 8002394:	f005 f90a 	bl	80075ac <HAL_UART_Transmit>
 8002398:	e2ea      	b.n	8002970 <Parse_UART_Command+0xa40>
 800239a:	bf00      	nop
 800239c:	0800c8dc 	.word	0x0800c8dc
 80023a0:	20000000 	.word	0x20000000
 80023a4:	42c80000 	.word	0x42c80000
 80023a8:	3dcccccd 	.word	0x3dcccccd
 80023ac:	3f733333 	.word	0x3f733333
 80023b0:	0800c8e0 	.word	0x0800c8e0
 80023b4:	200050c0 	.word	0x200050c0
 80023b8:	200003dc 	.word	0x200003dc
 80023bc:	0800c900 	.word	0x0800c900
 80023c0:	0800c8b8 	.word	0x0800c8b8
 80023c4:	2000001c 	.word	0x2000001c
 80023c8:	0800c908 	.word	0x0800c908
    }
    else if (strncmp(cmd + 4, "OFF", 3) == 0)
 80023cc:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80023ce:	3304      	adds	r3, #4
 80023d0:	2203      	movs	r2, #3
 80023d2:	49be      	ldr	r1, [pc, #760]	@ (80026cc <Parse_UART_Command+0x79c>)
 80023d4:	4618      	mov	r0, r3
 80023d6:	f008 f992 	bl	800a6fe <strncmp>
 80023da:	4603      	mov	r3, r0
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d112      	bne.n	8002406 <Parse_UART_Command+0x4d6>
    {
      delay_effect.enabled = 0;
 80023e0:	4bbb      	ldr	r3, [pc, #748]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 80023e2:	2200      	movs	r2, #0
 80023e4:	741a      	strb	r2, [r3, #16]
      command_received = 1;
 80023e6:	2301      	movs	r3, #1
 80023e8:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:DLY=OFF\n";
 80023ec:	4bb9      	ldr	r3, [pc, #740]	@ (80026d4 <Parse_UART_Command+0x7a4>)
 80023ee:	663b      	str	r3, [r7, #96]	@ 0x60
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 80023f0:	6e38      	ldr	r0, [r7, #96]	@ 0x60
 80023f2:	f7fd ff15 	bl	8000220 <strlen>
 80023f6:	4603      	mov	r3, r0
 80023f8:	b29a      	uxth	r2, r3
 80023fa:	2364      	movs	r3, #100	@ 0x64
 80023fc:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 80023fe:	48b6      	ldr	r0, [pc, #728]	@ (80026d8 <Parse_UART_Command+0x7a8>)
 8002400:	f005 f8d4 	bl	80075ac <HAL_UART_Transmit>
 8002404:	e2b4      	b.n	8002970 <Parse_UART_Command+0xa40>
    else
    {
      // Parse parameters: time_ms,feedback,mix,tone
      // Example: DLY:250,0.5,0.6,0.4
      char params[UART_RX_BUFFER_SIZE];
      strncpy(params, cmd + 4, sizeof(params));
 8002406:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002408:	1d19      	adds	r1, r3, #4
 800240a:	1d3b      	adds	r3, r7, #4
 800240c:	2240      	movs	r2, #64	@ 0x40
 800240e:	4618      	mov	r0, r3
 8002410:	f008 f987 	bl	800a722 <strncpy>
      params[sizeof(params) - 1] = '\0';
 8002414:	2300      	movs	r3, #0
 8002416:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43

      char *saveptr = NULL;
 800241a:	2300      	movs	r3, #0
 800241c:	64bb      	str	r3, [r7, #72]	@ 0x48
      char *token = strtok_r(params, ",", &saveptr);
 800241e:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 8002422:	1d3b      	adds	r3, r7, #4
 8002424:	49ad      	ldr	r1, [pc, #692]	@ (80026dc <Parse_UART_Command+0x7ac>)
 8002426:	4618      	mov	r0, r3
 8002428:	f008 f9b6 	bl	800a798 <strtok_r>
 800242c:	f8c7 009c 	str.w	r0, [r7, #156]	@ 0x9c
      uint8_t parsed = 0;
 8002430:	2300      	movs	r3, #0
 8002432:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
      float time_ms = (float)delay_effect.delay_samples * (1000.0f / SAMPLE_RATE);
 8002436:	4ba6      	ldr	r3, [pc, #664]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	ee07 3a90 	vmov	s15, r3
 800243e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002442:	ed9f 7aa7 	vldr	s14, [pc, #668]	@ 80026e0 <Parse_UART_Command+0x7b0>
 8002446:	ee67 7a87 	vmul.f32	s15, s15, s14
 800244a:	edc7 7a25 	vstr	s15, [r7, #148]	@ 0x94
      float feedback = delay_effect.feedback;
 800244e:	4ba0      	ldr	r3, [pc, #640]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002450:	685b      	ldr	r3, [r3, #4]
 8002452:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
      float mix = delay_effect.mix;
 8002456:	4b9e      	ldr	r3, [pc, #632]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002458:	689b      	ldr	r3, [r3, #8]
 800245a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
      float tone = delay_effect.tone;
 800245e:	4b9c      	ldr	r3, [pc, #624]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002460:	68db      	ldr	r3, [r3, #12]
 8002462:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88

      if (token)
 8002466:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800246a:	2b00      	cmp	r3, #0
 800246c:	d01a      	beq.n	80024a4 <Parse_UART_Command+0x574>
      {
        time_ms = atof(token);
 800246e:	f8d7 009c 	ldr.w	r0, [r7, #156]	@ 0x9c
 8002472:	f007 f965 	bl	8009740 <atof>
 8002476:	ec53 2b10 	vmov	r2, r3, d0
 800247a:	4610      	mov	r0, r2
 800247c:	4619      	mov	r1, r3
 800247e:	f7fe fb9d 	bl	8000bbc <__aeabi_d2f>
 8002482:	4603      	mov	r3, r0
 8002484:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
        parsed++;
 8002488:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800248c:	3301      	adds	r3, #1
 800248e:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
        token = strtok_r(NULL, ",", &saveptr);
 8002492:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8002496:	461a      	mov	r2, r3
 8002498:	4990      	ldr	r1, [pc, #576]	@ (80026dc <Parse_UART_Command+0x7ac>)
 800249a:	2000      	movs	r0, #0
 800249c:	f008 f97c 	bl	800a798 <strtok_r>
 80024a0:	f8c7 009c 	str.w	r0, [r7, #156]	@ 0x9c
      }
      if (token)
 80024a4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d01a      	beq.n	80024e2 <Parse_UART_Command+0x5b2>
      {
        feedback = atof(token);
 80024ac:	f8d7 009c 	ldr.w	r0, [r7, #156]	@ 0x9c
 80024b0:	f007 f946 	bl	8009740 <atof>
 80024b4:	ec53 2b10 	vmov	r2, r3, d0
 80024b8:	4610      	mov	r0, r2
 80024ba:	4619      	mov	r1, r3
 80024bc:	f7fe fb7e 	bl	8000bbc <__aeabi_d2f>
 80024c0:	4603      	mov	r3, r0
 80024c2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
        parsed++;
 80024c6:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 80024ca:	3301      	adds	r3, #1
 80024cc:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
        token = strtok_r(NULL, ",", &saveptr);
 80024d0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80024d4:	461a      	mov	r2, r3
 80024d6:	4981      	ldr	r1, [pc, #516]	@ (80026dc <Parse_UART_Command+0x7ac>)
 80024d8:	2000      	movs	r0, #0
 80024da:	f008 f95d 	bl	800a798 <strtok_r>
 80024de:	f8c7 009c 	str.w	r0, [r7, #156]	@ 0x9c
      }
      if (token)
 80024e2:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d01a      	beq.n	8002520 <Parse_UART_Command+0x5f0>
      {
        mix = atof(token);
 80024ea:	f8d7 009c 	ldr.w	r0, [r7, #156]	@ 0x9c
 80024ee:	f007 f927 	bl	8009740 <atof>
 80024f2:	ec53 2b10 	vmov	r2, r3, d0
 80024f6:	4610      	mov	r0, r2
 80024f8:	4619      	mov	r1, r3
 80024fa:	f7fe fb5f 	bl	8000bbc <__aeabi_d2f>
 80024fe:	4603      	mov	r3, r0
 8002500:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
        parsed++;
 8002504:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 8002508:	3301      	adds	r3, #1
 800250a:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
        token = strtok_r(NULL, ",", &saveptr);
 800250e:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8002512:	461a      	mov	r2, r3
 8002514:	4971      	ldr	r1, [pc, #452]	@ (80026dc <Parse_UART_Command+0x7ac>)
 8002516:	2000      	movs	r0, #0
 8002518:	f008 f93e 	bl	800a798 <strtok_r>
 800251c:	f8c7 009c 	str.w	r0, [r7, #156]	@ 0x9c
      }
      if (token)
 8002520:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002524:	2b00      	cmp	r3, #0
 8002526:	d011      	beq.n	800254c <Parse_UART_Command+0x61c>
      {
        tone = atof(token);
 8002528:	f8d7 009c 	ldr.w	r0, [r7, #156]	@ 0x9c
 800252c:	f007 f908 	bl	8009740 <atof>
 8002530:	ec53 2b10 	vmov	r2, r3, d0
 8002534:	4610      	mov	r0, r2
 8002536:	4619      	mov	r1, r3
 8002538:	f7fe fb40 	bl	8000bbc <__aeabi_d2f>
 800253c:	4603      	mov	r3, r0
 800253e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
        parsed++;
 8002542:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 8002546:	3301      	adds	r3, #1
 8002548:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
      }

      if (parsed >= 3)  // At least time, feedback, mix
 800254c:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 8002550:	2b02      	cmp	r3, #2
 8002552:	f240 820d 	bls.w	8002970 <Parse_UART_Command+0xa40>
      {
        uint32_t samples = (uint32_t)((time_ms / 1000.0f) * SAMPLE_RATE);
 8002556:	ed97 7a25 	vldr	s14, [r7, #148]	@ 0x94
 800255a:	eddf 6a62 	vldr	s13, [pc, #392]	@ 80026e4 <Parse_UART_Command+0x7b4>
 800255e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002562:	ed9f 7a61 	vldr	s14, [pc, #388]	@ 80026e8 <Parse_UART_Command+0x7b8>
 8002566:	ee67 7a87 	vmul.f32	s15, s15, s14
 800256a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800256e:	ee17 3a90 	vmov	r3, s15
 8002572:	667b      	str	r3, [r7, #100]	@ 0x64
        if (samples > 0 && samples <= DELAY_BUFFER_SIZE)
 8002574:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002576:	2b00      	cmp	r3, #0
 8002578:	d007      	beq.n	800258a <Parse_UART_Command+0x65a>
 800257a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800257c:	f5b3 5f96 	cmp.w	r3, #4800	@ 0x12c0
 8002580:	d803      	bhi.n	800258a <Parse_UART_Command+0x65a>
        {
          delay_effect.delay_samples = samples;
 8002582:	4a53      	ldr	r2, [pc, #332]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002584:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002586:	6013      	str	r3, [r2, #0]
 8002588:	e003      	b.n	8002592 <Parse_UART_Command+0x662>
        }
        else
        {
          delay_effect.delay_samples = DELAY_BUFFER_SIZE;
 800258a:	4b51      	ldr	r3, [pc, #324]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 800258c:	f44f 5296 	mov.w	r2, #4800	@ 0x12c0
 8002590:	601a      	str	r2, [r3, #0]
        }
        if (feedback >= 0.0f && feedback <= 0.95f) delay_effect.feedback = feedback;
 8002592:	edd7 7a24 	vldr	s15, [r7, #144]	@ 0x90
 8002596:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800259a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800259e:	db0c      	blt.n	80025ba <Parse_UART_Command+0x68a>
 80025a0:	edd7 7a24 	vldr	s15, [r7, #144]	@ 0x90
 80025a4:	ed9f 7a51 	vldr	s14, [pc, #324]	@ 80026ec <Parse_UART_Command+0x7bc>
 80025a8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80025ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025b0:	d803      	bhi.n	80025ba <Parse_UART_Command+0x68a>
 80025b2:	4a47      	ldr	r2, [pc, #284]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 80025b4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80025b8:	6053      	str	r3, [r2, #4]
        if (mix >= 0.0f && mix <= 1.0f) delay_effect.mix = mix;
 80025ba:	edd7 7a23 	vldr	s15, [r7, #140]	@ 0x8c
 80025be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80025c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025c6:	db0c      	blt.n	80025e2 <Parse_UART_Command+0x6b2>
 80025c8:	edd7 7a23 	vldr	s15, [r7, #140]	@ 0x8c
 80025cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80025d0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80025d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025d8:	d803      	bhi.n	80025e2 <Parse_UART_Command+0x6b2>
 80025da:	4a3d      	ldr	r2, [pc, #244]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 80025dc:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80025e0:	6093      	str	r3, [r2, #8]
        if (parsed >= 4 && tone >= 0.0f && tone <= 1.0f) delay_effect.tone = tone;
 80025e2:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 80025e6:	2b03      	cmp	r3, #3
 80025e8:	d913      	bls.n	8002612 <Parse_UART_Command+0x6e2>
 80025ea:	edd7 7a22 	vldr	s15, [r7, #136]	@ 0x88
 80025ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80025f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80025f6:	db0c      	blt.n	8002612 <Parse_UART_Command+0x6e2>
 80025f8:	edd7 7a22 	vldr	s15, [r7, #136]	@ 0x88
 80025fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002600:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002608:	d803      	bhi.n	8002612 <Parse_UART_Command+0x6e2>
 800260a:	4a31      	ldr	r2, [pc, #196]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 800260c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002610:	60d3      	str	r3, [r2, #12]
        
        // **DON'T auto-enable - let the user control on/off explicitly**
        
        command_received = 1;
 8002612:	2301      	movs	r3, #1
 8002614:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
        // Send confirmation
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 8002618:	f8d7 0094 	ldr.w	r0, [r7, #148]	@ 0x94
 800261c:	f7fd ffbc 	bl	8000598 <__aeabi_f2d>
 8002620:	4604      	mov	r4, r0
 8002622:	460d      	mov	r5, r1
                 "ACK:DLY=%.0fms,%.2f,%.2f,%.2f\n", 
                 time_ms, delay_effect.feedback, delay_effect.mix, delay_effect.tone);
 8002624:	4b2a      	ldr	r3, [pc, #168]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002626:	685b      	ldr	r3, [r3, #4]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 8002628:	4618      	mov	r0, r3
 800262a:	f7fd ffb5 	bl	8000598 <__aeabi_f2d>
 800262e:	4680      	mov	r8, r0
 8002630:	4689      	mov	r9, r1
                 time_ms, delay_effect.feedback, delay_effect.mix, delay_effect.tone);
 8002632:	4b27      	ldr	r3, [pc, #156]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002634:	689b      	ldr	r3, [r3, #8]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 8002636:	4618      	mov	r0, r3
 8002638:	f7fd ffae 	bl	8000598 <__aeabi_f2d>
 800263c:	4682      	mov	sl, r0
 800263e:	468b      	mov	fp, r1
                 time_ms, delay_effect.feedback, delay_effect.mix, delay_effect.tone);
 8002640:	4b23      	ldr	r3, [pc, #140]	@ (80026d0 <Parse_UART_Command+0x7a0>)
 8002642:	68db      	ldr	r3, [r3, #12]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 8002644:	4618      	mov	r0, r3
 8002646:	f7fd ffa7 	bl	8000598 <__aeabi_f2d>
 800264a:	4602      	mov	r2, r0
 800264c:	460b      	mov	r3, r1
 800264e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8002652:	e9cd ab04 	strd	sl, fp, [sp, #16]
 8002656:	e9cd 8902 	strd	r8, r9, [sp, #8]
 800265a:	e9cd 4500 	strd	r4, r5, [sp]
 800265e:	4a24      	ldr	r2, [pc, #144]	@ (80026f0 <Parse_UART_Command+0x7c0>)
 8002660:	2180      	movs	r1, #128	@ 0x80
 8002662:	4824      	ldr	r0, [pc, #144]	@ (80026f4 <Parse_UART_Command+0x7c4>)
 8002664:	f007 ffca 	bl	800a5fc <sniprintf>
        HAL_UART_Transmit(&huart3, (uint8_t*)uart_tx_buffer, strlen(uart_tx_buffer), 100);
 8002668:	4822      	ldr	r0, [pc, #136]	@ (80026f4 <Parse_UART_Command+0x7c4>)
 800266a:	f7fd fdd9 	bl	8000220 <strlen>
 800266e:	4603      	mov	r3, r0
 8002670:	b29a      	uxth	r2, r3
 8002672:	2364      	movs	r3, #100	@ 0x64
 8002674:	491f      	ldr	r1, [pc, #124]	@ (80026f4 <Parse_UART_Command+0x7c4>)
 8002676:	4818      	ldr	r0, [pc, #96]	@ (80026d8 <Parse_UART_Command+0x7a8>)
 8002678:	f004 ff98 	bl	80075ac <HAL_UART_Transmit>
 800267c:	e178      	b.n	8002970 <Parse_UART_Command+0xa40>
      }
    }
  }
  else if (strncmp(cmd, "GATE:", 5) == 0)
 800267e:	2205      	movs	r2, #5
 8002680:	491d      	ldr	r1, [pc, #116]	@ (80026f8 <Parse_UART_Command+0x7c8>)
 8002682:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8002684:	f008 f83b 	bl	800a6fe <strncmp>
 8002688:	4603      	mov	r3, r0
 800268a:	2b00      	cmp	r3, #0
 800268c:	f040 8145 	bne.w	800291a <Parse_UART_Command+0x9ea>
  {
    if (strncmp(cmd + 5, "ON", 2) == 0)
 8002690:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002692:	3305      	adds	r3, #5
 8002694:	2202      	movs	r2, #2
 8002696:	4919      	ldr	r1, [pc, #100]	@ (80026fc <Parse_UART_Command+0x7cc>)
 8002698:	4618      	mov	r0, r3
 800269a:	f008 f830 	bl	800a6fe <strncmp>
 800269e:	4603      	mov	r3, r0
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	d131      	bne.n	8002708 <Parse_UART_Command+0x7d8>
    {
      noise_gate.enabled = 1;
 80026a4:	4b16      	ldr	r3, [pc, #88]	@ (8002700 <Parse_UART_Command+0x7d0>)
 80026a6:	2201      	movs	r2, #1
 80026a8:	741a      	strb	r2, [r3, #16]
      command_received = 1;
 80026aa:	2301      	movs	r3, #1
 80026ac:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:GATE=ON\n";
 80026b0:	4b14      	ldr	r3, [pc, #80]	@ (8002704 <Parse_UART_Command+0x7d4>)
 80026b2:	66bb      	str	r3, [r7, #104]	@ 0x68
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 80026b4:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
 80026b6:	f7fd fdb3 	bl	8000220 <strlen>
 80026ba:	4603      	mov	r3, r0
 80026bc:	b29a      	uxth	r2, r3
 80026be:	2364      	movs	r3, #100	@ 0x64
 80026c0:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80026c2:	4805      	ldr	r0, [pc, #20]	@ (80026d8 <Parse_UART_Command+0x7a8>)
 80026c4:	f004 ff72 	bl	80075ac <HAL_UART_Transmit>
 80026c8:	e152      	b.n	8002970 <Parse_UART_Command+0xa40>
 80026ca:	bf00      	nop
 80026cc:	0800c8c8 	.word	0x0800c8c8
 80026d0:	2000001c 	.word	0x2000001c
 80026d4:	0800c914 	.word	0x0800c914
 80026d8:	200003dc 	.word	0x200003dc
 80026dc:	0800c8dc 	.word	0x0800c8dc
 80026e0:	3caaaaab 	.word	0x3caaaaab
 80026e4:	447a0000 	.word	0x447a0000
 80026e8:	473b8000 	.word	0x473b8000
 80026ec:	3f733333 	.word	0x3f733333
 80026f0:	0800c924 	.word	0x0800c924
 80026f4:	200050c0 	.word	0x200050c0
 80026f8:	0800c944 	.word	0x0800c944
 80026fc:	0800c8b8 	.word	0x0800c8b8
 8002700:	20000034 	.word	0x20000034
 8002704:	0800c94c 	.word	0x0800c94c
    }
    else if (strncmp(cmd + 5, "OFF", 3) == 0)
 8002708:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800270a:	3305      	adds	r3, #5
 800270c:	2203      	movs	r2, #3
 800270e:	49a2      	ldr	r1, [pc, #648]	@ (8002998 <Parse_UART_Command+0xa68>)
 8002710:	4618      	mov	r0, r3
 8002712:	f007 fff4 	bl	800a6fe <strncmp>
 8002716:	4603      	mov	r3, r0
 8002718:	2b00      	cmp	r3, #0
 800271a:	d112      	bne.n	8002742 <Parse_UART_Command+0x812>
    {
      noise_gate.enabled = 0;
 800271c:	4b9f      	ldr	r3, [pc, #636]	@ (800299c <Parse_UART_Command+0xa6c>)
 800271e:	2200      	movs	r2, #0
 8002720:	741a      	strb	r2, [r3, #16]
      command_received = 1;
 8002722:	2301      	movs	r3, #1
 8002724:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
      // Send confirmation
      const char *msg = "ACK:GATE=OFF\n";
 8002728:	4b9d      	ldr	r3, [pc, #628]	@ (80029a0 <Parse_UART_Command+0xa70>)
 800272a:	66fb      	str	r3, [r7, #108]	@ 0x6c
      HAL_UART_Transmit(&huart3, (uint8_t*)msg, strlen(msg), 100);
 800272c:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 800272e:	f7fd fd77 	bl	8000220 <strlen>
 8002732:	4603      	mov	r3, r0
 8002734:	b29a      	uxth	r2, r3
 8002736:	2364      	movs	r3, #100	@ 0x64
 8002738:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 800273a:	489a      	ldr	r0, [pc, #616]	@ (80029a4 <Parse_UART_Command+0xa74>)
 800273c:	f004 ff36 	bl	80075ac <HAL_UART_Transmit>
 8002740:	e116      	b.n	8002970 <Parse_UART_Command+0xa40>
    else
    {
      // Parse parameters: threshold,attack,release
      // Example: GATE:0.02,0.001,0.1
      char params[UART_RX_BUFFER_SIZE];
      strncpy(params, cmd + 5, sizeof(params));
 8002742:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002744:	1d59      	adds	r1, r3, #5
 8002746:	1d3b      	adds	r3, r7, #4
 8002748:	2240      	movs	r2, #64	@ 0x40
 800274a:	4618      	mov	r0, r3
 800274c:	f007 ffe9 	bl	800a722 <strncpy>
      params[sizeof(params) - 1] = '\0';
 8002750:	2300      	movs	r3, #0
 8002752:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43

      char *saveptr = NULL;
 8002756:	2300      	movs	r3, #0
 8002758:	647b      	str	r3, [r7, #68]	@ 0x44
      char *token = strtok_r(params, ",", &saveptr);
 800275a:	f107 0244 	add.w	r2, r7, #68	@ 0x44
 800275e:	1d3b      	adds	r3, r7, #4
 8002760:	4991      	ldr	r1, [pc, #580]	@ (80029a8 <Parse_UART_Command+0xa78>)
 8002762:	4618      	mov	r0, r3
 8002764:	f008 f818 	bl	800a798 <strtok_r>
 8002768:	f8c7 0084 	str.w	r0, [r7, #132]	@ 0x84
      uint8_t parsed = 0;
 800276c:	2300      	movs	r3, #0
 800276e:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
      float threshold = noise_gate.threshold;
 8002772:	4b8a      	ldr	r3, [pc, #552]	@ (800299c <Parse_UART_Command+0xa6c>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	67fb      	str	r3, [r7, #124]	@ 0x7c
      float attack = noise_gate.attack_time;
 8002778:	4b88      	ldr	r3, [pc, #544]	@ (800299c <Parse_UART_Command+0xa6c>)
 800277a:	685b      	ldr	r3, [r3, #4]
 800277c:	67bb      	str	r3, [r7, #120]	@ 0x78
      float release = noise_gate.release_time;
 800277e:	4b87      	ldr	r3, [pc, #540]	@ (800299c <Parse_UART_Command+0xa6c>)
 8002780:	689b      	ldr	r3, [r3, #8]
 8002782:	677b      	str	r3, [r7, #116]	@ 0x74

      if (token)
 8002784:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002788:	2b00      	cmp	r3, #0
 800278a:	d019      	beq.n	80027c0 <Parse_UART_Command+0x890>
      {
        threshold = atof(token);
 800278c:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 8002790:	f006 ffd6 	bl	8009740 <atof>
 8002794:	ec53 2b10 	vmov	r2, r3, d0
 8002798:	4610      	mov	r0, r2
 800279a:	4619      	mov	r1, r3
 800279c:	f7fe fa0e 	bl	8000bbc <__aeabi_d2f>
 80027a0:	4603      	mov	r3, r0
 80027a2:	67fb      	str	r3, [r7, #124]	@ 0x7c
        parsed++;
 80027a4:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 80027a8:	3301      	adds	r3, #1
 80027aa:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
        token = strtok_r(NULL, ",", &saveptr);
 80027ae:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80027b2:	461a      	mov	r2, r3
 80027b4:	497c      	ldr	r1, [pc, #496]	@ (80029a8 <Parse_UART_Command+0xa78>)
 80027b6:	2000      	movs	r0, #0
 80027b8:	f007 ffee 	bl	800a798 <strtok_r>
 80027bc:	f8c7 0084 	str.w	r0, [r7, #132]	@ 0x84
      }
      if (token)
 80027c0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80027c4:	2b00      	cmp	r3, #0
 80027c6:	d019      	beq.n	80027fc <Parse_UART_Command+0x8cc>
      {
        attack = atof(token);
 80027c8:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 80027cc:	f006 ffb8 	bl	8009740 <atof>
 80027d0:	ec53 2b10 	vmov	r2, r3, d0
 80027d4:	4610      	mov	r0, r2
 80027d6:	4619      	mov	r1, r3
 80027d8:	f7fe f9f0 	bl	8000bbc <__aeabi_d2f>
 80027dc:	4603      	mov	r3, r0
 80027de:	67bb      	str	r3, [r7, #120]	@ 0x78
        parsed++;
 80027e0:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 80027e4:	3301      	adds	r3, #1
 80027e6:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
        token = strtok_r(NULL, ",", &saveptr);
 80027ea:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80027ee:	461a      	mov	r2, r3
 80027f0:	496d      	ldr	r1, [pc, #436]	@ (80029a8 <Parse_UART_Command+0xa78>)
 80027f2:	2000      	movs	r0, #0
 80027f4:	f007 ffd0 	bl	800a798 <strtok_r>
 80027f8:	f8c7 0084 	str.w	r0, [r7, #132]	@ 0x84
      }
      if (token)
 80027fc:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002800:	2b00      	cmp	r3, #0
 8002802:	d010      	beq.n	8002826 <Parse_UART_Command+0x8f6>
      {
        release = atof(token);
 8002804:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 8002808:	f006 ff9a 	bl	8009740 <atof>
 800280c:	ec53 2b10 	vmov	r2, r3, d0
 8002810:	4610      	mov	r0, r2
 8002812:	4619      	mov	r1, r3
 8002814:	f7fe f9d2 	bl	8000bbc <__aeabi_d2f>
 8002818:	4603      	mov	r3, r0
 800281a:	677b      	str	r3, [r7, #116]	@ 0x74
        parsed++;
 800281c:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 8002820:	3301      	adds	r3, #1
 8002822:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
      }

      if (parsed >= 1)
 8002826:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800282a:	2b00      	cmp	r3, #0
 800282c:	f000 80a0 	beq.w	8002970 <Parse_UART_Command+0xa40>
      {
        if (threshold >= 0.001f && threshold <= 0.5f) noise_gate.threshold = threshold;
 8002830:	edd7 7a1f 	vldr	s15, [r7, #124]	@ 0x7c
 8002834:	ed9f 7a5d 	vldr	s14, [pc, #372]	@ 80029ac <Parse_UART_Command+0xa7c>
 8002838:	eef4 7ac7 	vcmpe.f32	s15, s14
 800283c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002840:	db0b      	blt.n	800285a <Parse_UART_Command+0x92a>
 8002842:	edd7 7a1f 	vldr	s15, [r7, #124]	@ 0x7c
 8002846:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800284a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800284e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002852:	d802      	bhi.n	800285a <Parse_UART_Command+0x92a>
 8002854:	4a51      	ldr	r2, [pc, #324]	@ (800299c <Parse_UART_Command+0xa6c>)
 8002856:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8002858:	6013      	str	r3, [r2, #0]
        if (parsed >= 2 && attack >= 0.0001f && attack <= 0.1f) noise_gate.attack_time = attack;
 800285a:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800285e:	2b01      	cmp	r3, #1
 8002860:	d914      	bls.n	800288c <Parse_UART_Command+0x95c>
 8002862:	edd7 7a1e 	vldr	s15, [r7, #120]	@ 0x78
 8002866:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80029b0 <Parse_UART_Command+0xa80>
 800286a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800286e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002872:	db0b      	blt.n	800288c <Parse_UART_Command+0x95c>
 8002874:	edd7 7a1e 	vldr	s15, [r7, #120]	@ 0x78
 8002878:	ed9f 7a4e 	vldr	s14, [pc, #312]	@ 80029b4 <Parse_UART_Command+0xa84>
 800287c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002884:	d802      	bhi.n	800288c <Parse_UART_Command+0x95c>
 8002886:	4a45      	ldr	r2, [pc, #276]	@ (800299c <Parse_UART_Command+0xa6c>)
 8002888:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800288a:	6053      	str	r3, [r2, #4]
        if (parsed >= 3 && release >= 0.01f && release <= 1.0f) noise_gate.release_time = release;
 800288c:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 8002890:	2b02      	cmp	r3, #2
 8002892:	d914      	bls.n	80028be <Parse_UART_Command+0x98e>
 8002894:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8002898:	ed9f 7a47 	vldr	s14, [pc, #284]	@ 80029b8 <Parse_UART_Command+0xa88>
 800289c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80028a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80028a4:	db0b      	blt.n	80028be <Parse_UART_Command+0x98e>
 80028a6:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 80028aa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80028ae:	eef4 7ac7 	vcmpe.f32	s15, s14
 80028b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80028b6:	d802      	bhi.n	80028be <Parse_UART_Command+0x98e>
 80028b8:	4a38      	ldr	r2, [pc, #224]	@ (800299c <Parse_UART_Command+0xa6c>)
 80028ba:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80028bc:	6093      	str	r3, [r2, #8]

        command_received = 1;
 80028be:	2301      	movs	r3, #1
 80028c0:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
        // Send confirmation
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
                 "ACK:GATE=%.3f,%.4f,%.2f\n", 
                 noise_gate.threshold, noise_gate.attack_time, noise_gate.release_time);
 80028c4:	4b35      	ldr	r3, [pc, #212]	@ (800299c <Parse_UART_Command+0xa6c>)
 80028c6:	681b      	ldr	r3, [r3, #0]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 80028c8:	4618      	mov	r0, r3
 80028ca:	f7fd fe65 	bl	8000598 <__aeabi_f2d>
 80028ce:	4604      	mov	r4, r0
 80028d0:	460d      	mov	r5, r1
                 noise_gate.threshold, noise_gate.attack_time, noise_gate.release_time);
 80028d2:	4b32      	ldr	r3, [pc, #200]	@ (800299c <Parse_UART_Command+0xa6c>)
 80028d4:	685b      	ldr	r3, [r3, #4]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 80028d6:	4618      	mov	r0, r3
 80028d8:	f7fd fe5e 	bl	8000598 <__aeabi_f2d>
 80028dc:	4680      	mov	r8, r0
 80028de:	4689      	mov	r9, r1
                 noise_gate.threshold, noise_gate.attack_time, noise_gate.release_time);
 80028e0:	4b2e      	ldr	r3, [pc, #184]	@ (800299c <Parse_UART_Command+0xa6c>)
 80028e2:	689b      	ldr	r3, [r3, #8]
        snprintf(uart_tx_buffer, sizeof(uart_tx_buffer), 
 80028e4:	4618      	mov	r0, r3
 80028e6:	f7fd fe57 	bl	8000598 <__aeabi_f2d>
 80028ea:	4602      	mov	r2, r0
 80028ec:	460b      	mov	r3, r1
 80028ee:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80028f2:	e9cd 8902 	strd	r8, r9, [sp, #8]
 80028f6:	e9cd 4500 	strd	r4, r5, [sp]
 80028fa:	4a30      	ldr	r2, [pc, #192]	@ (80029bc <Parse_UART_Command+0xa8c>)
 80028fc:	2180      	movs	r1, #128	@ 0x80
 80028fe:	4830      	ldr	r0, [pc, #192]	@ (80029c0 <Parse_UART_Command+0xa90>)
 8002900:	f007 fe7c 	bl	800a5fc <sniprintf>
        HAL_UART_Transmit(&huart3, (uint8_t*)uart_tx_buffer, strlen(uart_tx_buffer), 100);
 8002904:	482e      	ldr	r0, [pc, #184]	@ (80029c0 <Parse_UART_Command+0xa90>)
 8002906:	f7fd fc8b 	bl	8000220 <strlen>
 800290a:	4603      	mov	r3, r0
 800290c:	b29a      	uxth	r2, r3
 800290e:	2364      	movs	r3, #100	@ 0x64
 8002910:	492b      	ldr	r1, [pc, #172]	@ (80029c0 <Parse_UART_Command+0xa90>)
 8002912:	4824      	ldr	r0, [pc, #144]	@ (80029a4 <Parse_UART_Command+0xa74>)
 8002914:	f004 fe4a 	bl	80075ac <HAL_UART_Transmit>
 8002918:	e02a      	b.n	8002970 <Parse_UART_Command+0xa40>
      }
    }
  }
  else if (strncmp(cmd, "STATUS", 6) == 0)
 800291a:	2206      	movs	r2, #6
 800291c:	4929      	ldr	r1, [pc, #164]	@ (80029c4 <Parse_UART_Command+0xa94>)
 800291e:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8002920:	f007 feed 	bl	800a6fe <strncmp>
 8002924:	4603      	mov	r3, r0
 8002926:	2b00      	cmp	r3, #0
 8002928:	d122      	bne.n	8002970 <Parse_UART_Command+0xa40>
  {
    // Only respond to explicit STATUS request
    snprintf(uart_tx_buffer, sizeof(uart_tx_buffer),
 800292a:	4b27      	ldr	r3, [pc, #156]	@ (80029c8 <Parse_UART_Command+0xa98>)
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	4618      	mov	r0, r3
 8002930:	f7fd fe32 	bl	8000598 <__aeabi_f2d>
 8002934:	4602      	mov	r2, r0
 8002936:	460b      	mov	r3, r1
             "VOL:%.2f,OVR:%d,DLY:%d,GATE:%d\n",
             output_volume, overdrive.enabled, delay_effect.enabled, noise_gate.enabled);
 8002938:	4924      	ldr	r1, [pc, #144]	@ (80029cc <Parse_UART_Command+0xa9c>)
 800293a:	7c49      	ldrb	r1, [r1, #17]
    snprintf(uart_tx_buffer, sizeof(uart_tx_buffer),
 800293c:	4608      	mov	r0, r1
             output_volume, overdrive.enabled, delay_effect.enabled, noise_gate.enabled);
 800293e:	4924      	ldr	r1, [pc, #144]	@ (80029d0 <Parse_UART_Command+0xaa0>)
 8002940:	7c09      	ldrb	r1, [r1, #16]
    snprintf(uart_tx_buffer, sizeof(uart_tx_buffer),
 8002942:	460c      	mov	r4, r1
             output_volume, overdrive.enabled, delay_effect.enabled, noise_gate.enabled);
 8002944:	4915      	ldr	r1, [pc, #84]	@ (800299c <Parse_UART_Command+0xa6c>)
 8002946:	7c09      	ldrb	r1, [r1, #16]
    snprintf(uart_tx_buffer, sizeof(uart_tx_buffer),
 8002948:	9104      	str	r1, [sp, #16]
 800294a:	9403      	str	r4, [sp, #12]
 800294c:	9002      	str	r0, [sp, #8]
 800294e:	e9cd 2300 	strd	r2, r3, [sp]
 8002952:	4a20      	ldr	r2, [pc, #128]	@ (80029d4 <Parse_UART_Command+0xaa4>)
 8002954:	2180      	movs	r1, #128	@ 0x80
 8002956:	481a      	ldr	r0, [pc, #104]	@ (80029c0 <Parse_UART_Command+0xa90>)
 8002958:	f007 fe50 	bl	800a5fc <sniprintf>
    HAL_UART_Transmit(&huart3, (uint8_t*)uart_tx_buffer, strlen(uart_tx_buffer), 100);
 800295c:	4818      	ldr	r0, [pc, #96]	@ (80029c0 <Parse_UART_Command+0xa90>)
 800295e:	f7fd fc5f 	bl	8000220 <strlen>
 8002962:	4603      	mov	r3, r0
 8002964:	b29a      	uxth	r2, r3
 8002966:	2364      	movs	r3, #100	@ 0x64
 8002968:	4915      	ldr	r1, [pc, #84]	@ (80029c0 <Parse_UART_Command+0xa90>)
 800296a:	480e      	ldr	r0, [pc, #56]	@ (80029a4 <Parse_UART_Command+0xa74>)
 800296c:	f004 fe1e 	bl	80075ac <HAL_UART_Transmit>
  }
  
  // **BLINK LED TO CONFIRM COMMAND RECEIVED**
  if (command_received)
 8002970:	f897 30bf 	ldrb.w	r3, [r7, #191]	@ 0xbf
 8002974:	2b00      	cmp	r3, #0
 8002976:	d002      	beq.n	800297e <Parse_UART_Command+0xa4e>
  {
    // Set counter for 6 toggles (3 blinks: ON-OFF-ON-OFF-ON-OFF)
    command_blink_counter = 6;
 8002978:	4b17      	ldr	r3, [pc, #92]	@ (80029d8 <Parse_UART_Command+0xaa8>)
 800297a:	2206      	movs	r2, #6
 800297c:	701a      	strb	r2, [r3, #0]
  }
  
  // Clear buffer
  memset(uart_rx_buffer, 0, UART_RX_BUFFER_SIZE);
 800297e:	2240      	movs	r2, #64	@ 0x40
 8002980:	2100      	movs	r1, #0
 8002982:	4816      	ldr	r0, [pc, #88]	@ (80029dc <Parse_UART_Command+0xaac>)
 8002984:	f007 feb3 	bl	800a6ee <memset>
  uart_rx_index = 0;
 8002988:	4b15      	ldr	r3, [pc, #84]	@ (80029e0 <Parse_UART_Command+0xab0>)
 800298a:	2200      	movs	r2, #0
 800298c:	701a      	strb	r2, [r3, #0]
}
 800298e:	bf00      	nop
 8002990:	37c0      	adds	r7, #192	@ 0xc0
 8002992:	46bd      	mov	sp, r7
 8002994:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002998:	0800c8c8 	.word	0x0800c8c8
 800299c:	20000034 	.word	0x20000034
 80029a0:	0800c95c 	.word	0x0800c95c
 80029a4:	200003dc 	.word	0x200003dc
 80029a8:	0800c8dc 	.word	0x0800c8dc
 80029ac:	3a83126f 	.word	0x3a83126f
 80029b0:	38d1b717 	.word	0x38d1b717
 80029b4:	3dcccccd 	.word	0x3dcccccd
 80029b8:	3c23d70a 	.word	0x3c23d70a
 80029bc:	0800c96c 	.word	0x0800c96c
 80029c0:	200050c0 	.word	0x200050c0
 80029c4:	0800c988 	.word	0x0800c988
 80029c8:	20000048 	.word	0x20000048
 80029cc:	20000000 	.word	0x20000000
 80029d0:	2000001c 	.word	0x2000001c
 80029d4:	0800c990 	.word	0x0800c990
 80029d8:	20005078 	.word	0x20005078
 80029dc:	2000507c 	.word	0x2000507c
 80029e0:	200050bd 	.word	0x200050bd

080029e4 <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Timer period elapsed callback
  * @param  htim: Timer handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b086      	sub	sp, #24
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	6078      	str	r0, [r7, #4]
  if (htim->Instance == TIM1)
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	4a73      	ldr	r2, [pc, #460]	@ (8002bc0 <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 80029f2:	4293      	cmp	r3, r2
 80029f4:	f040 80df 	bne.w	8002bb6 <HAL_TIM_PeriodElapsedCallback+0x1d2>
    static uint32_t signal_detected = 0;
    static uint16_t min_value = 4095;
    static uint16_t max_value = 0;
    static uint32_t range_counter = 0;

    HAL_ADC_Start(&hadc1);
 80029f8:	4872      	ldr	r0, [pc, #456]	@ (8002bc4 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 80029fa:	f001 f8c5 	bl	8003b88 <HAL_ADC_Start>

    if (HAL_ADC_PollForConversion(&hadc1, 1) == HAL_OK)
 80029fe:	2101      	movs	r1, #1
 8002a00:	4870      	ldr	r0, [pc, #448]	@ (8002bc4 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 8002a02:	f001 f9b1 	bl	8003d68 <HAL_ADC_PollForConversion>
 8002a06:	4603      	mov	r3, r0
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	f040 80d1 	bne.w	8002bb0 <HAL_TIM_PeriodElapsedCallback+0x1cc>
    {
      uint16_t adc_value = HAL_ADC_GetValue(&hadc1);
 8002a0e:	486d      	ldr	r0, [pc, #436]	@ (8002bc4 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 8002a10:	f001 fa82 	bl	8003f18 <HAL_ADC_GetValue>
 8002a14:	4603      	mov	r3, r0
 8002a16:	823b      	strh	r3, [r7, #16]

      // Signal detection for LED
      if (adc_value < min_value) min_value = adc_value;
 8002a18:	4b6b      	ldr	r3, [pc, #428]	@ (8002bc8 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 8002a1a:	881b      	ldrh	r3, [r3, #0]
 8002a1c:	8a3a      	ldrh	r2, [r7, #16]
 8002a1e:	429a      	cmp	r2, r3
 8002a20:	d202      	bcs.n	8002a28 <HAL_TIM_PeriodElapsedCallback+0x44>
 8002a22:	4a69      	ldr	r2, [pc, #420]	@ (8002bc8 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 8002a24:	8a3b      	ldrh	r3, [r7, #16]
 8002a26:	8013      	strh	r3, [r2, #0]
      if (adc_value > max_value) max_value = adc_value;
 8002a28:	4b68      	ldr	r3, [pc, #416]	@ (8002bcc <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8002a2a:	881b      	ldrh	r3, [r3, #0]
 8002a2c:	8a3a      	ldrh	r2, [r7, #16]
 8002a2e:	429a      	cmp	r2, r3
 8002a30:	d902      	bls.n	8002a38 <HAL_TIM_PeriodElapsedCallback+0x54>
 8002a32:	4a66      	ldr	r2, [pc, #408]	@ (8002bcc <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8002a34:	8a3b      	ldrh	r3, [r7, #16]
 8002a36:	8013      	strh	r3, [r2, #0]

      range_counter++;
 8002a38:	4b65      	ldr	r3, [pc, #404]	@ (8002bd0 <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	3301      	adds	r3, #1
 8002a3e:	4a64      	ldr	r2, [pc, #400]	@ (8002bd0 <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8002a40:	6013      	str	r3, [r2, #0]
      if (range_counter >= 4800)
 8002a42:	4b63      	ldr	r3, [pc, #396]	@ (8002bd0 <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	f5b3 5f96 	cmp.w	r3, #4800	@ 0x12c0
 8002a4a:	d319      	bcc.n	8002a80 <HAL_TIM_PeriodElapsedCallback+0x9c>
      {
        uint16_t signal_range = max_value - min_value;
 8002a4c:	4b5f      	ldr	r3, [pc, #380]	@ (8002bcc <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8002a4e:	881a      	ldrh	r2, [r3, #0]
 8002a50:	4b5d      	ldr	r3, [pc, #372]	@ (8002bc8 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 8002a52:	881b      	ldrh	r3, [r3, #0]
 8002a54:	1ad3      	subs	r3, r2, r3
 8002a56:	81fb      	strh	r3, [r7, #14]

        if (signal_range > 100)
 8002a58:	89fb      	ldrh	r3, [r7, #14]
 8002a5a:	2b64      	cmp	r3, #100	@ 0x64
 8002a5c:	d906      	bls.n	8002a6c <HAL_TIM_PeriodElapsedCallback+0x88>
        {
          signal_detected = 1;
 8002a5e:	4b5d      	ldr	r3, [pc, #372]	@ (8002bd4 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 8002a60:	2201      	movs	r2, #1
 8002a62:	601a      	str	r2, [r3, #0]
          signal_timeout = 48000;
 8002a64:	4b5c      	ldr	r3, [pc, #368]	@ (8002bd8 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8002a66:	f64b 3280 	movw	r2, #48000	@ 0xbb80
 8002a6a:	601a      	str	r2, [r3, #0]
        }

        min_value = 4095;
 8002a6c:	4b56      	ldr	r3, [pc, #344]	@ (8002bc8 <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 8002a6e:	f640 72ff 	movw	r2, #4095	@ 0xfff
 8002a72:	801a      	strh	r2, [r3, #0]
        max_value = 0;
 8002a74:	4b55      	ldr	r3, [pc, #340]	@ (8002bcc <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8002a76:	2200      	movs	r2, #0
 8002a78:	801a      	strh	r2, [r3, #0]
        range_counter = 0;
 8002a7a:	4b55      	ldr	r3, [pc, #340]	@ (8002bd0 <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	601a      	str	r2, [r3, #0]
      }

      if (signal_detected)
 8002a80:	4b54      	ldr	r3, [pc, #336]	@ (8002bd4 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 8002a82:	681b      	ldr	r3, [r3, #0]
 8002a84:	2b00      	cmp	r3, #0
 8002a86:	d019      	beq.n	8002abc <HAL_TIM_PeriodElapsedCallback+0xd8>
      {
        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 8002a88:	2201      	movs	r2, #1
 8002a8a:	2120      	movs	r1, #32
 8002a8c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002a90:	f002 ff02 	bl	8005898 <HAL_GPIO_WritePin>

        if (signal_timeout > 0)
 8002a94:	4b50      	ldr	r3, [pc, #320]	@ (8002bd8 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	d005      	beq.n	8002aa8 <HAL_TIM_PeriodElapsedCallback+0xc4>
        {
          signal_timeout--;
 8002a9c:	4b4e      	ldr	r3, [pc, #312]	@ (8002bd8 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	3b01      	subs	r3, #1
 8002aa2:	4a4d      	ldr	r2, [pc, #308]	@ (8002bd8 <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 8002aa4:	6013      	str	r3, [r2, #0]
 8002aa6:	e00f      	b.n	8002ac8 <HAL_TIM_PeriodElapsedCallback+0xe4>
        }
        else
        {
          signal_detected = 0;
 8002aa8:	4b4a      	ldr	r3, [pc, #296]	@ (8002bd4 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 8002aaa:	2200      	movs	r2, #0
 8002aac:	601a      	str	r2, [r3, #0]
          HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8002aae:	2200      	movs	r2, #0
 8002ab0:	2120      	movs	r1, #32
 8002ab2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002ab6:	f002 feef 	bl	8005898 <HAL_GPIO_WritePin>
 8002aba:	e005      	b.n	8002ac8 <HAL_TIM_PeriodElapsedCallback+0xe4>
        }
      }
      else
      {
        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 8002abc:	2200      	movs	r2, #0
 8002abe:	2120      	movs	r1, #32
 8002ac0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002ac4:	f002 fee8 	bl	8005898 <HAL_GPIO_WritePin>
      }

      // **APPLY EFFECTS IN REAL-TIME**
      // Normalize ADC input (0-4095) to (-1.0 to 1.0)
      // Since ADC is in differential mode, center at 2048
      float32_t normalized_input = ((float32_t)adc_value - 2048.0f) / 2048.0f;
 8002ac8:	8a3b      	ldrh	r3, [r7, #16]
 8002aca:	ee07 3a90 	vmov	s15, r3
 8002ace:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ad2:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8002bdc <HAL_TIM_PeriodElapsedCallback+0x1f8>
 8002ad6:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8002ada:	eddf 6a40 	vldr	s13, [pc, #256]	@ 8002bdc <HAL_TIM_PeriodElapsedCallback+0x1f8>
 8002ade:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002ae2:	edc7 7a02 	vstr	s15, [r7, #8]
      
      // EFFECT CHAIN - Order matters!
      // 1. NOISE GATE (first - prevents noise from being amplified)
      float32_t processed_signal = Apply_NoiseGate(normalized_input);
 8002ae6:	ed97 0a02 	vldr	s0, [r7, #8]
 8002aea:	f7ff f91f 	bl	8001d2c <Apply_NoiseGate>
 8002aee:	ed87 0a05 	vstr	s0, [r7, #20]
      
      // 2. OVERDRIVE (distortion/gain stage)
      processed_signal = Apply_Overdrive(processed_signal);
 8002af2:	ed97 0a05 	vldr	s0, [r7, #20]
 8002af6:	f7fe fe77 	bl	80017e8 <Apply_Overdrive>
 8002afa:	ed87 0a05 	vstr	s0, [r7, #20]
      
      // 3. DELAY (time-based effect, after distortion)
      processed_signal = Apply_Delay(processed_signal);
 8002afe:	ed97 0a05 	vldr	s0, [r7, #20]
 8002b02:	f7ff f831 	bl	8001b68 <Apply_Delay>
 8002b06:	ed87 0a05 	vstr	s0, [r7, #20]
      
      // Apply output volume control
      processed_signal *= output_volume;
 8002b0a:	4b35      	ldr	r3, [pc, #212]	@ (8002be0 <HAL_TIM_PeriodElapsedCallback+0x1fc>)
 8002b0c:	edd3 7a00 	vldr	s15, [r3]
 8002b10:	ed97 7a05 	vldr	s14, [r7, #20]
 8002b14:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002b18:	edc7 7a05 	vstr	s15, [r7, #20]
      
      // Ensure signal is within bounds (clamp to -1.0 to 1.0)
      if (processed_signal > 1.0f) processed_signal = 1.0f;
 8002b1c:	edd7 7a05 	vldr	s15, [r7, #20]
 8002b20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002b24:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b2c:	dd02      	ble.n	8002b34 <HAL_TIM_PeriodElapsedCallback+0x150>
 8002b2e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8002b32:	617b      	str	r3, [r7, #20]
      if (processed_signal < -1.0f) processed_signal = -1.0f;
 8002b34:	edd7 7a05 	vldr	s15, [r7, #20]
 8002b38:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8002b3c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b44:	d501      	bpl.n	8002b4a <HAL_TIM_PeriodElapsedCallback+0x166>
 8002b46:	4b27      	ldr	r3, [pc, #156]	@ (8002be4 <HAL_TIM_PeriodElapsedCallback+0x200>)
 8002b48:	617b      	str	r3, [r7, #20]
      
      // Convert back to DAC value (0-4095)
      // Map -1.0 to 1.0 => 0 to 4095 (centered at 2048)
      uint16_t dac_value = (uint16_t)((processed_signal * 2048.0f) + 2048.0f);
 8002b4a:	edd7 7a05 	vldr	s15, [r7, #20]
 8002b4e:	ed9f 7a23 	vldr	s14, [pc, #140]	@ 8002bdc <HAL_TIM_PeriodElapsedCallback+0x1f8>
 8002b52:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b56:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8002bdc <HAL_TIM_PeriodElapsedCallback+0x1f8>
 8002b5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002b5e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b62:	ee17 3a90 	vmov	r3, s15
 8002b66:	827b      	strh	r3, [r7, #18]
      
      // Clamp DAC output to valid range
      if (dac_value > 4095) dac_value = 4095;
 8002b68:	8a7b      	ldrh	r3, [r7, #18]
 8002b6a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002b6e:	d302      	bcc.n	8002b76 <HAL_TIM_PeriodElapsedCallback+0x192>
 8002b70:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8002b74:	827b      	strh	r3, [r7, #18]
      if (dac_value < 0) dac_value = 0;
      
      // Output to DAC
      HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, dac_value);
 8002b76:	8a7b      	ldrh	r3, [r7, #18]
 8002b78:	2200      	movs	r2, #0
 8002b7a:	2100      	movs	r1, #0
 8002b7c:	481a      	ldr	r0, [pc, #104]	@ (8002be8 <HAL_TIM_PeriodElapsedCallback+0x204>)
 8002b7e:	f002 fa61 	bl	8005044 <HAL_DAC_SetValue>

      // Store in buffer for monitoring
      adc_buffer[buffer_index] = adc_value;
 8002b82:	4b1a      	ldr	r3, [pc, #104]	@ (8002bec <HAL_TIM_PeriodElapsedCallback+0x208>)
 8002b84:	881b      	ldrh	r3, [r3, #0]
 8002b86:	b29b      	uxth	r3, r3
 8002b88:	4619      	mov	r1, r3
 8002b8a:	4a19      	ldr	r2, [pc, #100]	@ (8002bf0 <HAL_TIM_PeriodElapsedCallback+0x20c>)
 8002b8c:	8a3b      	ldrh	r3, [r7, #16]
 8002b8e:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
      buffer_index++;
 8002b92:	4b16      	ldr	r3, [pc, #88]	@ (8002bec <HAL_TIM_PeriodElapsedCallback+0x208>)
 8002b94:	881b      	ldrh	r3, [r3, #0]
 8002b96:	b29b      	uxth	r3, r3
 8002b98:	3301      	adds	r3, #1
 8002b9a:	b29a      	uxth	r2, r3
 8002b9c:	4b13      	ldr	r3, [pc, #76]	@ (8002bec <HAL_TIM_PeriodElapsedCallback+0x208>)
 8002b9e:	801a      	strh	r2, [r3, #0]
      if (buffer_index >= BUFFER_SIZE)
 8002ba0:	4b12      	ldr	r3, [pc, #72]	@ (8002bec <HAL_TIM_PeriodElapsedCallback+0x208>)
 8002ba2:	881b      	ldrh	r3, [r3, #0]
 8002ba4:	b29b      	uxth	r3, r3
 8002ba6:	2b7f      	cmp	r3, #127	@ 0x7f
 8002ba8:	d902      	bls.n	8002bb0 <HAL_TIM_PeriodElapsedCallback+0x1cc>
      {
        buffer_index = 0;
 8002baa:	4b10      	ldr	r3, [pc, #64]	@ (8002bec <HAL_TIM_PeriodElapsedCallback+0x208>)
 8002bac:	2200      	movs	r2, #0
 8002bae:	801a      	strh	r2, [r3, #0]
      }
    }

    HAL_ADC_Stop(&hadc1);
 8002bb0:	4804      	ldr	r0, [pc, #16]	@ (8002bc4 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 8002bb2:	f001 f8a5 	bl	8003d00 <HAL_ADC_Stop>
  }
}
 8002bb6:	bf00      	nop
 8002bb8:	3718      	adds	r7, #24
 8002bba:	46bd      	mov	sp, r7
 8002bbc:	bd80      	pop	{r7, pc}
 8002bbe:	bf00      	nop
 8002bc0:	40012c00 	.word	0x40012c00
 8002bc4:	20000240 	.word	0x20000240
 8002bc8:	2000004e 	.word	0x2000004e
 8002bcc:	20005144 	.word	0x20005144
 8002bd0:	20005148 	.word	0x20005148
 8002bd4:	2000514c 	.word	0x2000514c
 8002bd8:	20005150 	.word	0x20005150
 8002bdc:	45000000 	.word	0x45000000
 8002be0:	20000048 	.word	0x20000048
 8002be4:	bf800000 	.word	0xbf800000
 8002be8:	200002ac 	.word	0x200002ac
 8002bec:	20005076 	.word	0x20005076
 8002bf0:	20000470 	.word	0x20000470

08002bf4 <HAL_UART_RxCpltCallback>:
  * @brief  UART Receive Complete Callback
  * @param  huart: UART handle
  * @retval None
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8002bf4:	b580      	push	{r7, lr}
 8002bf6:	b082      	sub	sp, #8
 8002bf8:	af00      	add	r7, sp, #0
 8002bfa:	6078      	str	r0, [r7, #4]
  if (huart->Instance == USART3)  // ESP32 communication
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	4a18      	ldr	r2, [pc, #96]	@ (8002c64 <HAL_UART_RxCpltCallback+0x70>)
 8002c02:	4293      	cmp	r3, r2
 8002c04:	d129      	bne.n	8002c5a <HAL_UART_RxCpltCallback+0x66>
  {
    // Check for newline (command complete)
    if (uart_rx_byte == '\n' || uart_rx_byte == '\r')
 8002c06:	4b18      	ldr	r3, [pc, #96]	@ (8002c68 <HAL_UART_RxCpltCallback+0x74>)
 8002c08:	781b      	ldrb	r3, [r3, #0]
 8002c0a:	2b0a      	cmp	r3, #10
 8002c0c:	d003      	beq.n	8002c16 <HAL_UART_RxCpltCallback+0x22>
 8002c0e:	4b16      	ldr	r3, [pc, #88]	@ (8002c68 <HAL_UART_RxCpltCallback+0x74>)
 8002c10:	781b      	ldrb	r3, [r3, #0]
 8002c12:	2b0d      	cmp	r3, #13
 8002c14:	d10d      	bne.n	8002c32 <HAL_UART_RxCpltCallback+0x3e>
    {
      if (uart_rx_index > 0)
 8002c16:	4b15      	ldr	r3, [pc, #84]	@ (8002c6c <HAL_UART_RxCpltCallback+0x78>)
 8002c18:	781b      	ldrb	r3, [r3, #0]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d018      	beq.n	8002c50 <HAL_UART_RxCpltCallback+0x5c>
      {
        uart_rx_buffer[uart_rx_index] = '\0';  // Null terminate
 8002c1e:	4b13      	ldr	r3, [pc, #76]	@ (8002c6c <HAL_UART_RxCpltCallback+0x78>)
 8002c20:	781b      	ldrb	r3, [r3, #0]
 8002c22:	461a      	mov	r2, r3
 8002c24:	4b12      	ldr	r3, [pc, #72]	@ (8002c70 <HAL_UART_RxCpltCallback+0x7c>)
 8002c26:	2100      	movs	r1, #0
 8002c28:	5499      	strb	r1, [r3, r2]
        uart_command_ready = 1;
 8002c2a:	4b12      	ldr	r3, [pc, #72]	@ (8002c74 <HAL_UART_RxCpltCallback+0x80>)
 8002c2c:	2201      	movs	r2, #1
 8002c2e:	701a      	strb	r2, [r3, #0]
      if (uart_rx_index > 0)
 8002c30:	e00e      	b.n	8002c50 <HAL_UART_RxCpltCallback+0x5c>
      }
    }
    else if (uart_rx_index < UART_RX_BUFFER_SIZE - 1)
 8002c32:	4b0e      	ldr	r3, [pc, #56]	@ (8002c6c <HAL_UART_RxCpltCallback+0x78>)
 8002c34:	781b      	ldrb	r3, [r3, #0]
 8002c36:	2b3e      	cmp	r3, #62	@ 0x3e
 8002c38:	d80a      	bhi.n	8002c50 <HAL_UART_RxCpltCallback+0x5c>
    {
      // Add byte to buffer
      uart_rx_buffer[uart_rx_index++] = uart_rx_byte;
 8002c3a:	4b0c      	ldr	r3, [pc, #48]	@ (8002c6c <HAL_UART_RxCpltCallback+0x78>)
 8002c3c:	781b      	ldrb	r3, [r3, #0]
 8002c3e:	1c5a      	adds	r2, r3, #1
 8002c40:	b2d1      	uxtb	r1, r2
 8002c42:	4a0a      	ldr	r2, [pc, #40]	@ (8002c6c <HAL_UART_RxCpltCallback+0x78>)
 8002c44:	7011      	strb	r1, [r2, #0]
 8002c46:	461a      	mov	r2, r3
 8002c48:	4b07      	ldr	r3, [pc, #28]	@ (8002c68 <HAL_UART_RxCpltCallback+0x74>)
 8002c4a:	7819      	ldrb	r1, [r3, #0]
 8002c4c:	4b08      	ldr	r3, [pc, #32]	@ (8002c70 <HAL_UART_RxCpltCallback+0x7c>)
 8002c4e:	5499      	strb	r1, [r3, r2]
    }
    
    // Re-enable UART receive interrupt for next byte
    HAL_UART_Receive_IT(&huart3, &uart_rx_byte, 1);
 8002c50:	2201      	movs	r2, #1
 8002c52:	4905      	ldr	r1, [pc, #20]	@ (8002c68 <HAL_UART_RxCpltCallback+0x74>)
 8002c54:	4808      	ldr	r0, [pc, #32]	@ (8002c78 <HAL_UART_RxCpltCallback+0x84>)
 8002c56:	f004 fd37 	bl	80076c8 <HAL_UART_Receive_IT>
  }
}
 8002c5a:	bf00      	nop
 8002c5c:	3708      	adds	r7, #8
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	bd80      	pop	{r7, pc}
 8002c62:	bf00      	nop
 8002c64:	40004800 	.word	0x40004800
 8002c68:	200050bc 	.word	0x200050bc
 8002c6c:	200050bd 	.word	0x200050bd
 8002c70:	2000507c 	.word	0x2000507c
 8002c74:	200050be 	.word	0x200050be
 8002c78:	200003dc 	.word	0x200003dc

08002c7c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002c7c:	b480      	push	{r7}
 8002c7e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002c80:	b672      	cpsid	i
}
 8002c82:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002c84:	bf00      	nop
 8002c86:	e7fd      	b.n	8002c84 <Error_Handler+0x8>

08002c88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b082      	sub	sp, #8
 8002c8c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002c8e:	4b0f      	ldr	r3, [pc, #60]	@ (8002ccc <HAL_MspInit+0x44>)
 8002c90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002c92:	4a0e      	ldr	r2, [pc, #56]	@ (8002ccc <HAL_MspInit+0x44>)
 8002c94:	f043 0301 	orr.w	r3, r3, #1
 8002c98:	6613      	str	r3, [r2, #96]	@ 0x60
 8002c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8002ccc <HAL_MspInit+0x44>)
 8002c9c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002c9e:	f003 0301 	and.w	r3, r3, #1
 8002ca2:	607b      	str	r3, [r7, #4]
 8002ca4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002ca6:	4b09      	ldr	r3, [pc, #36]	@ (8002ccc <HAL_MspInit+0x44>)
 8002ca8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002caa:	4a08      	ldr	r2, [pc, #32]	@ (8002ccc <HAL_MspInit+0x44>)
 8002cac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002cb0:	6593      	str	r3, [r2, #88]	@ 0x58
 8002cb2:	4b06      	ldr	r3, [pc, #24]	@ (8002ccc <HAL_MspInit+0x44>)
 8002cb4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002cb6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002cba:	603b      	str	r3, [r7, #0]
 8002cbc:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 8002cbe:	f002 ffc3 	bl	8005c48 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002cc2:	bf00      	nop
 8002cc4:	3708      	adds	r7, #8
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bd80      	pop	{r7, pc}
 8002cca:	bf00      	nop
 8002ccc:	40021000 	.word	0x40021000

08002cd0 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b09a      	sub	sp, #104	@ 0x68
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002cd8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002cdc:	2200      	movs	r2, #0
 8002cde:	601a      	str	r2, [r3, #0]
 8002ce0:	605a      	str	r2, [r3, #4]
 8002ce2:	609a      	str	r2, [r3, #8]
 8002ce4:	60da      	str	r2, [r3, #12]
 8002ce6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002ce8:	f107 0310 	add.w	r3, r7, #16
 8002cec:	2244      	movs	r2, #68	@ 0x44
 8002cee:	2100      	movs	r1, #0
 8002cf0:	4618      	mov	r0, r3
 8002cf2:	f007 fcfc 	bl	800a6ee <memset>
  if(hadc->Instance==ADC1)
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8002cfe:	d134      	bne.n	8002d6a <HAL_ADC_MspInit+0x9a>

    /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8002d00:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8002d04:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8002d06:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8002d0a:	64fb      	str	r3, [r7, #76]	@ 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002d0c:	f107 0310 	add.w	r3, r7, #16
 8002d10:	4618      	mov	r0, r3
 8002d12:	f003 fcd7 	bl	80066c4 <HAL_RCCEx_PeriphCLKConfig>
 8002d16:	4603      	mov	r3, r0
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	d001      	beq.n	8002d20 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8002d1c:	f7ff ffae 	bl	8002c7c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8002d20:	4b14      	ldr	r3, [pc, #80]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d22:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d24:	4a13      	ldr	r2, [pc, #76]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d26:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002d2a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002d2c:	4b11      	ldr	r3, [pc, #68]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d2e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d30:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002d34:	60fb      	str	r3, [r7, #12]
 8002d36:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d38:	4b0e      	ldr	r3, [pc, #56]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d3a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d3c:	4a0d      	ldr	r2, [pc, #52]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d3e:	f043 0301 	orr.w	r3, r3, #1
 8002d42:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002d44:	4b0b      	ldr	r3, [pc, #44]	@ (8002d74 <HAL_ADC_MspInit+0xa4>)
 8002d46:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d48:	f003 0301 	and.w	r3, r3, #1
 8002d4c:	60bb      	str	r3, [r7, #8]
 8002d4e:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    PA1     ------> ADC1_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002d50:	2303      	movs	r3, #3
 8002d52:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002d54:	2303      	movs	r3, #3
 8002d56:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d58:	2300      	movs	r3, #0
 8002d5a:	65fb      	str	r3, [r7, #92]	@ 0x5c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d5c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002d60:	4619      	mov	r1, r3
 8002d62:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002d66:	f002 fc15 	bl	8005594 <HAL_GPIO_Init>

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 8002d6a:	bf00      	nop
 8002d6c:	3768      	adds	r7, #104	@ 0x68
 8002d6e:	46bd      	mov	sp, r7
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	40021000 	.word	0x40021000

08002d78 <HAL_DAC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdac: DAC handle pointer
  * @retval None
  */
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	b08a      	sub	sp, #40	@ 0x28
 8002d7c:	af00      	add	r7, sp, #0
 8002d7e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d80:	f107 0314 	add.w	r3, r7, #20
 8002d84:	2200      	movs	r2, #0
 8002d86:	601a      	str	r2, [r3, #0]
 8002d88:	605a      	str	r2, [r3, #4]
 8002d8a:	609a      	str	r2, [r3, #8]
 8002d8c:	60da      	str	r2, [r3, #12]
 8002d8e:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC1)
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	4a15      	ldr	r2, [pc, #84]	@ (8002dec <HAL_DAC_MspInit+0x74>)
 8002d96:	4293      	cmp	r3, r2
 8002d98:	d124      	bne.n	8002de4 <HAL_DAC_MspInit+0x6c>
  {
    /* USER CODE BEGIN DAC1_MspInit 0 */

    /* USER CODE END DAC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC1_CLK_ENABLE();
 8002d9a:	4b15      	ldr	r3, [pc, #84]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002d9c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002d9e:	4a14      	ldr	r2, [pc, #80]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002da0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002da4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002da6:	4b12      	ldr	r3, [pc, #72]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002da8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002daa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002dae:	613b      	str	r3, [r7, #16]
 8002db0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002db2:	4b0f      	ldr	r3, [pc, #60]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002db4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002db6:	4a0e      	ldr	r2, [pc, #56]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002db8:	f043 0301 	orr.w	r3, r3, #1
 8002dbc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002dbe:	4b0c      	ldr	r3, [pc, #48]	@ (8002df0 <HAL_DAC_MspInit+0x78>)
 8002dc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002dc2:	f003 0301 	and.w	r3, r3, #1
 8002dc6:	60fb      	str	r3, [r7, #12]
 8002dc8:	68fb      	ldr	r3, [r7, #12]
    /**DAC1 GPIO Configuration
    PA4     ------> DAC1_OUT1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8002dca:	2310      	movs	r3, #16
 8002dcc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002dce:	2303      	movs	r3, #3
 8002dd0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dd2:	2300      	movs	r3, #0
 8002dd4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002dd6:	f107 0314 	add.w	r3, r7, #20
 8002dda:	4619      	mov	r1, r3
 8002ddc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002de0:	f002 fbd8 	bl	8005594 <HAL_GPIO_Init>

    /* USER CODE END DAC1_MspInit 1 */

  }

}
 8002de4:	bf00      	nop
 8002de6:	3728      	adds	r7, #40	@ 0x28
 8002de8:	46bd      	mov	sp, r7
 8002dea:	bd80      	pop	{r7, pc}
 8002dec:	50000800 	.word	0x50000800
 8002df0:	40021000 	.word	0x40021000

08002df4 <HAL_OPAMP_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hopamp: OPAMP handle pointer
  * @retval None
  */
void HAL_OPAMP_MspInit(OPAMP_HandleTypeDef* hopamp)
{
 8002df4:	b580      	push	{r7, lr}
 8002df6:	b088      	sub	sp, #32
 8002df8:	af00      	add	r7, sp, #0
 8002dfa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002dfc:	f107 030c 	add.w	r3, r7, #12
 8002e00:	2200      	movs	r2, #0
 8002e02:	601a      	str	r2, [r3, #0]
 8002e04:	605a      	str	r2, [r3, #4]
 8002e06:	609a      	str	r2, [r3, #8]
 8002e08:	60da      	str	r2, [r3, #12]
 8002e0a:	611a      	str	r2, [r3, #16]
  if(hopamp->Instance==OPAMP1)
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	4a0f      	ldr	r2, [pc, #60]	@ (8002e50 <HAL_OPAMP_MspInit+0x5c>)
 8002e12:	4293      	cmp	r3, r2
 8002e14:	d118      	bne.n	8002e48 <HAL_OPAMP_MspInit+0x54>
  {
    /* USER CODE BEGIN OPAMP1_MspInit 0 */

    /* USER CODE END OPAMP1_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002e16:	4b0f      	ldr	r3, [pc, #60]	@ (8002e54 <HAL_OPAMP_MspInit+0x60>)
 8002e18:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002e1a:	4a0e      	ldr	r2, [pc, #56]	@ (8002e54 <HAL_OPAMP_MspInit+0x60>)
 8002e1c:	f043 0301 	orr.w	r3, r3, #1
 8002e20:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002e22:	4b0c      	ldr	r3, [pc, #48]	@ (8002e54 <HAL_OPAMP_MspInit+0x60>)
 8002e24:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002e26:	f003 0301 	and.w	r3, r3, #1
 8002e2a:	60bb      	str	r3, [r7, #8]
 8002e2c:	68bb      	ldr	r3, [r7, #8]
    /**OPAMP1 GPIO Configuration
    PA7     ------> OPAMP1_VINP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002e2e:	2380      	movs	r3, #128	@ 0x80
 8002e30:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e32:	2303      	movs	r3, #3
 8002e34:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e36:	2300      	movs	r3, #0
 8002e38:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e3a:	f107 030c 	add.w	r3, r7, #12
 8002e3e:	4619      	mov	r1, r3
 8002e40:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002e44:	f002 fba6 	bl	8005594 <HAL_GPIO_Init>

    /* USER CODE END OPAMP1_MspInit 1 */

  }

}
 8002e48:	bf00      	nop
 8002e4a:	3720      	adds	r7, #32
 8002e4c:	46bd      	mov	sp, r7
 8002e4e:	bd80      	pop	{r7, pc}
 8002e50:	40010300 	.word	0x40010300
 8002e54:	40021000 	.word	0x40021000

08002e58 <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002e58:	b580      	push	{r7, lr}
 8002e5a:	b084      	sub	sp, #16
 8002e5c:	af00      	add	r7, sp, #0
 8002e5e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	4a0d      	ldr	r2, [pc, #52]	@ (8002e9c <HAL_TIM_Base_MspInit+0x44>)
 8002e66:	4293      	cmp	r3, r2
 8002e68:	d113      	bne.n	8002e92 <HAL_TIM_Base_MspInit+0x3a>
  {
    /* USER CODE BEGIN TIM1_MspInit 0 */

    /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002e6a:	4b0d      	ldr	r3, [pc, #52]	@ (8002ea0 <HAL_TIM_Base_MspInit+0x48>)
 8002e6c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002e6e:	4a0c      	ldr	r2, [pc, #48]	@ (8002ea0 <HAL_TIM_Base_MspInit+0x48>)
 8002e70:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002e74:	6613      	str	r3, [r2, #96]	@ 0x60
 8002e76:	4b0a      	ldr	r3, [pc, #40]	@ (8002ea0 <HAL_TIM_Base_MspInit+0x48>)
 8002e78:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002e7a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002e7e:	60fb      	str	r3, [r7, #12]
 8002e80:	68fb      	ldr	r3, [r7, #12]
    /* USER CODE BEGIN TIM1_MspInit 1 */
    
    // Enable TIM1 update interrupt
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 8002e82:	2200      	movs	r2, #0
 8002e84:	2100      	movs	r1, #0
 8002e86:	2019      	movs	r0, #25
 8002e88:	f002 f819 	bl	8004ebe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8002e8c:	2019      	movs	r0, #25
 8002e8e:	f002 f830 	bl	8004ef2 <HAL_NVIC_EnableIRQ>

    /* USER CODE END TIM1_MspInit 1 */

  }

}
 8002e92:	bf00      	nop
 8002e94:	3710      	adds	r7, #16
 8002e96:	46bd      	mov	sp, r7
 8002e98:	bd80      	pop	{r7, pc}
 8002e9a:	bf00      	nop
 8002e9c:	40012c00 	.word	0x40012c00
 8002ea0:	40021000 	.word	0x40021000

08002ea4 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002ea4:	b580      	push	{r7, lr}
 8002ea6:	b09c      	sub	sp, #112	@ 0x70
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002eac:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8002eb0:	2200      	movs	r2, #0
 8002eb2:	601a      	str	r2, [r3, #0]
 8002eb4:	605a      	str	r2, [r3, #4]
 8002eb6:	609a      	str	r2, [r3, #8]
 8002eb8:	60da      	str	r2, [r3, #12]
 8002eba:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002ebc:	f107 0318 	add.w	r3, r7, #24
 8002ec0:	2244      	movs	r2, #68	@ 0x44
 8002ec2:	2100      	movs	r1, #0
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	f007 fc12 	bl	800a6ee <memset>
  if(huart->Instance==USART2)
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4a3a      	ldr	r2, [pc, #232]	@ (8002fb8 <HAL_UART_MspInit+0x114>)
 8002ed0:	4293      	cmp	r3, r2
 8002ed2:	d137      	bne.n	8002f44 <HAL_UART_MspInit+0xa0>

    /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002ed4:	2302      	movs	r3, #2
 8002ed6:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002ed8:	2300      	movs	r3, #0
 8002eda:	623b      	str	r3, [r7, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002edc:	f107 0318 	add.w	r3, r7, #24
 8002ee0:	4618      	mov	r0, r3
 8002ee2:	f003 fbef 	bl	80066c4 <HAL_RCCEx_PeriphCLKConfig>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d001      	beq.n	8002ef0 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8002eec:	f7ff fec6 	bl	8002c7c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002ef0:	4b32      	ldr	r3, [pc, #200]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002ef2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002ef4:	4a31      	ldr	r2, [pc, #196]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002ef6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002efa:	6593      	str	r3, [r2, #88]	@ 0x58
 8002efc:	4b2f      	ldr	r3, [pc, #188]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002efe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f00:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f04:	617b      	str	r3, [r7, #20]
 8002f06:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f08:	4b2c      	ldr	r3, [pc, #176]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f0a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f0c:	4a2b      	ldr	r2, [pc, #172]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f0e:	f043 0301 	orr.w	r3, r3, #1
 8002f12:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002f14:	4b29      	ldr	r3, [pc, #164]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f16:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f18:	f003 0301 	and.w	r3, r3, #1
 8002f1c:	613b      	str	r3, [r7, #16]
 8002f1e:	693b      	ldr	r3, [r7, #16]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002f20:	230c      	movs	r3, #12
 8002f22:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f24:	2302      	movs	r3, #2
 8002f26:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f28:	2300      	movs	r3, #0
 8002f2a:	667b      	str	r3, [r7, #100]	@ 0x64
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	66bb      	str	r3, [r7, #104]	@ 0x68
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002f30:	2307      	movs	r3, #7
 8002f32:	66fb      	str	r3, [r7, #108]	@ 0x6c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002f34:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8002f38:	4619      	mov	r1, r3
 8002f3a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002f3e:	f002 fb29 	bl	8005594 <HAL_GPIO_Init>
    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 1, 0);
    HAL_NVIC_EnableIRQ(USART3_IRQn);
  }

}
 8002f42:	e035      	b.n	8002fb0 <HAL_UART_MspInit+0x10c>
  else if(huart->Instance==USART3)
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	4a1d      	ldr	r2, [pc, #116]	@ (8002fc0 <HAL_UART_MspInit+0x11c>)
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d130      	bne.n	8002fb0 <HAL_UART_MspInit+0x10c>
    __HAL_RCC_USART3_CLK_ENABLE();
 8002f4e:	4b1b      	ldr	r3, [pc, #108]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f50:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f52:	4a1a      	ldr	r2, [pc, #104]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f54:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002f58:	6593      	str	r3, [r2, #88]	@ 0x58
 8002f5a:	4b18      	ldr	r3, [pc, #96]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f5c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f5e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002f62:	60fb      	str	r3, [r7, #12]
 8002f64:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f66:	4b15      	ldr	r3, [pc, #84]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f68:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f6a:	4a14      	ldr	r2, [pc, #80]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f6c:	f043 0304 	orr.w	r3, r3, #4
 8002f70:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002f72:	4b12      	ldr	r3, [pc, #72]	@ (8002fbc <HAL_UART_MspInit+0x118>)
 8002f74:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f76:	f003 0304 	and.w	r3, r3, #4
 8002f7a:	60bb      	str	r3, [r7, #8]
 8002f7c:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8002f7e:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8002f82:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f84:	2302      	movs	r3, #2
 8002f86:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f88:	2300      	movs	r3, #0
 8002f8a:	667b      	str	r3, [r7, #100]	@ 0x64
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002f8c:	2300      	movs	r3, #0
 8002f8e:	66bb      	str	r3, [r7, #104]	@ 0x68
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8002f90:	2307      	movs	r3, #7
 8002f92:	66fb      	str	r3, [r7, #108]	@ 0x6c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f94:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8002f98:	4619      	mov	r1, r3
 8002f9a:	480a      	ldr	r0, [pc, #40]	@ (8002fc4 <HAL_UART_MspInit+0x120>)
 8002f9c:	f002 fafa 	bl	8005594 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 1, 0);
 8002fa0:	2200      	movs	r2, #0
 8002fa2:	2101      	movs	r1, #1
 8002fa4:	2027      	movs	r0, #39	@ 0x27
 8002fa6:	f001 ff8a 	bl	8004ebe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8002faa:	2027      	movs	r0, #39	@ 0x27
 8002fac:	f001 ffa1 	bl	8004ef2 <HAL_NVIC_EnableIRQ>
}
 8002fb0:	bf00      	nop
 8002fb2:	3770      	adds	r7, #112	@ 0x70
 8002fb4:	46bd      	mov	sp, r7
 8002fb6:	bd80      	pop	{r7, pc}
 8002fb8:	40004400 	.word	0x40004400
 8002fbc:	40021000 	.word	0x40021000
 8002fc0:	40004800 	.word	0x40004800
 8002fc4:	48000800 	.word	0x48000800

08002fc8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002fc8:	b480      	push	{r7}
 8002fca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002fcc:	bf00      	nop
 8002fce:	e7fd      	b.n	8002fcc <NMI_Handler+0x4>

08002fd0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002fd0:	b480      	push	{r7}
 8002fd2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002fd4:	bf00      	nop
 8002fd6:	e7fd      	b.n	8002fd4 <HardFault_Handler+0x4>

08002fd8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002fd8:	b480      	push	{r7}
 8002fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002fdc:	bf00      	nop
 8002fde:	e7fd      	b.n	8002fdc <MemManage_Handler+0x4>

08002fe0 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002fe0:	b480      	push	{r7}
 8002fe2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002fe4:	bf00      	nop
 8002fe6:	e7fd      	b.n	8002fe4 <BusFault_Handler+0x4>

08002fe8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002fe8:	b480      	push	{r7}
 8002fea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002fec:	bf00      	nop
 8002fee:	e7fd      	b.n	8002fec <UsageFault_Handler+0x4>

08002ff0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002ff0:	b480      	push	{r7}
 8002ff2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002ff4:	bf00      	nop
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ffc:	4770      	bx	lr

08002ffe <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002ffe:	b480      	push	{r7}
 8003000:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003002:	bf00      	nop
 8003004:	46bd      	mov	sp, r7
 8003006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800300a:	4770      	bx	lr

0800300c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800300c:	b480      	push	{r7}
 800300e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003010:	bf00      	nop
 8003012:	46bd      	mov	sp, r7
 8003014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003018:	4770      	bx	lr

0800301a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800301a:	b580      	push	{r7, lr}
 800301c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800301e:	f000 f975 	bl	800330c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003022:	bf00      	nop
 8003024:	bd80      	pop	{r7, pc}
	...

08003028 <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 8003028:	b580      	push	{r7, lr}
 800302a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800302c:	4802      	ldr	r0, [pc, #8]	@ (8003038 <TIM1_UP_TIM16_IRQHandler+0x10>)
 800302e:	f003 fdfb 	bl	8006c28 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8003032:	bf00      	nop
 8003034:	bd80      	pop	{r7, pc}
 8003036:	bf00      	nop
 8003038:	200002fc 	.word	0x200002fc

0800303c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 800303c:	b580      	push	{r7, lr}
 800303e:	af00      	add	r7, sp, #0
  HAL_UART_IRQHandler(&huart2);
 8003040:	4802      	ldr	r0, [pc, #8]	@ (800304c <USART2_IRQHandler+0x10>)
 8003042:	f004 fb8d 	bl	8007760 <HAL_UART_IRQHandler>
}
 8003046:	bf00      	nop
 8003048:	bd80      	pop	{r7, pc}
 800304a:	bf00      	nop
 800304c:	20000348 	.word	0x20000348

08003050 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt (ESP32).
  */
void USART3_IRQHandler(void)
{
 8003050:	b580      	push	{r7, lr}
 8003052:	af00      	add	r7, sp, #0
  HAL_UART_IRQHandler(&huart3);
 8003054:	4802      	ldr	r0, [pc, #8]	@ (8003060 <USART3_IRQHandler+0x10>)
 8003056:	f004 fb83 	bl	8007760 <HAL_UART_IRQHandler>
}
 800305a:	bf00      	nop
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	200003dc 	.word	0x200003dc

08003064 <_getpid>:
 8003064:	b480      	push	{r7}
 8003066:	af00      	add	r7, sp, #0
 8003068:	2301      	movs	r3, #1
 800306a:	4618      	mov	r0, r3
 800306c:	46bd      	mov	sp, r7
 800306e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003072:	4770      	bx	lr

08003074 <_kill>:
 8003074:	b580      	push	{r7, lr}
 8003076:	b082      	sub	sp, #8
 8003078:	af00      	add	r7, sp, #0
 800307a:	6078      	str	r0, [r7, #4]
 800307c:	6039      	str	r1, [r7, #0]
 800307e:	f007 fbd5 	bl	800a82c <__errno>
 8003082:	4603      	mov	r3, r0
 8003084:	2216      	movs	r2, #22
 8003086:	601a      	str	r2, [r3, #0]
 8003088:	f04f 33ff 	mov.w	r3, #4294967295
 800308c:	4618      	mov	r0, r3
 800308e:	3708      	adds	r7, #8
 8003090:	46bd      	mov	sp, r7
 8003092:	bd80      	pop	{r7, pc}

08003094 <_exit>:
 8003094:	b580      	push	{r7, lr}
 8003096:	b082      	sub	sp, #8
 8003098:	af00      	add	r7, sp, #0
 800309a:	6078      	str	r0, [r7, #4]
 800309c:	f04f 31ff 	mov.w	r1, #4294967295
 80030a0:	6878      	ldr	r0, [r7, #4]
 80030a2:	f7ff ffe7 	bl	8003074 <_kill>
 80030a6:	bf00      	nop
 80030a8:	e7fd      	b.n	80030a6 <_exit+0x12>

080030aa <_read>:
 80030aa:	b580      	push	{r7, lr}
 80030ac:	b086      	sub	sp, #24
 80030ae:	af00      	add	r7, sp, #0
 80030b0:	60f8      	str	r0, [r7, #12]
 80030b2:	60b9      	str	r1, [r7, #8]
 80030b4:	607a      	str	r2, [r7, #4]
 80030b6:	2300      	movs	r3, #0
 80030b8:	617b      	str	r3, [r7, #20]
 80030ba:	e00a      	b.n	80030d2 <_read+0x28>
 80030bc:	f3af 8000 	nop.w
 80030c0:	4601      	mov	r1, r0
 80030c2:	68bb      	ldr	r3, [r7, #8]
 80030c4:	1c5a      	adds	r2, r3, #1
 80030c6:	60ba      	str	r2, [r7, #8]
 80030c8:	b2ca      	uxtb	r2, r1
 80030ca:	701a      	strb	r2, [r3, #0]
 80030cc:	697b      	ldr	r3, [r7, #20]
 80030ce:	3301      	adds	r3, #1
 80030d0:	617b      	str	r3, [r7, #20]
 80030d2:	697a      	ldr	r2, [r7, #20]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	429a      	cmp	r2, r3
 80030d8:	dbf0      	blt.n	80030bc <_read+0x12>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	4618      	mov	r0, r3
 80030de:	3718      	adds	r7, #24
 80030e0:	46bd      	mov	sp, r7
 80030e2:	bd80      	pop	{r7, pc}

080030e4 <_write>:
 80030e4:	b580      	push	{r7, lr}
 80030e6:	b086      	sub	sp, #24
 80030e8:	af00      	add	r7, sp, #0
 80030ea:	60f8      	str	r0, [r7, #12]
 80030ec:	60b9      	str	r1, [r7, #8]
 80030ee:	607a      	str	r2, [r7, #4]
 80030f0:	2300      	movs	r3, #0
 80030f2:	617b      	str	r3, [r7, #20]
 80030f4:	e009      	b.n	800310a <_write+0x26>
 80030f6:	68bb      	ldr	r3, [r7, #8]
 80030f8:	1c5a      	adds	r2, r3, #1
 80030fa:	60ba      	str	r2, [r7, #8]
 80030fc:	781b      	ldrb	r3, [r3, #0]
 80030fe:	4618      	mov	r0, r3
 8003100:	f3af 8000 	nop.w
 8003104:	697b      	ldr	r3, [r7, #20]
 8003106:	3301      	adds	r3, #1
 8003108:	617b      	str	r3, [r7, #20]
 800310a:	697a      	ldr	r2, [r7, #20]
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	429a      	cmp	r2, r3
 8003110:	dbf1      	blt.n	80030f6 <_write+0x12>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	4618      	mov	r0, r3
 8003116:	3718      	adds	r7, #24
 8003118:	46bd      	mov	sp, r7
 800311a:	bd80      	pop	{r7, pc}

0800311c <_close>:
 800311c:	b480      	push	{r7}
 800311e:	b083      	sub	sp, #12
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	f04f 33ff 	mov.w	r3, #4294967295
 8003128:	4618      	mov	r0, r3
 800312a:	370c      	adds	r7, #12
 800312c:	46bd      	mov	sp, r7
 800312e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003132:	4770      	bx	lr

08003134 <_fstat>:
 8003134:	b480      	push	{r7}
 8003136:	b083      	sub	sp, #12
 8003138:	af00      	add	r7, sp, #0
 800313a:	6078      	str	r0, [r7, #4]
 800313c:	6039      	str	r1, [r7, #0]
 800313e:	683b      	ldr	r3, [r7, #0]
 8003140:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003144:	605a      	str	r2, [r3, #4]
 8003146:	2300      	movs	r3, #0
 8003148:	4618      	mov	r0, r3
 800314a:	370c      	adds	r7, #12
 800314c:	46bd      	mov	sp, r7
 800314e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003152:	4770      	bx	lr

08003154 <_isatty>:
 8003154:	b480      	push	{r7}
 8003156:	b083      	sub	sp, #12
 8003158:	af00      	add	r7, sp, #0
 800315a:	6078      	str	r0, [r7, #4]
 800315c:	2301      	movs	r3, #1
 800315e:	4618      	mov	r0, r3
 8003160:	370c      	adds	r7, #12
 8003162:	46bd      	mov	sp, r7
 8003164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003168:	4770      	bx	lr

0800316a <_lseek>:
 800316a:	b480      	push	{r7}
 800316c:	b085      	sub	sp, #20
 800316e:	af00      	add	r7, sp, #0
 8003170:	60f8      	str	r0, [r7, #12]
 8003172:	60b9      	str	r1, [r7, #8]
 8003174:	607a      	str	r2, [r7, #4]
 8003176:	2300      	movs	r3, #0
 8003178:	4618      	mov	r0, r3
 800317a:	3714      	adds	r7, #20
 800317c:	46bd      	mov	sp, r7
 800317e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003182:	4770      	bx	lr

08003184 <_sbrk>:
 8003184:	b580      	push	{r7, lr}
 8003186:	b086      	sub	sp, #24
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
 800318c:	4a14      	ldr	r2, [pc, #80]	@ (80031e0 <_sbrk+0x5c>)
 800318e:	4b15      	ldr	r3, [pc, #84]	@ (80031e4 <_sbrk+0x60>)
 8003190:	1ad3      	subs	r3, r2, r3
 8003192:	617b      	str	r3, [r7, #20]
 8003194:	697b      	ldr	r3, [r7, #20]
 8003196:	613b      	str	r3, [r7, #16]
 8003198:	4b13      	ldr	r3, [pc, #76]	@ (80031e8 <_sbrk+0x64>)
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	2b00      	cmp	r3, #0
 800319e:	d102      	bne.n	80031a6 <_sbrk+0x22>
 80031a0:	4b11      	ldr	r3, [pc, #68]	@ (80031e8 <_sbrk+0x64>)
 80031a2:	4a12      	ldr	r2, [pc, #72]	@ (80031ec <_sbrk+0x68>)
 80031a4:	601a      	str	r2, [r3, #0]
 80031a6:	4b10      	ldr	r3, [pc, #64]	@ (80031e8 <_sbrk+0x64>)
 80031a8:	681a      	ldr	r2, [r3, #0]
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	4413      	add	r3, r2
 80031ae:	693a      	ldr	r2, [r7, #16]
 80031b0:	429a      	cmp	r2, r3
 80031b2:	d207      	bcs.n	80031c4 <_sbrk+0x40>
 80031b4:	f007 fb3a 	bl	800a82c <__errno>
 80031b8:	4603      	mov	r3, r0
 80031ba:	220c      	movs	r2, #12
 80031bc:	601a      	str	r2, [r3, #0]
 80031be:	f04f 33ff 	mov.w	r3, #4294967295
 80031c2:	e009      	b.n	80031d8 <_sbrk+0x54>
 80031c4:	4b08      	ldr	r3, [pc, #32]	@ (80031e8 <_sbrk+0x64>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	60fb      	str	r3, [r7, #12]
 80031ca:	4b07      	ldr	r3, [pc, #28]	@ (80031e8 <_sbrk+0x64>)
 80031cc:	681a      	ldr	r2, [r3, #0]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	4413      	add	r3, r2
 80031d2:	4a05      	ldr	r2, [pc, #20]	@ (80031e8 <_sbrk+0x64>)
 80031d4:	6013      	str	r3, [r2, #0]
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	4618      	mov	r0, r3
 80031da:	3718      	adds	r7, #24
 80031dc:	46bd      	mov	sp, r7
 80031de:	bd80      	pop	{r7, pc}
 80031e0:	20008000 	.word	0x20008000
 80031e4:	00000400 	.word	0x00000400
 80031e8:	20005154 	.word	0x20005154
 80031ec:	200052a8 	.word	0x200052a8

080031f0 <SystemInit>:
 80031f0:	b480      	push	{r7}
 80031f2:	af00      	add	r7, sp, #0
 80031f4:	4b06      	ldr	r3, [pc, #24]	@ (8003210 <SystemInit+0x20>)
 80031f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80031fa:	4a05      	ldr	r2, [pc, #20]	@ (8003210 <SystemInit+0x20>)
 80031fc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003200:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003204:	bf00      	nop
 8003206:	46bd      	mov	sp, r7
 8003208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop
 8003210:	e000ed00 	.word	0xe000ed00

08003214 <Reset_Handler>:
 8003214:	480d      	ldr	r0, [pc, #52]	@ (800324c <LoopForever+0x2>)
 8003216:	4685      	mov	sp, r0
 8003218:	f7ff ffea 	bl	80031f0 <SystemInit>
 800321c:	480c      	ldr	r0, [pc, #48]	@ (8003250 <LoopForever+0x6>)
 800321e:	490d      	ldr	r1, [pc, #52]	@ (8003254 <LoopForever+0xa>)
 8003220:	4a0d      	ldr	r2, [pc, #52]	@ (8003258 <LoopForever+0xe>)
 8003222:	2300      	movs	r3, #0
 8003224:	e002      	b.n	800322c <LoopCopyDataInit>

08003226 <CopyDataInit>:
 8003226:	58d4      	ldr	r4, [r2, r3]
 8003228:	50c4      	str	r4, [r0, r3]
 800322a:	3304      	adds	r3, #4

0800322c <LoopCopyDataInit>:
 800322c:	18c4      	adds	r4, r0, r3
 800322e:	428c      	cmp	r4, r1
 8003230:	d3f9      	bcc.n	8003226 <CopyDataInit>
 8003232:	4a0a      	ldr	r2, [pc, #40]	@ (800325c <LoopForever+0x12>)
 8003234:	4c0a      	ldr	r4, [pc, #40]	@ (8003260 <LoopForever+0x16>)
 8003236:	2300      	movs	r3, #0
 8003238:	e001      	b.n	800323e <LoopFillZerobss>

0800323a <FillZerobss>:
 800323a:	6013      	str	r3, [r2, #0]
 800323c:	3204      	adds	r2, #4

0800323e <LoopFillZerobss>:
 800323e:	42a2      	cmp	r2, r4
 8003240:	d3fb      	bcc.n	800323a <FillZerobss>
 8003242:	f007 faf9 	bl	800a838 <__libc_init_array>
 8003246:	f7fd fed5 	bl	8000ff4 <main>

0800324a <LoopForever>:
 800324a:	e7fe      	b.n	800324a <LoopForever>
 800324c:	20008000 	.word	0x20008000
 8003250:	20000000 	.word	0x20000000
 8003254:	20000224 	.word	0x20000224
 8003258:	0800cdc0 	.word	0x0800cdc0
 800325c:	20000224 	.word	0x20000224
 8003260:	200052a8 	.word	0x200052a8

08003264 <ADC1_2_IRQHandler>:
 8003264:	e7fe      	b.n	8003264 <ADC1_2_IRQHandler>

08003266 <HAL_Init>:
 8003266:	b580      	push	{r7, lr}
 8003268:	b082      	sub	sp, #8
 800326a:	af00      	add	r7, sp, #0
 800326c:	2300      	movs	r3, #0
 800326e:	71fb      	strb	r3, [r7, #7]
 8003270:	2003      	movs	r0, #3
 8003272:	f001 fe19 	bl	8004ea8 <HAL_NVIC_SetPriorityGrouping>
 8003276:	200f      	movs	r0, #15
 8003278:	f000 f80e 	bl	8003298 <HAL_InitTick>
 800327c:	4603      	mov	r3, r0
 800327e:	2b00      	cmp	r3, #0
 8003280:	d002      	beq.n	8003288 <HAL_Init+0x22>
 8003282:	2301      	movs	r3, #1
 8003284:	71fb      	strb	r3, [r7, #7]
 8003286:	e001      	b.n	800328c <HAL_Init+0x26>
 8003288:	f7ff fcfe 	bl	8002c88 <HAL_MspInit>
 800328c:	79fb      	ldrb	r3, [r7, #7]
 800328e:	4618      	mov	r0, r3
 8003290:	3708      	adds	r7, #8
 8003292:	46bd      	mov	sp, r7
 8003294:	bd80      	pop	{r7, pc}
	...

08003298 <HAL_InitTick>:
 8003298:	b580      	push	{r7, lr}
 800329a:	b084      	sub	sp, #16
 800329c:	af00      	add	r7, sp, #0
 800329e:	6078      	str	r0, [r7, #4]
 80032a0:	2300      	movs	r3, #0
 80032a2:	73fb      	strb	r3, [r7, #15]
 80032a4:	4b16      	ldr	r3, [pc, #88]	@ (8003300 <HAL_InitTick+0x68>)
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	d022      	beq.n	80032f2 <HAL_InitTick+0x5a>
 80032ac:	4b15      	ldr	r3, [pc, #84]	@ (8003304 <HAL_InitTick+0x6c>)
 80032ae:	681a      	ldr	r2, [r3, #0]
 80032b0:	4b13      	ldr	r3, [pc, #76]	@ (8003300 <HAL_InitTick+0x68>)
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80032b8:	fbb1 f3f3 	udiv	r3, r1, r3
 80032bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80032c0:	4618      	mov	r0, r3
 80032c2:	f001 fe24 	bl	8004f0e <HAL_SYSTICK_Config>
 80032c6:	4603      	mov	r3, r0
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	d10f      	bne.n	80032ec <HAL_InitTick+0x54>
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	2b0f      	cmp	r3, #15
 80032d0:	d809      	bhi.n	80032e6 <HAL_InitTick+0x4e>
 80032d2:	2200      	movs	r2, #0
 80032d4:	6879      	ldr	r1, [r7, #4]
 80032d6:	f04f 30ff 	mov.w	r0, #4294967295
 80032da:	f001 fdf0 	bl	8004ebe <HAL_NVIC_SetPriority>
 80032de:	4a0a      	ldr	r2, [pc, #40]	@ (8003308 <HAL_InitTick+0x70>)
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	6013      	str	r3, [r2, #0]
 80032e4:	e007      	b.n	80032f6 <HAL_InitTick+0x5e>
 80032e6:	2301      	movs	r3, #1
 80032e8:	73fb      	strb	r3, [r7, #15]
 80032ea:	e004      	b.n	80032f6 <HAL_InitTick+0x5e>
 80032ec:	2301      	movs	r3, #1
 80032ee:	73fb      	strb	r3, [r7, #15]
 80032f0:	e001      	b.n	80032f6 <HAL_InitTick+0x5e>
 80032f2:	2301      	movs	r3, #1
 80032f4:	73fb      	strb	r3, [r7, #15]
 80032f6:	7bfb      	ldrb	r3, [r7, #15]
 80032f8:	4618      	mov	r0, r3
 80032fa:	3710      	adds	r7, #16
 80032fc:	46bd      	mov	sp, r7
 80032fe:	bd80      	pop	{r7, pc}
 8003300:	20000058 	.word	0x20000058
 8003304:	20000050 	.word	0x20000050
 8003308:	20000054 	.word	0x20000054

0800330c <HAL_IncTick>:
 800330c:	b480      	push	{r7}
 800330e:	af00      	add	r7, sp, #0
 8003310:	4b05      	ldr	r3, [pc, #20]	@ (8003328 <HAL_IncTick+0x1c>)
 8003312:	681a      	ldr	r2, [r3, #0]
 8003314:	4b05      	ldr	r3, [pc, #20]	@ (800332c <HAL_IncTick+0x20>)
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4413      	add	r3, r2
 800331a:	4a03      	ldr	r2, [pc, #12]	@ (8003328 <HAL_IncTick+0x1c>)
 800331c:	6013      	str	r3, [r2, #0]
 800331e:	bf00      	nop
 8003320:	46bd      	mov	sp, r7
 8003322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003326:	4770      	bx	lr
 8003328:	20005158 	.word	0x20005158
 800332c:	20000058 	.word	0x20000058

08003330 <HAL_GetTick>:
 8003330:	b480      	push	{r7}
 8003332:	af00      	add	r7, sp, #0
 8003334:	4b03      	ldr	r3, [pc, #12]	@ (8003344 <HAL_GetTick+0x14>)
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	4618      	mov	r0, r3
 800333a:	46bd      	mov	sp, r7
 800333c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003340:	4770      	bx	lr
 8003342:	bf00      	nop
 8003344:	20005158 	.word	0x20005158

08003348 <HAL_Delay>:
 8003348:	b580      	push	{r7, lr}
 800334a:	b084      	sub	sp, #16
 800334c:	af00      	add	r7, sp, #0
 800334e:	6078      	str	r0, [r7, #4]
 8003350:	f7ff ffee 	bl	8003330 <HAL_GetTick>
 8003354:	60b8      	str	r0, [r7, #8]
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	60fb      	str	r3, [r7, #12]
 800335a:	68fb      	ldr	r3, [r7, #12]
 800335c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003360:	d004      	beq.n	800336c <HAL_Delay+0x24>
 8003362:	4b09      	ldr	r3, [pc, #36]	@ (8003388 <HAL_Delay+0x40>)
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	68fa      	ldr	r2, [r7, #12]
 8003368:	4413      	add	r3, r2
 800336a:	60fb      	str	r3, [r7, #12]
 800336c:	bf00      	nop
 800336e:	f7ff ffdf 	bl	8003330 <HAL_GetTick>
 8003372:	4602      	mov	r2, r0
 8003374:	68bb      	ldr	r3, [r7, #8]
 8003376:	1ad3      	subs	r3, r2, r3
 8003378:	68fa      	ldr	r2, [r7, #12]
 800337a:	429a      	cmp	r2, r3
 800337c:	d8f7      	bhi.n	800336e <HAL_Delay+0x26>
 800337e:	bf00      	nop
 8003380:	bf00      	nop
 8003382:	3710      	adds	r7, #16
 8003384:	46bd      	mov	sp, r7
 8003386:	bd80      	pop	{r7, pc}
 8003388:	20000058 	.word	0x20000058

0800338c <LL_ADC_SetCommonClock>:
 800338c:	b480      	push	{r7}
 800338e:	b083      	sub	sp, #12
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]
 8003394:	6039      	str	r1, [r7, #0]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	689b      	ldr	r3, [r3, #8]
 800339a:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 800339e:	683b      	ldr	r3, [r7, #0]
 80033a0:	431a      	orrs	r2, r3
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	609a      	str	r2, [r3, #8]
 80033a6:	bf00      	nop
 80033a8:	370c      	adds	r7, #12
 80033aa:	46bd      	mov	sp, r7
 80033ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033b0:	4770      	bx	lr

080033b2 <LL_ADC_SetCommonPathInternalCh>:
 80033b2:	b480      	push	{r7}
 80033b4:	b083      	sub	sp, #12
 80033b6:	af00      	add	r7, sp, #0
 80033b8:	6078      	str	r0, [r7, #4]
 80033ba:	6039      	str	r1, [r7, #0]
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	689b      	ldr	r3, [r3, #8]
 80033c0:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 80033c4:	683b      	ldr	r3, [r7, #0]
 80033c6:	431a      	orrs	r2, r3
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	609a      	str	r2, [r3, #8]
 80033cc:	bf00      	nop
 80033ce:	370c      	adds	r7, #12
 80033d0:	46bd      	mov	sp, r7
 80033d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d6:	4770      	bx	lr

080033d8 <LL_ADC_GetCommonPathInternalCh>:
 80033d8:	b480      	push	{r7}
 80033da:	b083      	sub	sp, #12
 80033dc:	af00      	add	r7, sp, #0
 80033de:	6078      	str	r0, [r7, #4]
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	689b      	ldr	r3, [r3, #8]
 80033e4:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 80033e8:	4618      	mov	r0, r3
 80033ea:	370c      	adds	r7, #12
 80033ec:	46bd      	mov	sp, r7
 80033ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f2:	4770      	bx	lr

080033f4 <LL_ADC_SetOffset>:
 80033f4:	b480      	push	{r7}
 80033f6:	b087      	sub	sp, #28
 80033f8:	af00      	add	r7, sp, #0
 80033fa:	60f8      	str	r0, [r7, #12]
 80033fc:	60b9      	str	r1, [r7, #8]
 80033fe:	607a      	str	r2, [r7, #4]
 8003400:	603b      	str	r3, [r7, #0]
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	3360      	adds	r3, #96	@ 0x60
 8003406:	461a      	mov	r2, r3
 8003408:	68bb      	ldr	r3, [r7, #8]
 800340a:	009b      	lsls	r3, r3, #2
 800340c:	4413      	add	r3, r2
 800340e:	617b      	str	r3, [r7, #20]
 8003410:	697b      	ldr	r3, [r7, #20]
 8003412:	681a      	ldr	r2, [r3, #0]
 8003414:	4b08      	ldr	r3, [pc, #32]	@ (8003438 <LL_ADC_SetOffset+0x44>)
 8003416:	4013      	ands	r3, r2
 8003418:	687a      	ldr	r2, [r7, #4]
 800341a:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 800341e:	683a      	ldr	r2, [r7, #0]
 8003420:	430a      	orrs	r2, r1
 8003422:	4313      	orrs	r3, r2
 8003424:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8003428:	697b      	ldr	r3, [r7, #20]
 800342a:	601a      	str	r2, [r3, #0]
 800342c:	bf00      	nop
 800342e:	371c      	adds	r7, #28
 8003430:	46bd      	mov	sp, r7
 8003432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003436:	4770      	bx	lr
 8003438:	03fff000 	.word	0x03fff000

0800343c <LL_ADC_GetOffsetChannel>:
 800343c:	b480      	push	{r7}
 800343e:	b085      	sub	sp, #20
 8003440:	af00      	add	r7, sp, #0
 8003442:	6078      	str	r0, [r7, #4]
 8003444:	6039      	str	r1, [r7, #0]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	3360      	adds	r3, #96	@ 0x60
 800344a:	461a      	mov	r2, r3
 800344c:	683b      	ldr	r3, [r7, #0]
 800344e:	009b      	lsls	r3, r3, #2
 8003450:	4413      	add	r3, r2
 8003452:	60fb      	str	r3, [r7, #12]
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 800345c:	4618      	mov	r0, r3
 800345e:	3714      	adds	r7, #20
 8003460:	46bd      	mov	sp, r7
 8003462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003466:	4770      	bx	lr

08003468 <LL_ADC_SetOffsetState>:
 8003468:	b480      	push	{r7}
 800346a:	b087      	sub	sp, #28
 800346c:	af00      	add	r7, sp, #0
 800346e:	60f8      	str	r0, [r7, #12]
 8003470:	60b9      	str	r1, [r7, #8]
 8003472:	607a      	str	r2, [r7, #4]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	3360      	adds	r3, #96	@ 0x60
 8003478:	461a      	mov	r2, r3
 800347a:	68bb      	ldr	r3, [r7, #8]
 800347c:	009b      	lsls	r3, r3, #2
 800347e:	4413      	add	r3, r2
 8003480:	617b      	str	r3, [r7, #20]
 8003482:	697b      	ldr	r3, [r7, #20]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	431a      	orrs	r2, r3
 800348e:	697b      	ldr	r3, [r7, #20]
 8003490:	601a      	str	r2, [r3, #0]
 8003492:	bf00      	nop
 8003494:	371c      	adds	r7, #28
 8003496:	46bd      	mov	sp, r7
 8003498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349c:	4770      	bx	lr

0800349e <LL_ADC_SetOffsetSign>:
 800349e:	b480      	push	{r7}
 80034a0:	b087      	sub	sp, #28
 80034a2:	af00      	add	r7, sp, #0
 80034a4:	60f8      	str	r0, [r7, #12]
 80034a6:	60b9      	str	r1, [r7, #8]
 80034a8:	607a      	str	r2, [r7, #4]
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	3360      	adds	r3, #96	@ 0x60
 80034ae:	461a      	mov	r2, r3
 80034b0:	68bb      	ldr	r3, [r7, #8]
 80034b2:	009b      	lsls	r3, r3, #2
 80034b4:	4413      	add	r3, r2
 80034b6:	617b      	str	r3, [r7, #20]
 80034b8:	697b      	ldr	r3, [r7, #20]
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	431a      	orrs	r2, r3
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	601a      	str	r2, [r3, #0]
 80034c8:	bf00      	nop
 80034ca:	371c      	adds	r7, #28
 80034cc:	46bd      	mov	sp, r7
 80034ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d2:	4770      	bx	lr

080034d4 <LL_ADC_SetOffsetSaturation>:
 80034d4:	b480      	push	{r7}
 80034d6:	b087      	sub	sp, #28
 80034d8:	af00      	add	r7, sp, #0
 80034da:	60f8      	str	r0, [r7, #12]
 80034dc:	60b9      	str	r1, [r7, #8]
 80034de:	607a      	str	r2, [r7, #4]
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	3360      	adds	r3, #96	@ 0x60
 80034e4:	461a      	mov	r2, r3
 80034e6:	68bb      	ldr	r3, [r7, #8]
 80034e8:	009b      	lsls	r3, r3, #2
 80034ea:	4413      	add	r3, r2
 80034ec:	617b      	str	r3, [r7, #20]
 80034ee:	697b      	ldr	r3, [r7, #20]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	431a      	orrs	r2, r3
 80034fa:	697b      	ldr	r3, [r7, #20]
 80034fc:	601a      	str	r2, [r3, #0]
 80034fe:	bf00      	nop
 8003500:	371c      	adds	r7, #28
 8003502:	46bd      	mov	sp, r7
 8003504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003508:	4770      	bx	lr

0800350a <LL_ADC_SetSamplingTimeCommonConfig>:
 800350a:	b480      	push	{r7}
 800350c:	b083      	sub	sp, #12
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
 8003512:	6039      	str	r1, [r7, #0]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	695b      	ldr	r3, [r3, #20]
 8003518:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800351c:	683b      	ldr	r3, [r7, #0]
 800351e:	431a      	orrs	r2, r3
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	615a      	str	r2, [r3, #20]
 8003524:	bf00      	nop
 8003526:	370c      	adds	r7, #12
 8003528:	46bd      	mov	sp, r7
 800352a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352e:	4770      	bx	lr

08003530 <LL_ADC_REG_IsTriggerSourceSWStart>:
 8003530:	b480      	push	{r7}
 8003532:	b083      	sub	sp, #12
 8003534:	af00      	add	r7, sp, #0
 8003536:	6078      	str	r0, [r7, #4]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	68db      	ldr	r3, [r3, #12]
 800353c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8003540:	2b00      	cmp	r3, #0
 8003542:	d101      	bne.n	8003548 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8003544:	2301      	movs	r3, #1
 8003546:	e000      	b.n	800354a <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8003548:	2300      	movs	r3, #0
 800354a:	4618      	mov	r0, r3
 800354c:	370c      	adds	r7, #12
 800354e:	46bd      	mov	sp, r7
 8003550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003554:	4770      	bx	lr

08003556 <LL_ADC_REG_SetSequencerRanks>:
 8003556:	b480      	push	{r7}
 8003558:	b087      	sub	sp, #28
 800355a:	af00      	add	r7, sp, #0
 800355c:	60f8      	str	r0, [r7, #12]
 800355e:	60b9      	str	r1, [r7, #8]
 8003560:	607a      	str	r2, [r7, #4]
 8003562:	68fb      	ldr	r3, [r7, #12]
 8003564:	3330      	adds	r3, #48	@ 0x30
 8003566:	461a      	mov	r2, r3
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	0a1b      	lsrs	r3, r3, #8
 800356c:	009b      	lsls	r3, r3, #2
 800356e:	f003 030c 	and.w	r3, r3, #12
 8003572:	4413      	add	r3, r2
 8003574:	617b      	str	r3, [r7, #20]
 8003576:	697b      	ldr	r3, [r7, #20]
 8003578:	681a      	ldr	r2, [r3, #0]
 800357a:	68bb      	ldr	r3, [r7, #8]
 800357c:	f003 031f 	and.w	r3, r3, #31
 8003580:	211f      	movs	r1, #31
 8003582:	fa01 f303 	lsl.w	r3, r1, r3
 8003586:	43db      	mvns	r3, r3
 8003588:	401a      	ands	r2, r3
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	0e9b      	lsrs	r3, r3, #26
 800358e:	f003 011f 	and.w	r1, r3, #31
 8003592:	68bb      	ldr	r3, [r7, #8]
 8003594:	f003 031f 	and.w	r3, r3, #31
 8003598:	fa01 f303 	lsl.w	r3, r1, r3
 800359c:	431a      	orrs	r2, r3
 800359e:	697b      	ldr	r3, [r7, #20]
 80035a0:	601a      	str	r2, [r3, #0]
 80035a2:	bf00      	nop
 80035a4:	371c      	adds	r7, #28
 80035a6:	46bd      	mov	sp, r7
 80035a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ac:	4770      	bx	lr

080035ae <LL_ADC_SetChannelSamplingTime>:
 80035ae:	b480      	push	{r7}
 80035b0:	b087      	sub	sp, #28
 80035b2:	af00      	add	r7, sp, #0
 80035b4:	60f8      	str	r0, [r7, #12]
 80035b6:	60b9      	str	r1, [r7, #8]
 80035b8:	607a      	str	r2, [r7, #4]
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	3314      	adds	r3, #20
 80035be:	461a      	mov	r2, r3
 80035c0:	68bb      	ldr	r3, [r7, #8]
 80035c2:	0e5b      	lsrs	r3, r3, #25
 80035c4:	009b      	lsls	r3, r3, #2
 80035c6:	f003 0304 	and.w	r3, r3, #4
 80035ca:	4413      	add	r3, r2
 80035cc:	617b      	str	r3, [r7, #20]
 80035ce:	697b      	ldr	r3, [r7, #20]
 80035d0:	681a      	ldr	r2, [r3, #0]
 80035d2:	68bb      	ldr	r3, [r7, #8]
 80035d4:	0d1b      	lsrs	r3, r3, #20
 80035d6:	f003 031f 	and.w	r3, r3, #31
 80035da:	2107      	movs	r1, #7
 80035dc:	fa01 f303 	lsl.w	r3, r1, r3
 80035e0:	43db      	mvns	r3, r3
 80035e2:	401a      	ands	r2, r3
 80035e4:	68bb      	ldr	r3, [r7, #8]
 80035e6:	0d1b      	lsrs	r3, r3, #20
 80035e8:	f003 031f 	and.w	r3, r3, #31
 80035ec:	6879      	ldr	r1, [r7, #4]
 80035ee:	fa01 f303 	lsl.w	r3, r1, r3
 80035f2:	431a      	orrs	r2, r3
 80035f4:	697b      	ldr	r3, [r7, #20]
 80035f6:	601a      	str	r2, [r3, #0]
 80035f8:	bf00      	nop
 80035fa:	371c      	adds	r7, #28
 80035fc:	46bd      	mov	sp, r7
 80035fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003602:	4770      	bx	lr

08003604 <LL_ADC_SetChannelSingleDiff>:
 8003604:	b480      	push	{r7}
 8003606:	b085      	sub	sp, #20
 8003608:	af00      	add	r7, sp, #0
 800360a:	60f8      	str	r0, [r7, #12]
 800360c:	60b9      	str	r1, [r7, #8]
 800360e:	607a      	str	r2, [r7, #4]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8003616:	68bb      	ldr	r3, [r7, #8]
 8003618:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800361c:	43db      	mvns	r3, r3
 800361e:	401a      	ands	r2, r3
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	f003 0318 	and.w	r3, r3, #24
 8003626:	4908      	ldr	r1, [pc, #32]	@ (8003648 <LL_ADC_SetChannelSingleDiff+0x44>)
 8003628:	40d9      	lsrs	r1, r3
 800362a:	68bb      	ldr	r3, [r7, #8]
 800362c:	400b      	ands	r3, r1
 800362e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003632:	431a      	orrs	r2, r3
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 800363a:	bf00      	nop
 800363c:	3714      	adds	r7, #20
 800363e:	46bd      	mov	sp, r7
 8003640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003644:	4770      	bx	lr
 8003646:	bf00      	nop
 8003648:	0007ffff 	.word	0x0007ffff

0800364c <LL_ADC_GetMultimode>:
 800364c:	b480      	push	{r7}
 800364e:	b083      	sub	sp, #12
 8003650:	af00      	add	r7, sp, #0
 8003652:	6078      	str	r0, [r7, #4]
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	689b      	ldr	r3, [r3, #8]
 8003658:	f003 031f 	and.w	r3, r3, #31
 800365c:	4618      	mov	r0, r3
 800365e:	370c      	adds	r7, #12
 8003660:	46bd      	mov	sp, r7
 8003662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003666:	4770      	bx	lr

08003668 <LL_ADC_GetMultiDMATransfer>:
 8003668:	b480      	push	{r7}
 800366a:	b083      	sub	sp, #12
 800366c:	af00      	add	r7, sp, #0
 800366e:	6078      	str	r0, [r7, #4]
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	689b      	ldr	r3, [r3, #8]
 8003674:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8003678:	4618      	mov	r0, r3
 800367a:	370c      	adds	r7, #12
 800367c:	46bd      	mov	sp, r7
 800367e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003682:	4770      	bx	lr

08003684 <LL_ADC_DisableDeepPowerDown>:
 8003684:	b480      	push	{r7}
 8003686:	b083      	sub	sp, #12
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	689b      	ldr	r3, [r3, #8]
 8003690:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8003694:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003698:	687a      	ldr	r2, [r7, #4]
 800369a:	6093      	str	r3, [r2, #8]
 800369c:	bf00      	nop
 800369e:	370c      	adds	r7, #12
 80036a0:	46bd      	mov	sp, r7
 80036a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a6:	4770      	bx	lr

080036a8 <LL_ADC_IsDeepPowerDownEnabled>:
 80036a8:	b480      	push	{r7}
 80036aa:	b083      	sub	sp, #12
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	6078      	str	r0, [r7, #4]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	689b      	ldr	r3, [r3, #8]
 80036b4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80036b8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80036bc:	d101      	bne.n	80036c2 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80036be:	2301      	movs	r3, #1
 80036c0:	e000      	b.n	80036c4 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80036c2:	2300      	movs	r3, #0
 80036c4:	4618      	mov	r0, r3
 80036c6:	370c      	adds	r7, #12
 80036c8:	46bd      	mov	sp, r7
 80036ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ce:	4770      	bx	lr

080036d0 <LL_ADC_EnableInternalRegulator>:
 80036d0:	b480      	push	{r7}
 80036d2:	b083      	sub	sp, #12
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6078      	str	r0, [r7, #4]
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	689b      	ldr	r3, [r3, #8]
 80036dc:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 80036e0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80036e4:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	609a      	str	r2, [r3, #8]
 80036ec:	bf00      	nop
 80036ee:	370c      	adds	r7, #12
 80036f0:	46bd      	mov	sp, r7
 80036f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036f6:	4770      	bx	lr

080036f8 <LL_ADC_IsInternalRegulatorEnabled>:
 80036f8:	b480      	push	{r7}
 80036fa:	b083      	sub	sp, #12
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	6078      	str	r0, [r7, #4]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	689b      	ldr	r3, [r3, #8]
 8003704:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003708:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800370c:	d101      	bne.n	8003712 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800370e:	2301      	movs	r3, #1
 8003710:	e000      	b.n	8003714 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8003712:	2300      	movs	r3, #0
 8003714:	4618      	mov	r0, r3
 8003716:	370c      	adds	r7, #12
 8003718:	46bd      	mov	sp, r7
 800371a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800371e:	4770      	bx	lr

08003720 <LL_ADC_Enable>:
 8003720:	b480      	push	{r7}
 8003722:	b083      	sub	sp, #12
 8003724:	af00      	add	r7, sp, #0
 8003726:	6078      	str	r0, [r7, #4]
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	689b      	ldr	r3, [r3, #8]
 800372c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003730:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003734:	f043 0201 	orr.w	r2, r3, #1
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	609a      	str	r2, [r3, #8]
 800373c:	bf00      	nop
 800373e:	370c      	adds	r7, #12
 8003740:	46bd      	mov	sp, r7
 8003742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003746:	4770      	bx	lr

08003748 <LL_ADC_Disable>:
 8003748:	b480      	push	{r7}
 800374a:	b083      	sub	sp, #12
 800374c:	af00      	add	r7, sp, #0
 800374e:	6078      	str	r0, [r7, #4]
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	689b      	ldr	r3, [r3, #8]
 8003754:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003758:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800375c:	f043 0202 	orr.w	r2, r3, #2
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	609a      	str	r2, [r3, #8]
 8003764:	bf00      	nop
 8003766:	370c      	adds	r7, #12
 8003768:	46bd      	mov	sp, r7
 800376a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800376e:	4770      	bx	lr

08003770 <LL_ADC_IsEnabled>:
 8003770:	b480      	push	{r7}
 8003772:	b083      	sub	sp, #12
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	689b      	ldr	r3, [r3, #8]
 800377c:	f003 0301 	and.w	r3, r3, #1
 8003780:	2b01      	cmp	r3, #1
 8003782:	d101      	bne.n	8003788 <LL_ADC_IsEnabled+0x18>
 8003784:	2301      	movs	r3, #1
 8003786:	e000      	b.n	800378a <LL_ADC_IsEnabled+0x1a>
 8003788:	2300      	movs	r3, #0
 800378a:	4618      	mov	r0, r3
 800378c:	370c      	adds	r7, #12
 800378e:	46bd      	mov	sp, r7
 8003790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003794:	4770      	bx	lr

08003796 <LL_ADC_IsDisableOngoing>:
 8003796:	b480      	push	{r7}
 8003798:	b083      	sub	sp, #12
 800379a:	af00      	add	r7, sp, #0
 800379c:	6078      	str	r0, [r7, #4]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	689b      	ldr	r3, [r3, #8]
 80037a2:	f003 0302 	and.w	r3, r3, #2
 80037a6:	2b02      	cmp	r3, #2
 80037a8:	d101      	bne.n	80037ae <LL_ADC_IsDisableOngoing+0x18>
 80037aa:	2301      	movs	r3, #1
 80037ac:	e000      	b.n	80037b0 <LL_ADC_IsDisableOngoing+0x1a>
 80037ae:	2300      	movs	r3, #0
 80037b0:	4618      	mov	r0, r3
 80037b2:	370c      	adds	r7, #12
 80037b4:	46bd      	mov	sp, r7
 80037b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ba:	4770      	bx	lr

080037bc <LL_ADC_REG_StartConversion>:
 80037bc:	b480      	push	{r7}
 80037be:	b083      	sub	sp, #12
 80037c0:	af00      	add	r7, sp, #0
 80037c2:	6078      	str	r0, [r7, #4]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	689b      	ldr	r3, [r3, #8]
 80037c8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80037cc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80037d0:	f043 0204 	orr.w	r2, r3, #4
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	609a      	str	r2, [r3, #8]
 80037d8:	bf00      	nop
 80037da:	370c      	adds	r7, #12
 80037dc:	46bd      	mov	sp, r7
 80037de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e2:	4770      	bx	lr

080037e4 <LL_ADC_REG_StopConversion>:
 80037e4:	b480      	push	{r7}
 80037e6:	b083      	sub	sp, #12
 80037e8:	af00      	add	r7, sp, #0
 80037ea:	6078      	str	r0, [r7, #4]
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	689b      	ldr	r3, [r3, #8]
 80037f0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80037f4:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80037f8:	f043 0210 	orr.w	r2, r3, #16
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	609a      	str	r2, [r3, #8]
 8003800:	bf00      	nop
 8003802:	370c      	adds	r7, #12
 8003804:	46bd      	mov	sp, r7
 8003806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800380a:	4770      	bx	lr

0800380c <LL_ADC_REG_IsConversionOngoing>:
 800380c:	b480      	push	{r7}
 800380e:	b083      	sub	sp, #12
 8003810:	af00      	add	r7, sp, #0
 8003812:	6078      	str	r0, [r7, #4]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	689b      	ldr	r3, [r3, #8]
 8003818:	f003 0304 	and.w	r3, r3, #4
 800381c:	2b04      	cmp	r3, #4
 800381e:	d101      	bne.n	8003824 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003820:	2301      	movs	r3, #1
 8003822:	e000      	b.n	8003826 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003824:	2300      	movs	r3, #0
 8003826:	4618      	mov	r0, r3
 8003828:	370c      	adds	r7, #12
 800382a:	46bd      	mov	sp, r7
 800382c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003830:	4770      	bx	lr

08003832 <LL_ADC_INJ_StopConversion>:
 8003832:	b480      	push	{r7}
 8003834:	b083      	sub	sp, #12
 8003836:	af00      	add	r7, sp, #0
 8003838:	6078      	str	r0, [r7, #4]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	689b      	ldr	r3, [r3, #8]
 800383e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003842:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003846:	f043 0220 	orr.w	r2, r3, #32
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	609a      	str	r2, [r3, #8]
 800384e:	bf00      	nop
 8003850:	370c      	adds	r7, #12
 8003852:	46bd      	mov	sp, r7
 8003854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003858:	4770      	bx	lr

0800385a <LL_ADC_INJ_IsConversionOngoing>:
 800385a:	b480      	push	{r7}
 800385c:	b083      	sub	sp, #12
 800385e:	af00      	add	r7, sp, #0
 8003860:	6078      	str	r0, [r7, #4]
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	689b      	ldr	r3, [r3, #8]
 8003866:	f003 0308 	and.w	r3, r3, #8
 800386a:	2b08      	cmp	r3, #8
 800386c:	d101      	bne.n	8003872 <LL_ADC_INJ_IsConversionOngoing+0x18>
 800386e:	2301      	movs	r3, #1
 8003870:	e000      	b.n	8003874 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8003872:	2300      	movs	r3, #0
 8003874:	4618      	mov	r0, r3
 8003876:	370c      	adds	r7, #12
 8003878:	46bd      	mov	sp, r7
 800387a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800387e:	4770      	bx	lr

08003880 <HAL_ADC_Init>:
 8003880:	b590      	push	{r4, r7, lr}
 8003882:	b089      	sub	sp, #36	@ 0x24
 8003884:	af00      	add	r7, sp, #0
 8003886:	6078      	str	r0, [r7, #4]
 8003888:	2300      	movs	r3, #0
 800388a:	77fb      	strb	r3, [r7, #31]
 800388c:	2300      	movs	r3, #0
 800388e:	60fb      	str	r3, [r7, #12]
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	2b00      	cmp	r3, #0
 8003894:	d101      	bne.n	800389a <HAL_ADC_Init+0x1a>
 8003896:	2301      	movs	r3, #1
 8003898:	e167      	b.n	8003b6a <HAL_ADC_Init+0x2ea>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	695b      	ldr	r3, [r3, #20]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d109      	bne.n	80038bc <HAL_ADC_Init+0x3c>
 80038a8:	6878      	ldr	r0, [r7, #4]
 80038aa:	f7ff fa11 	bl	8002cd0 <HAL_ADC_MspInit>
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	2200      	movs	r2, #0
 80038b2:	661a      	str	r2, [r3, #96]	@ 0x60
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	2200      	movs	r2, #0
 80038b8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	4618      	mov	r0, r3
 80038c2:	f7ff fef1 	bl	80036a8 <LL_ADC_IsDeepPowerDownEnabled>
 80038c6:	4603      	mov	r3, r0
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d004      	beq.n	80038d6 <HAL_ADC_Init+0x56>
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	4618      	mov	r0, r3
 80038d2:	f7ff fed7 	bl	8003684 <LL_ADC_DisableDeepPowerDown>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	4618      	mov	r0, r3
 80038dc:	f7ff ff0c 	bl	80036f8 <LL_ADC_IsInternalRegulatorEnabled>
 80038e0:	4603      	mov	r3, r0
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d115      	bne.n	8003912 <HAL_ADC_Init+0x92>
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	4618      	mov	r0, r3
 80038ec:	f7ff fef0 	bl	80036d0 <LL_ADC_EnableInternalRegulator>
 80038f0:	4ba0      	ldr	r3, [pc, #640]	@ (8003b74 <HAL_ADC_Init+0x2f4>)
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	099b      	lsrs	r3, r3, #6
 80038f6:	4aa0      	ldr	r2, [pc, #640]	@ (8003b78 <HAL_ADC_Init+0x2f8>)
 80038f8:	fba2 2303 	umull	r2, r3, r2, r3
 80038fc:	099b      	lsrs	r3, r3, #6
 80038fe:	3301      	adds	r3, #1
 8003900:	005b      	lsls	r3, r3, #1
 8003902:	60fb      	str	r3, [r7, #12]
 8003904:	e002      	b.n	800390c <HAL_ADC_Init+0x8c>
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	3b01      	subs	r3, #1
 800390a:	60fb      	str	r3, [r7, #12]
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	2b00      	cmp	r3, #0
 8003910:	d1f9      	bne.n	8003906 <HAL_ADC_Init+0x86>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	4618      	mov	r0, r3
 8003918:	f7ff feee 	bl	80036f8 <LL_ADC_IsInternalRegulatorEnabled>
 800391c:	4603      	mov	r3, r0
 800391e:	2b00      	cmp	r3, #0
 8003920:	d10d      	bne.n	800393e <HAL_ADC_Init+0xbe>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003926:	f043 0210 	orr.w	r2, r3, #16
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003932:	f043 0201 	orr.w	r2, r3, #1
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	661a      	str	r2, [r3, #96]	@ 0x60
 800393a:	2301      	movs	r3, #1
 800393c:	77fb      	strb	r3, [r7, #31]
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	4618      	mov	r0, r3
 8003944:	f7ff ff62 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 8003948:	6178      	str	r0, [r7, #20]
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800394e:	f003 0310 	and.w	r3, r3, #16
 8003952:	2b00      	cmp	r3, #0
 8003954:	f040 8100 	bne.w	8003b58 <HAL_ADC_Init+0x2d8>
 8003958:	697b      	ldr	r3, [r7, #20]
 800395a:	2b00      	cmp	r3, #0
 800395c:	f040 80fc 	bne.w	8003b58 <HAL_ADC_Init+0x2d8>
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003964:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8003968:	f043 0202 	orr.w	r2, r3, #2
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4618      	mov	r0, r3
 8003976:	f7ff fefb 	bl	8003770 <LL_ADC_IsEnabled>
 800397a:	4603      	mov	r3, r0
 800397c:	2b00      	cmp	r3, #0
 800397e:	d111      	bne.n	80039a4 <HAL_ADC_Init+0x124>
 8003980:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003984:	f7ff fef4 	bl	8003770 <LL_ADC_IsEnabled>
 8003988:	4604      	mov	r4, r0
 800398a:	487c      	ldr	r0, [pc, #496]	@ (8003b7c <HAL_ADC_Init+0x2fc>)
 800398c:	f7ff fef0 	bl	8003770 <LL_ADC_IsEnabled>
 8003990:	4603      	mov	r3, r0
 8003992:	4323      	orrs	r3, r4
 8003994:	2b00      	cmp	r3, #0
 8003996:	d105      	bne.n	80039a4 <HAL_ADC_Init+0x124>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	685b      	ldr	r3, [r3, #4]
 800399c:	4619      	mov	r1, r3
 800399e:	4878      	ldr	r0, [pc, #480]	@ (8003b80 <HAL_ADC_Init+0x300>)
 80039a0:	f7ff fcf4 	bl	800338c <LL_ADC_SetCommonClock>
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	7f5b      	ldrb	r3, [r3, #29]
 80039a8:	035a      	lsls	r2, r3, #13
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80039ae:	431a      	orrs	r2, r3
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	68db      	ldr	r3, [r3, #12]
 80039b4:	431a      	orrs	r2, r3
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	689b      	ldr	r3, [r3, #8]
 80039ba:	431a      	orrs	r2, r3
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80039c2:	041b      	lsls	r3, r3, #16
 80039c4:	4313      	orrs	r3, r2
 80039c6:	61bb      	str	r3, [r7, #24]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80039ce:	2b01      	cmp	r3, #1
 80039d0:	d106      	bne.n	80039e0 <HAL_ADC_Init+0x160>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039d6:	3b01      	subs	r3, #1
 80039d8:	045b      	lsls	r3, r3, #17
 80039da:	69ba      	ldr	r2, [r7, #24]
 80039dc:	4313      	orrs	r3, r2
 80039de:	61bb      	str	r3, [r7, #24]
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80039e4:	2b00      	cmp	r3, #0
 80039e6:	d009      	beq.n	80039fc <HAL_ADC_Init+0x17c>
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80039ec:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80039f4:	4313      	orrs	r3, r2
 80039f6:	69ba      	ldr	r2, [r7, #24]
 80039f8:	4313      	orrs	r3, r2
 80039fa:	61bb      	str	r3, [r7, #24]
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	68da      	ldr	r2, [r3, #12]
 8003a02:	4b60      	ldr	r3, [pc, #384]	@ (8003b84 <HAL_ADC_Init+0x304>)
 8003a04:	4013      	ands	r3, r2
 8003a06:	687a      	ldr	r2, [r7, #4]
 8003a08:	6812      	ldr	r2, [r2, #0]
 8003a0a:	69b9      	ldr	r1, [r7, #24]
 8003a0c:	430b      	orrs	r3, r1
 8003a0e:	60d3      	str	r3, [r2, #12]
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	691b      	ldr	r3, [r3, #16]
 8003a16:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	430a      	orrs	r2, r1
 8003a24:	611a      	str	r2, [r3, #16]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	4618      	mov	r0, r3
 8003a2c:	f7ff ff15 	bl	800385a <LL_ADC_INJ_IsConversionOngoing>
 8003a30:	6138      	str	r0, [r7, #16]
 8003a32:	697b      	ldr	r3, [r7, #20]
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	d16d      	bne.n	8003b14 <HAL_ADC_Init+0x294>
 8003a38:	693b      	ldr	r3, [r7, #16]
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d16a      	bne.n	8003b14 <HAL_ADC_Init+0x294>
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	7f1b      	ldrb	r3, [r3, #28]
 8003a42:	039a      	lsls	r2, r3, #14
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003a4a:	005b      	lsls	r3, r3, #1
 8003a4c:	4313      	orrs	r3, r2
 8003a4e:	61bb      	str	r3, [r7, #24]
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	68db      	ldr	r3, [r3, #12]
 8003a56:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003a5a:	f023 0302 	bic.w	r3, r3, #2
 8003a5e:	687a      	ldr	r2, [r7, #4]
 8003a60:	6812      	ldr	r2, [r2, #0]
 8003a62:	69b9      	ldr	r1, [r7, #24]
 8003a64:	430b      	orrs	r3, r1
 8003a66:	60d3      	str	r3, [r2, #12]
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	691b      	ldr	r3, [r3, #16]
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d017      	beq.n	8003aa0 <HAL_ADC_Init+0x220>
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	691a      	ldr	r2, [r3, #16]
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8003a7e:	611a      	str	r2, [r3, #16]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8003a88:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8003a8c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003a90:	687a      	ldr	r2, [r7, #4]
 8003a92:	6911      	ldr	r1, [r2, #16]
 8003a94:	687a      	ldr	r2, [r7, #4]
 8003a96:	6812      	ldr	r2, [r2, #0]
 8003a98:	430b      	orrs	r3, r1
 8003a9a:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8003a9e:	e013      	b.n	8003ac8 <HAL_ADC_Init+0x248>
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	691a      	ldr	r2, [r3, #16]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8003aae:	611a      	str	r2, [r3, #16]
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8003ab8:	687a      	ldr	r2, [r7, #4]
 8003aba:	6812      	ldr	r2, [r2, #0]
 8003abc:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8003ac0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003ac4:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003ace:	2b01      	cmp	r3, #1
 8003ad0:	d118      	bne.n	8003b04 <HAL_ADC_Init+0x284>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	691b      	ldr	r3, [r3, #16]
 8003ad8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8003adc:	f023 0304 	bic.w	r3, r3, #4
 8003ae0:	687a      	ldr	r2, [r7, #4]
 8003ae2:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8003ae4:	687a      	ldr	r2, [r7, #4]
 8003ae6:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8003ae8:	4311      	orrs	r1, r2
 8003aea:	687a      	ldr	r2, [r7, #4]
 8003aec:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8003aee:	4311      	orrs	r1, r2
 8003af0:	687a      	ldr	r2, [r7, #4]
 8003af2:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8003af4:	430a      	orrs	r2, r1
 8003af6:	431a      	orrs	r2, r3
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	f042 0201 	orr.w	r2, r2, #1
 8003b00:	611a      	str	r2, [r3, #16]
 8003b02:	e007      	b.n	8003b14 <HAL_ADC_Init+0x294>
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	691a      	ldr	r2, [r3, #16]
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	f022 0201 	bic.w	r2, r2, #1
 8003b12:	611a      	str	r2, [r3, #16]
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	695b      	ldr	r3, [r3, #20]
 8003b18:	2b01      	cmp	r3, #1
 8003b1a:	d10c      	bne.n	8003b36 <HAL_ADC_Init+0x2b6>
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b22:	f023 010f 	bic.w	r1, r3, #15
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6a1b      	ldr	r3, [r3, #32]
 8003b2a:	1e5a      	subs	r2, r3, #1
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	430a      	orrs	r2, r1
 8003b32:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b34:	e007      	b.n	8003b46 <HAL_ADC_Init+0x2c6>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f022 020f 	bic.w	r2, r2, #15
 8003b44:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b4a:	f023 0303 	bic.w	r3, r3, #3
 8003b4e:	f043 0201 	orr.w	r2, r3, #1
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003b56:	e007      	b.n	8003b68 <HAL_ADC_Init+0x2e8>
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b5c:	f043 0210 	orr.w	r2, r3, #16
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003b64:	2301      	movs	r3, #1
 8003b66:	77fb      	strb	r3, [r7, #31]
 8003b68:	7ffb      	ldrb	r3, [r7, #31]
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	3724      	adds	r7, #36	@ 0x24
 8003b6e:	46bd      	mov	sp, r7
 8003b70:	bd90      	pop	{r4, r7, pc}
 8003b72:	bf00      	nop
 8003b74:	20000050 	.word	0x20000050
 8003b78:	053e2d63 	.word	0x053e2d63
 8003b7c:	50000100 	.word	0x50000100
 8003b80:	50000300 	.word	0x50000300
 8003b84:	fff04007 	.word	0xfff04007

08003b88 <HAL_ADC_Start>:
 8003b88:	b580      	push	{r7, lr}
 8003b8a:	b086      	sub	sp, #24
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
 8003b90:	4859      	ldr	r0, [pc, #356]	@ (8003cf8 <HAL_ADC_Start+0x170>)
 8003b92:	f7ff fd5b 	bl	800364c <LL_ADC_GetMultimode>
 8003b96:	6138      	str	r0, [r7, #16]
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	4618      	mov	r0, r3
 8003b9e:	f7ff fe35 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 8003ba2:	4603      	mov	r3, r0
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	f040 809f 	bne.w	8003ce8 <HAL_ADC_Start+0x160>
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003bb0:	2b01      	cmp	r3, #1
 8003bb2:	d101      	bne.n	8003bb8 <HAL_ADC_Start+0x30>
 8003bb4:	2302      	movs	r3, #2
 8003bb6:	e09a      	b.n	8003cee <HAL_ADC_Start+0x166>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	2201      	movs	r2, #1
 8003bbc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003bc0:	6878      	ldr	r0, [r7, #4]
 8003bc2:	f000 fe63 	bl	800488c <ADC_Enable>
 8003bc6:	4603      	mov	r3, r0
 8003bc8:	75fb      	strb	r3, [r7, #23]
 8003bca:	7dfb      	ldrb	r3, [r7, #23]
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	f040 8086 	bne.w	8003cde <HAL_ADC_Start+0x156>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bd6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003bda:	f023 0301 	bic.w	r3, r3, #1
 8003bde:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	4a44      	ldr	r2, [pc, #272]	@ (8003cfc <HAL_ADC_Start+0x174>)
 8003bec:	4293      	cmp	r3, r2
 8003bee:	d002      	beq.n	8003bf6 <HAL_ADC_Start+0x6e>
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	e001      	b.n	8003bfa <HAL_ADC_Start+0x72>
 8003bf6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003bfa:	687a      	ldr	r2, [r7, #4]
 8003bfc:	6812      	ldr	r2, [r2, #0]
 8003bfe:	4293      	cmp	r3, r2
 8003c00:	d002      	beq.n	8003c08 <HAL_ADC_Start+0x80>
 8003c02:	693b      	ldr	r3, [r7, #16]
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d105      	bne.n	8003c14 <HAL_ADC_Start+0x8c>
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c0c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c18:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003c1c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003c20:	d106      	bne.n	8003c30 <HAL_ADC_Start+0xa8>
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003c26:	f023 0206 	bic.w	r2, r3, #6
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	661a      	str	r2, [r3, #96]	@ 0x60
 8003c2e:	e002      	b.n	8003c36 <HAL_ADC_Start+0xae>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	2200      	movs	r2, #0
 8003c34:	661a      	str	r2, [r3, #96]	@ 0x60
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	221c      	movs	r2, #28
 8003c3c:	601a      	str	r2, [r3, #0]
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	2200      	movs	r2, #0
 8003c42:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	4a2c      	ldr	r2, [pc, #176]	@ (8003cfc <HAL_ADC_Start+0x174>)
 8003c4c:	4293      	cmp	r3, r2
 8003c4e:	d002      	beq.n	8003c56 <HAL_ADC_Start+0xce>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	e001      	b.n	8003c5a <HAL_ADC_Start+0xd2>
 8003c56:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003c5a:	687a      	ldr	r2, [r7, #4]
 8003c5c:	6812      	ldr	r2, [r2, #0]
 8003c5e:	4293      	cmp	r3, r2
 8003c60:	d008      	beq.n	8003c74 <HAL_ADC_Start+0xec>
 8003c62:	693b      	ldr	r3, [r7, #16]
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d005      	beq.n	8003c74 <HAL_ADC_Start+0xec>
 8003c68:	693b      	ldr	r3, [r7, #16]
 8003c6a:	2b05      	cmp	r3, #5
 8003c6c:	d002      	beq.n	8003c74 <HAL_ADC_Start+0xec>
 8003c6e:	693b      	ldr	r3, [r7, #16]
 8003c70:	2b09      	cmp	r3, #9
 8003c72:	d114      	bne.n	8003c9e <HAL_ADC_Start+0x116>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	68db      	ldr	r3, [r3, #12]
 8003c7a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d007      	beq.n	8003c92 <HAL_ADC_Start+0x10a>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c86:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003c8a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	4618      	mov	r0, r3
 8003c98:	f7ff fd90 	bl	80037bc <LL_ADC_REG_StartConversion>
 8003c9c:	e026      	b.n	8003cec <HAL_ADC_Start+0x164>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ca2:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	4a13      	ldr	r2, [pc, #76]	@ (8003cfc <HAL_ADC_Start+0x174>)
 8003cb0:	4293      	cmp	r3, r2
 8003cb2:	d002      	beq.n	8003cba <HAL_ADC_Start+0x132>
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	e001      	b.n	8003cbe <HAL_ADC_Start+0x136>
 8003cba:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003cbe:	60fb      	str	r3, [r7, #12]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	68db      	ldr	r3, [r3, #12]
 8003cc4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	d00f      	beq.n	8003cec <HAL_ADC_Start+0x164>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cd0:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003cd4:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003cdc:	e006      	b.n	8003cec <HAL_ADC_Start+0x164>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	2200      	movs	r2, #0
 8003ce2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003ce6:	e001      	b.n	8003cec <HAL_ADC_Start+0x164>
 8003ce8:	2302      	movs	r3, #2
 8003cea:	75fb      	strb	r3, [r7, #23]
 8003cec:	7dfb      	ldrb	r3, [r7, #23]
 8003cee:	4618      	mov	r0, r3
 8003cf0:	3718      	adds	r7, #24
 8003cf2:	46bd      	mov	sp, r7
 8003cf4:	bd80      	pop	{r7, pc}
 8003cf6:	bf00      	nop
 8003cf8:	50000300 	.word	0x50000300
 8003cfc:	50000100 	.word	0x50000100

08003d00 <HAL_ADC_Stop>:
 8003d00:	b580      	push	{r7, lr}
 8003d02:	b084      	sub	sp, #16
 8003d04:	af00      	add	r7, sp, #0
 8003d06:	6078      	str	r0, [r7, #4]
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003d0e:	2b01      	cmp	r3, #1
 8003d10:	d101      	bne.n	8003d16 <HAL_ADC_Stop+0x16>
 8003d12:	2302      	movs	r3, #2
 8003d14:	e023      	b.n	8003d5e <HAL_ADC_Stop+0x5e>
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2201      	movs	r2, #1
 8003d1a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003d1e:	2103      	movs	r1, #3
 8003d20:	6878      	ldr	r0, [r7, #4]
 8003d22:	f000 fcf7 	bl	8004714 <ADC_ConversionStop>
 8003d26:	4603      	mov	r3, r0
 8003d28:	73fb      	strb	r3, [r7, #15]
 8003d2a:	7bfb      	ldrb	r3, [r7, #15]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d111      	bne.n	8003d54 <HAL_ADC_Stop+0x54>
 8003d30:	6878      	ldr	r0, [r7, #4]
 8003d32:	f000 fe31 	bl	8004998 <ADC_Disable>
 8003d36:	4603      	mov	r3, r0
 8003d38:	73fb      	strb	r3, [r7, #15]
 8003d3a:	7bfb      	ldrb	r3, [r7, #15]
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d109      	bne.n	8003d54 <HAL_ADC_Stop+0x54>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d44:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003d48:	f023 0301 	bic.w	r3, r3, #1
 8003d4c:	f043 0201 	orr.w	r2, r3, #1
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	2200      	movs	r2, #0
 8003d58:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003d5c:	7bfb      	ldrb	r3, [r7, #15]
 8003d5e:	4618      	mov	r0, r3
 8003d60:	3710      	adds	r7, #16
 8003d62:	46bd      	mov	sp, r7
 8003d64:	bd80      	pop	{r7, pc}
	...

08003d68 <HAL_ADC_PollForConversion>:
 8003d68:	b580      	push	{r7, lr}
 8003d6a:	b088      	sub	sp, #32
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	6078      	str	r0, [r7, #4]
 8003d70:	6039      	str	r1, [r7, #0]
 8003d72:	4867      	ldr	r0, [pc, #412]	@ (8003f10 <HAL_ADC_PollForConversion+0x1a8>)
 8003d74:	f7ff fc6a 	bl	800364c <LL_ADC_GetMultimode>
 8003d78:	6178      	str	r0, [r7, #20]
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	699b      	ldr	r3, [r3, #24]
 8003d7e:	2b08      	cmp	r3, #8
 8003d80:	d102      	bne.n	8003d88 <HAL_ADC_PollForConversion+0x20>
 8003d82:	2308      	movs	r3, #8
 8003d84:	61fb      	str	r3, [r7, #28]
 8003d86:	e02a      	b.n	8003dde <HAL_ADC_PollForConversion+0x76>
 8003d88:	697b      	ldr	r3, [r7, #20]
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	d005      	beq.n	8003d9a <HAL_ADC_PollForConversion+0x32>
 8003d8e:	697b      	ldr	r3, [r7, #20]
 8003d90:	2b05      	cmp	r3, #5
 8003d92:	d002      	beq.n	8003d9a <HAL_ADC_PollForConversion+0x32>
 8003d94:	697b      	ldr	r3, [r7, #20]
 8003d96:	2b09      	cmp	r3, #9
 8003d98:	d111      	bne.n	8003dbe <HAL_ADC_PollForConversion+0x56>
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	68db      	ldr	r3, [r3, #12]
 8003da0:	f003 0301 	and.w	r3, r3, #1
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d007      	beq.n	8003db8 <HAL_ADC_PollForConversion+0x50>
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dac:	f043 0220 	orr.w	r2, r3, #32
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003db4:	2301      	movs	r3, #1
 8003db6:	e0a6      	b.n	8003f06 <HAL_ADC_PollForConversion+0x19e>
 8003db8:	2304      	movs	r3, #4
 8003dba:	61fb      	str	r3, [r7, #28]
 8003dbc:	e00f      	b.n	8003dde <HAL_ADC_PollForConversion+0x76>
 8003dbe:	4854      	ldr	r0, [pc, #336]	@ (8003f10 <HAL_ADC_PollForConversion+0x1a8>)
 8003dc0:	f7ff fc52 	bl	8003668 <LL_ADC_GetMultiDMATransfer>
 8003dc4:	4603      	mov	r3, r0
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	d007      	beq.n	8003dda <HAL_ADC_PollForConversion+0x72>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dce:	f043 0220 	orr.w	r2, r3, #32
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003dd6:	2301      	movs	r3, #1
 8003dd8:	e095      	b.n	8003f06 <HAL_ADC_PollForConversion+0x19e>
 8003dda:	2304      	movs	r3, #4
 8003ddc:	61fb      	str	r3, [r7, #28]
 8003dde:	f7ff faa7 	bl	8003330 <HAL_GetTick>
 8003de2:	6138      	str	r0, [r7, #16]
 8003de4:	e021      	b.n	8003e2a <HAL_ADC_PollForConversion+0xc2>
 8003de6:	683b      	ldr	r3, [r7, #0]
 8003de8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003dec:	d01d      	beq.n	8003e2a <HAL_ADC_PollForConversion+0xc2>
 8003dee:	f7ff fa9f 	bl	8003330 <HAL_GetTick>
 8003df2:	4602      	mov	r2, r0
 8003df4:	693b      	ldr	r3, [r7, #16]
 8003df6:	1ad3      	subs	r3, r2, r3
 8003df8:	683a      	ldr	r2, [r7, #0]
 8003dfa:	429a      	cmp	r2, r3
 8003dfc:	d302      	bcc.n	8003e04 <HAL_ADC_PollForConversion+0x9c>
 8003dfe:	683b      	ldr	r3, [r7, #0]
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	d112      	bne.n	8003e2a <HAL_ADC_PollForConversion+0xc2>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	681a      	ldr	r2, [r3, #0]
 8003e0a:	69fb      	ldr	r3, [r7, #28]
 8003e0c:	4013      	ands	r3, r2
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d10b      	bne.n	8003e2a <HAL_ADC_PollForConversion+0xc2>
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e16:	f043 0204 	orr.w	r2, r3, #4
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	2200      	movs	r2, #0
 8003e22:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003e26:	2303      	movs	r3, #3
 8003e28:	e06d      	b.n	8003f06 <HAL_ADC_PollForConversion+0x19e>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	681a      	ldr	r2, [r3, #0]
 8003e30:	69fb      	ldr	r3, [r7, #28]
 8003e32:	4013      	ands	r3, r2
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d0d6      	beq.n	8003de6 <HAL_ADC_PollForConversion+0x7e>
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e3c:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	4618      	mov	r0, r3
 8003e4a:	f7ff fb71 	bl	8003530 <LL_ADC_REG_IsTriggerSourceSWStart>
 8003e4e:	4603      	mov	r3, r0
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d01c      	beq.n	8003e8e <HAL_ADC_PollForConversion+0x126>
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	7f5b      	ldrb	r3, [r3, #29]
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	d118      	bne.n	8003e8e <HAL_ADC_PollForConversion+0x126>
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f003 0308 	and.w	r3, r3, #8
 8003e66:	2b08      	cmp	r3, #8
 8003e68:	d111      	bne.n	8003e8e <HAL_ADC_PollForConversion+0x126>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e6e:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e7a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d105      	bne.n	8003e8e <HAL_ADC_PollForConversion+0x126>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e86:	f043 0201 	orr.w	r2, r3, #1
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	4a20      	ldr	r2, [pc, #128]	@ (8003f14 <HAL_ADC_PollForConversion+0x1ac>)
 8003e94:	4293      	cmp	r3, r2
 8003e96:	d002      	beq.n	8003e9e <HAL_ADC_PollForConversion+0x136>
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	e001      	b.n	8003ea2 <HAL_ADC_PollForConversion+0x13a>
 8003e9e:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003ea2:	687a      	ldr	r2, [r7, #4]
 8003ea4:	6812      	ldr	r2, [r2, #0]
 8003ea6:	4293      	cmp	r3, r2
 8003ea8:	d008      	beq.n	8003ebc <HAL_ADC_PollForConversion+0x154>
 8003eaa:	697b      	ldr	r3, [r7, #20]
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d005      	beq.n	8003ebc <HAL_ADC_PollForConversion+0x154>
 8003eb0:	697b      	ldr	r3, [r7, #20]
 8003eb2:	2b05      	cmp	r3, #5
 8003eb4:	d002      	beq.n	8003ebc <HAL_ADC_PollForConversion+0x154>
 8003eb6:	697b      	ldr	r3, [r7, #20]
 8003eb8:	2b09      	cmp	r3, #9
 8003eba:	d104      	bne.n	8003ec6 <HAL_ADC_PollForConversion+0x15e>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	68db      	ldr	r3, [r3, #12]
 8003ec2:	61bb      	str	r3, [r7, #24]
 8003ec4:	e00d      	b.n	8003ee2 <HAL_ADC_PollForConversion+0x17a>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	4a12      	ldr	r2, [pc, #72]	@ (8003f14 <HAL_ADC_PollForConversion+0x1ac>)
 8003ecc:	4293      	cmp	r3, r2
 8003ece:	d002      	beq.n	8003ed6 <HAL_ADC_PollForConversion+0x16e>
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	e001      	b.n	8003eda <HAL_ADC_PollForConversion+0x172>
 8003ed6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003eda:	60fb      	str	r3, [r7, #12]
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	68db      	ldr	r3, [r3, #12]
 8003ee0:	61bb      	str	r3, [r7, #24]
 8003ee2:	69fb      	ldr	r3, [r7, #28]
 8003ee4:	2b08      	cmp	r3, #8
 8003ee6:	d104      	bne.n	8003ef2 <HAL_ADC_PollForConversion+0x18a>
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	2208      	movs	r2, #8
 8003eee:	601a      	str	r2, [r3, #0]
 8003ef0:	e008      	b.n	8003f04 <HAL_ADC_PollForConversion+0x19c>
 8003ef2:	69bb      	ldr	r3, [r7, #24]
 8003ef4:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d103      	bne.n	8003f04 <HAL_ADC_PollForConversion+0x19c>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	220c      	movs	r2, #12
 8003f02:	601a      	str	r2, [r3, #0]
 8003f04:	2300      	movs	r3, #0
 8003f06:	4618      	mov	r0, r3
 8003f08:	3720      	adds	r7, #32
 8003f0a:	46bd      	mov	sp, r7
 8003f0c:	bd80      	pop	{r7, pc}
 8003f0e:	bf00      	nop
 8003f10:	50000300 	.word	0x50000300
 8003f14:	50000100 	.word	0x50000100

08003f18 <HAL_ADC_GetValue>:
 8003f18:	b480      	push	{r7}
 8003f1a:	b083      	sub	sp, #12
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	6078      	str	r0, [r7, #4]
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f26:	4618      	mov	r0, r3
 8003f28:	370c      	adds	r7, #12
 8003f2a:	46bd      	mov	sp, r7
 8003f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f30:	4770      	bx	lr
	...

08003f34 <HAL_ADC_ConfigChannel>:
 8003f34:	b580      	push	{r7, lr}
 8003f36:	b0b6      	sub	sp, #216	@ 0xd8
 8003f38:	af00      	add	r7, sp, #0
 8003f3a:	6078      	str	r0, [r7, #4]
 8003f3c:	6039      	str	r1, [r7, #0]
 8003f3e:	2300      	movs	r3, #0
 8003f40:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8003f44:	2300      	movs	r3, #0
 8003f46:	60fb      	str	r3, [r7, #12]
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003f4e:	2b01      	cmp	r3, #1
 8003f50:	d101      	bne.n	8003f56 <HAL_ADC_ConfigChannel+0x22>
 8003f52:	2302      	movs	r3, #2
 8003f54:	e3c8      	b.n	80046e8 <HAL_ADC_ConfigChannel+0x7b4>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	2201      	movs	r2, #1
 8003f5a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	4618      	mov	r0, r3
 8003f64:	f7ff fc52 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 8003f68:	4603      	mov	r3, r0
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	f040 83ad 	bne.w	80046ca <HAL_ADC_ConfigChannel+0x796>
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6818      	ldr	r0, [r3, #0]
 8003f74:	683b      	ldr	r3, [r7, #0]
 8003f76:	6859      	ldr	r1, [r3, #4]
 8003f78:	683b      	ldr	r3, [r7, #0]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	461a      	mov	r2, r3
 8003f7e:	f7ff faea 	bl	8003556 <LL_ADC_REG_SetSequencerRanks>
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4618      	mov	r0, r3
 8003f88:	f7ff fc40 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 8003f8c:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	4618      	mov	r0, r3
 8003f96:	f7ff fc60 	bl	800385a <LL_ADC_INJ_IsConversionOngoing>
 8003f9a:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8003f9e:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	f040 81d9 	bne.w	800435a <HAL_ADC_ConfigChannel+0x426>
 8003fa8:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	f040 81d4 	bne.w	800435a <HAL_ADC_ConfigChannel+0x426>
 8003fb2:	683b      	ldr	r3, [r7, #0]
 8003fb4:	689b      	ldr	r3, [r3, #8]
 8003fb6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8003fba:	d10f      	bne.n	8003fdc <HAL_ADC_ConfigChannel+0xa8>
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	6818      	ldr	r0, [r3, #0]
 8003fc0:	683b      	ldr	r3, [r7, #0]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	2200      	movs	r2, #0
 8003fc6:	4619      	mov	r1, r3
 8003fc8:	f7ff faf1 	bl	80035ae <LL_ADC_SetChannelSamplingTime>
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8003fd4:	4618      	mov	r0, r3
 8003fd6:	f7ff fa98 	bl	800350a <LL_ADC_SetSamplingTimeCommonConfig>
 8003fda:	e00e      	b.n	8003ffa <HAL_ADC_ConfigChannel+0xc6>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	6818      	ldr	r0, [r3, #0]
 8003fe0:	683b      	ldr	r3, [r7, #0]
 8003fe2:	6819      	ldr	r1, [r3, #0]
 8003fe4:	683b      	ldr	r3, [r7, #0]
 8003fe6:	689b      	ldr	r3, [r3, #8]
 8003fe8:	461a      	mov	r2, r3
 8003fea:	f7ff fae0 	bl	80035ae <LL_ADC_SetChannelSamplingTime>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	2100      	movs	r1, #0
 8003ff4:	4618      	mov	r0, r3
 8003ff6:	f7ff fa88 	bl	800350a <LL_ADC_SetSamplingTimeCommonConfig>
 8003ffa:	683b      	ldr	r3, [r7, #0]
 8003ffc:	695a      	ldr	r2, [r3, #20]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	68db      	ldr	r3, [r3, #12]
 8004004:	08db      	lsrs	r3, r3, #3
 8004006:	f003 0303 	and.w	r3, r3, #3
 800400a:	005b      	lsls	r3, r3, #1
 800400c:	fa02 f303 	lsl.w	r3, r2, r3
 8004010:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004014:	683b      	ldr	r3, [r7, #0]
 8004016:	691b      	ldr	r3, [r3, #16]
 8004018:	2b04      	cmp	r3, #4
 800401a:	d022      	beq.n	8004062 <HAL_ADC_ConfigChannel+0x12e>
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	6818      	ldr	r0, [r3, #0]
 8004020:	683b      	ldr	r3, [r7, #0]
 8004022:	6919      	ldr	r1, [r3, #16]
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	681a      	ldr	r2, [r3, #0]
 8004028:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800402c:	f7ff f9e2 	bl	80033f4 <LL_ADC_SetOffset>
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	6818      	ldr	r0, [r3, #0]
 8004034:	683b      	ldr	r3, [r7, #0]
 8004036:	6919      	ldr	r1, [r3, #16]
 8004038:	683b      	ldr	r3, [r7, #0]
 800403a:	699b      	ldr	r3, [r3, #24]
 800403c:	461a      	mov	r2, r3
 800403e:	f7ff fa2e 	bl	800349e <LL_ADC_SetOffsetSign>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	6818      	ldr	r0, [r3, #0]
 8004046:	683b      	ldr	r3, [r7, #0]
 8004048:	6919      	ldr	r1, [r3, #16]
 800404a:	683b      	ldr	r3, [r7, #0]
 800404c:	7f1b      	ldrb	r3, [r3, #28]
 800404e:	2b01      	cmp	r3, #1
 8004050:	d102      	bne.n	8004058 <HAL_ADC_ConfigChannel+0x124>
 8004052:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004056:	e000      	b.n	800405a <HAL_ADC_ConfigChannel+0x126>
 8004058:	2300      	movs	r3, #0
 800405a:	461a      	mov	r2, r3
 800405c:	f7ff fa3a 	bl	80034d4 <LL_ADC_SetOffsetSaturation>
 8004060:	e17b      	b.n	800435a <HAL_ADC_ConfigChannel+0x426>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	2100      	movs	r1, #0
 8004068:	4618      	mov	r0, r3
 800406a:	f7ff f9e7 	bl	800343c <LL_ADC_GetOffsetChannel>
 800406e:	4603      	mov	r3, r0
 8004070:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004074:	2b00      	cmp	r3, #0
 8004076:	d10a      	bne.n	800408e <HAL_ADC_ConfigChannel+0x15a>
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	681b      	ldr	r3, [r3, #0]
 800407c:	2100      	movs	r1, #0
 800407e:	4618      	mov	r0, r3
 8004080:	f7ff f9dc 	bl	800343c <LL_ADC_GetOffsetChannel>
 8004084:	4603      	mov	r3, r0
 8004086:	0e9b      	lsrs	r3, r3, #26
 8004088:	f003 021f 	and.w	r2, r3, #31
 800408c:	e01e      	b.n	80040cc <HAL_ADC_ConfigChannel+0x198>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	2100      	movs	r1, #0
 8004094:	4618      	mov	r0, r3
 8004096:	f7ff f9d1 	bl	800343c <LL_ADC_GetOffsetChannel>
 800409a:	4603      	mov	r3, r0
 800409c:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80040a0:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80040a4:	fa93 f3a3 	rbit	r3, r3
 80040a8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80040ac:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80040b0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80040b4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d101      	bne.n	80040c0 <HAL_ADC_ConfigChannel+0x18c>
 80040bc:	2320      	movs	r3, #32
 80040be:	e004      	b.n	80040ca <HAL_ADC_ConfigChannel+0x196>
 80040c0:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80040c4:	fab3 f383 	clz	r3, r3
 80040c8:	b2db      	uxtb	r3, r3
 80040ca:	461a      	mov	r2, r3
 80040cc:	683b      	ldr	r3, [r7, #0]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d105      	bne.n	80040e4 <HAL_ADC_ConfigChannel+0x1b0>
 80040d8:	683b      	ldr	r3, [r7, #0]
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	0e9b      	lsrs	r3, r3, #26
 80040de:	f003 031f 	and.w	r3, r3, #31
 80040e2:	e018      	b.n	8004116 <HAL_ADC_ConfigChannel+0x1e2>
 80040e4:	683b      	ldr	r3, [r7, #0]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80040ec:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80040f0:	fa93 f3a3 	rbit	r3, r3
 80040f4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80040f8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80040fc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004100:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8004104:	2b00      	cmp	r3, #0
 8004106:	d101      	bne.n	800410c <HAL_ADC_ConfigChannel+0x1d8>
 8004108:	2320      	movs	r3, #32
 800410a:	e004      	b.n	8004116 <HAL_ADC_ConfigChannel+0x1e2>
 800410c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8004110:	fab3 f383 	clz	r3, r3
 8004114:	b2db      	uxtb	r3, r3
 8004116:	429a      	cmp	r2, r3
 8004118:	d106      	bne.n	8004128 <HAL_ADC_ConfigChannel+0x1f4>
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	2200      	movs	r2, #0
 8004120:	2100      	movs	r1, #0
 8004122:	4618      	mov	r0, r3
 8004124:	f7ff f9a0 	bl	8003468 <LL_ADC_SetOffsetState>
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	2101      	movs	r1, #1
 800412e:	4618      	mov	r0, r3
 8004130:	f7ff f984 	bl	800343c <LL_ADC_GetOffsetChannel>
 8004134:	4603      	mov	r3, r0
 8004136:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800413a:	2b00      	cmp	r3, #0
 800413c:	d10a      	bne.n	8004154 <HAL_ADC_ConfigChannel+0x220>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	2101      	movs	r1, #1
 8004144:	4618      	mov	r0, r3
 8004146:	f7ff f979 	bl	800343c <LL_ADC_GetOffsetChannel>
 800414a:	4603      	mov	r3, r0
 800414c:	0e9b      	lsrs	r3, r3, #26
 800414e:	f003 021f 	and.w	r2, r3, #31
 8004152:	e01e      	b.n	8004192 <HAL_ADC_ConfigChannel+0x25e>
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	2101      	movs	r1, #1
 800415a:	4618      	mov	r0, r3
 800415c:	f7ff f96e 	bl	800343c <LL_ADC_GetOffsetChannel>
 8004160:	4603      	mov	r3, r0
 8004162:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004166:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800416a:	fa93 f3a3 	rbit	r3, r3
 800416e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004172:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8004176:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800417a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800417e:	2b00      	cmp	r3, #0
 8004180:	d101      	bne.n	8004186 <HAL_ADC_ConfigChannel+0x252>
 8004182:	2320      	movs	r3, #32
 8004184:	e004      	b.n	8004190 <HAL_ADC_ConfigChannel+0x25c>
 8004186:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800418a:	fab3 f383 	clz	r3, r3
 800418e:	b2db      	uxtb	r3, r3
 8004190:	461a      	mov	r2, r3
 8004192:	683b      	ldr	r3, [r7, #0]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800419a:	2b00      	cmp	r3, #0
 800419c:	d105      	bne.n	80041aa <HAL_ADC_ConfigChannel+0x276>
 800419e:	683b      	ldr	r3, [r7, #0]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	0e9b      	lsrs	r3, r3, #26
 80041a4:	f003 031f 	and.w	r3, r3, #31
 80041a8:	e018      	b.n	80041dc <HAL_ADC_ConfigChannel+0x2a8>
 80041aa:	683b      	ldr	r3, [r7, #0]
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80041b2:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80041b6:	fa93 f3a3 	rbit	r3, r3
 80041ba:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80041be:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 80041c2:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80041c6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80041ca:	2b00      	cmp	r3, #0
 80041cc:	d101      	bne.n	80041d2 <HAL_ADC_ConfigChannel+0x29e>
 80041ce:	2320      	movs	r3, #32
 80041d0:	e004      	b.n	80041dc <HAL_ADC_ConfigChannel+0x2a8>
 80041d2:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80041d6:	fab3 f383 	clz	r3, r3
 80041da:	b2db      	uxtb	r3, r3
 80041dc:	429a      	cmp	r2, r3
 80041de:	d106      	bne.n	80041ee <HAL_ADC_ConfigChannel+0x2ba>
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	2200      	movs	r2, #0
 80041e6:	2101      	movs	r1, #1
 80041e8:	4618      	mov	r0, r3
 80041ea:	f7ff f93d 	bl	8003468 <LL_ADC_SetOffsetState>
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	2102      	movs	r1, #2
 80041f4:	4618      	mov	r0, r3
 80041f6:	f7ff f921 	bl	800343c <LL_ADC_GetOffsetChannel>
 80041fa:	4603      	mov	r3, r0
 80041fc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004200:	2b00      	cmp	r3, #0
 8004202:	d10a      	bne.n	800421a <HAL_ADC_ConfigChannel+0x2e6>
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	2102      	movs	r1, #2
 800420a:	4618      	mov	r0, r3
 800420c:	f7ff f916 	bl	800343c <LL_ADC_GetOffsetChannel>
 8004210:	4603      	mov	r3, r0
 8004212:	0e9b      	lsrs	r3, r3, #26
 8004214:	f003 021f 	and.w	r2, r3, #31
 8004218:	e01e      	b.n	8004258 <HAL_ADC_ConfigChannel+0x324>
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	2102      	movs	r1, #2
 8004220:	4618      	mov	r0, r3
 8004222:	f7ff f90b 	bl	800343c <LL_ADC_GetOffsetChannel>
 8004226:	4603      	mov	r3, r0
 8004228:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800422c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004230:	fa93 f3a3 	rbit	r3, r3
 8004234:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004238:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800423c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004240:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004244:	2b00      	cmp	r3, #0
 8004246:	d101      	bne.n	800424c <HAL_ADC_ConfigChannel+0x318>
 8004248:	2320      	movs	r3, #32
 800424a:	e004      	b.n	8004256 <HAL_ADC_ConfigChannel+0x322>
 800424c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004250:	fab3 f383 	clz	r3, r3
 8004254:	b2db      	uxtb	r3, r3
 8004256:	461a      	mov	r2, r3
 8004258:	683b      	ldr	r3, [r7, #0]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004260:	2b00      	cmp	r3, #0
 8004262:	d105      	bne.n	8004270 <HAL_ADC_ConfigChannel+0x33c>
 8004264:	683b      	ldr	r3, [r7, #0]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	0e9b      	lsrs	r3, r3, #26
 800426a:	f003 031f 	and.w	r3, r3, #31
 800426e:	e016      	b.n	800429e <HAL_ADC_ConfigChannel+0x36a>
 8004270:	683b      	ldr	r3, [r7, #0]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004278:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800427c:	fa93 f3a3 	rbit	r3, r3
 8004280:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004282:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8004284:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004288:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800428c:	2b00      	cmp	r3, #0
 800428e:	d101      	bne.n	8004294 <HAL_ADC_ConfigChannel+0x360>
 8004290:	2320      	movs	r3, #32
 8004292:	e004      	b.n	800429e <HAL_ADC_ConfigChannel+0x36a>
 8004294:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004298:	fab3 f383 	clz	r3, r3
 800429c:	b2db      	uxtb	r3, r3
 800429e:	429a      	cmp	r2, r3
 80042a0:	d106      	bne.n	80042b0 <HAL_ADC_ConfigChannel+0x37c>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	2200      	movs	r2, #0
 80042a8:	2102      	movs	r1, #2
 80042aa:	4618      	mov	r0, r3
 80042ac:	f7ff f8dc 	bl	8003468 <LL_ADC_SetOffsetState>
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	2103      	movs	r1, #3
 80042b6:	4618      	mov	r0, r3
 80042b8:	f7ff f8c0 	bl	800343c <LL_ADC_GetOffsetChannel>
 80042bc:	4603      	mov	r3, r0
 80042be:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d10a      	bne.n	80042dc <HAL_ADC_ConfigChannel+0x3a8>
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	681b      	ldr	r3, [r3, #0]
 80042ca:	2103      	movs	r1, #3
 80042cc:	4618      	mov	r0, r3
 80042ce:	f7ff f8b5 	bl	800343c <LL_ADC_GetOffsetChannel>
 80042d2:	4603      	mov	r3, r0
 80042d4:	0e9b      	lsrs	r3, r3, #26
 80042d6:	f003 021f 	and.w	r2, r3, #31
 80042da:	e017      	b.n	800430c <HAL_ADC_ConfigChannel+0x3d8>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	2103      	movs	r1, #3
 80042e2:	4618      	mov	r0, r3
 80042e4:	f7ff f8aa 	bl	800343c <LL_ADC_GetOffsetChannel>
 80042e8:	4603      	mov	r3, r0
 80042ea:	677b      	str	r3, [r7, #116]	@ 0x74
 80042ec:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80042ee:	fa93 f3a3 	rbit	r3, r3
 80042f2:	673b      	str	r3, [r7, #112]	@ 0x70
 80042f4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80042f6:	67bb      	str	r3, [r7, #120]	@ 0x78
 80042f8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d101      	bne.n	8004302 <HAL_ADC_ConfigChannel+0x3ce>
 80042fe:	2320      	movs	r3, #32
 8004300:	e003      	b.n	800430a <HAL_ADC_ConfigChannel+0x3d6>
 8004302:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004304:	fab3 f383 	clz	r3, r3
 8004308:	b2db      	uxtb	r3, r3
 800430a:	461a      	mov	r2, r3
 800430c:	683b      	ldr	r3, [r7, #0]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004314:	2b00      	cmp	r3, #0
 8004316:	d105      	bne.n	8004324 <HAL_ADC_ConfigChannel+0x3f0>
 8004318:	683b      	ldr	r3, [r7, #0]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	0e9b      	lsrs	r3, r3, #26
 800431e:	f003 031f 	and.w	r3, r3, #31
 8004322:	e011      	b.n	8004348 <HAL_ADC_ConfigChannel+0x414>
 8004324:	683b      	ldr	r3, [r7, #0]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	66bb      	str	r3, [r7, #104]	@ 0x68
 800432a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800432c:	fa93 f3a3 	rbit	r3, r3
 8004330:	667b      	str	r3, [r7, #100]	@ 0x64
 8004332:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004334:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004336:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004338:	2b00      	cmp	r3, #0
 800433a:	d101      	bne.n	8004340 <HAL_ADC_ConfigChannel+0x40c>
 800433c:	2320      	movs	r3, #32
 800433e:	e003      	b.n	8004348 <HAL_ADC_ConfigChannel+0x414>
 8004340:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004342:	fab3 f383 	clz	r3, r3
 8004346:	b2db      	uxtb	r3, r3
 8004348:	429a      	cmp	r2, r3
 800434a:	d106      	bne.n	800435a <HAL_ADC_ConfigChannel+0x426>
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	2200      	movs	r2, #0
 8004352:	2103      	movs	r1, #3
 8004354:	4618      	mov	r0, r3
 8004356:	f7ff f887 	bl	8003468 <LL_ADC_SetOffsetState>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4618      	mov	r0, r3
 8004360:	f7ff fa06 	bl	8003770 <LL_ADC_IsEnabled>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	f040 8140 	bne.w	80045ec <HAL_ADC_ConfigChannel+0x6b8>
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	6818      	ldr	r0, [r3, #0]
 8004370:	683b      	ldr	r3, [r7, #0]
 8004372:	6819      	ldr	r1, [r3, #0]
 8004374:	683b      	ldr	r3, [r7, #0]
 8004376:	68db      	ldr	r3, [r3, #12]
 8004378:	461a      	mov	r2, r3
 800437a:	f7ff f943 	bl	8003604 <LL_ADC_SetChannelSingleDiff>
 800437e:	683b      	ldr	r3, [r7, #0]
 8004380:	68db      	ldr	r3, [r3, #12]
 8004382:	4a8f      	ldr	r2, [pc, #572]	@ (80045c0 <HAL_ADC_ConfigChannel+0x68c>)
 8004384:	4293      	cmp	r3, r2
 8004386:	f040 8131 	bne.w	80045ec <HAL_ADC_ConfigChannel+0x6b8>
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	6818      	ldr	r0, [r3, #0]
 800438e:	683b      	ldr	r3, [r7, #0]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004396:	2b00      	cmp	r3, #0
 8004398:	d10b      	bne.n	80043b2 <HAL_ADC_ConfigChannel+0x47e>
 800439a:	683b      	ldr	r3, [r7, #0]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	0e9b      	lsrs	r3, r3, #26
 80043a0:	3301      	adds	r3, #1
 80043a2:	f003 031f 	and.w	r3, r3, #31
 80043a6:	2b09      	cmp	r3, #9
 80043a8:	bf94      	ite	ls
 80043aa:	2301      	movls	r3, #1
 80043ac:	2300      	movhi	r3, #0
 80043ae:	b2db      	uxtb	r3, r3
 80043b0:	e019      	b.n	80043e6 <HAL_ADC_ConfigChannel+0x4b2>
 80043b2:	683b      	ldr	r3, [r7, #0]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80043b8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80043ba:	fa93 f3a3 	rbit	r3, r3
 80043be:	65bb      	str	r3, [r7, #88]	@ 0x58
 80043c0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80043c2:	663b      	str	r3, [r7, #96]	@ 0x60
 80043c4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d101      	bne.n	80043ce <HAL_ADC_ConfigChannel+0x49a>
 80043ca:	2320      	movs	r3, #32
 80043cc:	e003      	b.n	80043d6 <HAL_ADC_ConfigChannel+0x4a2>
 80043ce:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80043d0:	fab3 f383 	clz	r3, r3
 80043d4:	b2db      	uxtb	r3, r3
 80043d6:	3301      	adds	r3, #1
 80043d8:	f003 031f 	and.w	r3, r3, #31
 80043dc:	2b09      	cmp	r3, #9
 80043de:	bf94      	ite	ls
 80043e0:	2301      	movls	r3, #1
 80043e2:	2300      	movhi	r3, #0
 80043e4:	b2db      	uxtb	r3, r3
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d079      	beq.n	80044de <HAL_ADC_ConfigChannel+0x5aa>
 80043ea:	683b      	ldr	r3, [r7, #0]
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d107      	bne.n	8004406 <HAL_ADC_ConfigChannel+0x4d2>
 80043f6:	683b      	ldr	r3, [r7, #0]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	0e9b      	lsrs	r3, r3, #26
 80043fc:	3301      	adds	r3, #1
 80043fe:	069b      	lsls	r3, r3, #26
 8004400:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004404:	e015      	b.n	8004432 <HAL_ADC_ConfigChannel+0x4fe>
 8004406:	683b      	ldr	r3, [r7, #0]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	653b      	str	r3, [r7, #80]	@ 0x50
 800440c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800440e:	fa93 f3a3 	rbit	r3, r3
 8004412:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004414:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004416:	657b      	str	r3, [r7, #84]	@ 0x54
 8004418:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800441a:	2b00      	cmp	r3, #0
 800441c:	d101      	bne.n	8004422 <HAL_ADC_ConfigChannel+0x4ee>
 800441e:	2320      	movs	r3, #32
 8004420:	e003      	b.n	800442a <HAL_ADC_ConfigChannel+0x4f6>
 8004422:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004424:	fab3 f383 	clz	r3, r3
 8004428:	b2db      	uxtb	r3, r3
 800442a:	3301      	adds	r3, #1
 800442c:	069b      	lsls	r3, r3, #26
 800442e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004432:	683b      	ldr	r3, [r7, #0]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800443a:	2b00      	cmp	r3, #0
 800443c:	d109      	bne.n	8004452 <HAL_ADC_ConfigChannel+0x51e>
 800443e:	683b      	ldr	r3, [r7, #0]
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	0e9b      	lsrs	r3, r3, #26
 8004444:	3301      	adds	r3, #1
 8004446:	f003 031f 	and.w	r3, r3, #31
 800444a:	2101      	movs	r1, #1
 800444c:	fa01 f303 	lsl.w	r3, r1, r3
 8004450:	e017      	b.n	8004482 <HAL_ADC_ConfigChannel+0x54e>
 8004452:	683b      	ldr	r3, [r7, #0]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	647b      	str	r3, [r7, #68]	@ 0x44
 8004458:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800445a:	fa93 f3a3 	rbit	r3, r3
 800445e:	643b      	str	r3, [r7, #64]	@ 0x40
 8004460:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004462:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004464:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004466:	2b00      	cmp	r3, #0
 8004468:	d101      	bne.n	800446e <HAL_ADC_ConfigChannel+0x53a>
 800446a:	2320      	movs	r3, #32
 800446c:	e003      	b.n	8004476 <HAL_ADC_ConfigChannel+0x542>
 800446e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004470:	fab3 f383 	clz	r3, r3
 8004474:	b2db      	uxtb	r3, r3
 8004476:	3301      	adds	r3, #1
 8004478:	f003 031f 	and.w	r3, r3, #31
 800447c:	2101      	movs	r1, #1
 800447e:	fa01 f303 	lsl.w	r3, r1, r3
 8004482:	ea42 0103 	orr.w	r1, r2, r3
 8004486:	683b      	ldr	r3, [r7, #0]
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800448e:	2b00      	cmp	r3, #0
 8004490:	d10a      	bne.n	80044a8 <HAL_ADC_ConfigChannel+0x574>
 8004492:	683b      	ldr	r3, [r7, #0]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	0e9b      	lsrs	r3, r3, #26
 8004498:	3301      	adds	r3, #1
 800449a:	f003 021f 	and.w	r2, r3, #31
 800449e:	4613      	mov	r3, r2
 80044a0:	005b      	lsls	r3, r3, #1
 80044a2:	4413      	add	r3, r2
 80044a4:	051b      	lsls	r3, r3, #20
 80044a6:	e018      	b.n	80044da <HAL_ADC_ConfigChannel+0x5a6>
 80044a8:	683b      	ldr	r3, [r7, #0]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	63bb      	str	r3, [r7, #56]	@ 0x38
 80044ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80044b0:	fa93 f3a3 	rbit	r3, r3
 80044b4:	637b      	str	r3, [r7, #52]	@ 0x34
 80044b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80044b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80044ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80044bc:	2b00      	cmp	r3, #0
 80044be:	d101      	bne.n	80044c4 <HAL_ADC_ConfigChannel+0x590>
 80044c0:	2320      	movs	r3, #32
 80044c2:	e003      	b.n	80044cc <HAL_ADC_ConfigChannel+0x598>
 80044c4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80044c6:	fab3 f383 	clz	r3, r3
 80044ca:	b2db      	uxtb	r3, r3
 80044cc:	3301      	adds	r3, #1
 80044ce:	f003 021f 	and.w	r2, r3, #31
 80044d2:	4613      	mov	r3, r2
 80044d4:	005b      	lsls	r3, r3, #1
 80044d6:	4413      	add	r3, r2
 80044d8:	051b      	lsls	r3, r3, #20
 80044da:	430b      	orrs	r3, r1
 80044dc:	e081      	b.n	80045e2 <HAL_ADC_ConfigChannel+0x6ae>
 80044de:	683b      	ldr	r3, [r7, #0]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d107      	bne.n	80044fa <HAL_ADC_ConfigChannel+0x5c6>
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	0e9b      	lsrs	r3, r3, #26
 80044f0:	3301      	adds	r3, #1
 80044f2:	069b      	lsls	r3, r3, #26
 80044f4:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80044f8:	e015      	b.n	8004526 <HAL_ADC_ConfigChannel+0x5f2>
 80044fa:	683b      	ldr	r3, [r7, #0]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004500:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004502:	fa93 f3a3 	rbit	r3, r3
 8004506:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004508:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800450a:	633b      	str	r3, [r7, #48]	@ 0x30
 800450c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800450e:	2b00      	cmp	r3, #0
 8004510:	d101      	bne.n	8004516 <HAL_ADC_ConfigChannel+0x5e2>
 8004512:	2320      	movs	r3, #32
 8004514:	e003      	b.n	800451e <HAL_ADC_ConfigChannel+0x5ea>
 8004516:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004518:	fab3 f383 	clz	r3, r3
 800451c:	b2db      	uxtb	r3, r3
 800451e:	3301      	adds	r3, #1
 8004520:	069b      	lsls	r3, r3, #26
 8004522:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004526:	683b      	ldr	r3, [r7, #0]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800452e:	2b00      	cmp	r3, #0
 8004530:	d109      	bne.n	8004546 <HAL_ADC_ConfigChannel+0x612>
 8004532:	683b      	ldr	r3, [r7, #0]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	0e9b      	lsrs	r3, r3, #26
 8004538:	3301      	adds	r3, #1
 800453a:	f003 031f 	and.w	r3, r3, #31
 800453e:	2101      	movs	r1, #1
 8004540:	fa01 f303 	lsl.w	r3, r1, r3
 8004544:	e017      	b.n	8004576 <HAL_ADC_ConfigChannel+0x642>
 8004546:	683b      	ldr	r3, [r7, #0]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	623b      	str	r3, [r7, #32]
 800454c:	6a3b      	ldr	r3, [r7, #32]
 800454e:	fa93 f3a3 	rbit	r3, r3
 8004552:	61fb      	str	r3, [r7, #28]
 8004554:	69fb      	ldr	r3, [r7, #28]
 8004556:	627b      	str	r3, [r7, #36]	@ 0x24
 8004558:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800455a:	2b00      	cmp	r3, #0
 800455c:	d101      	bne.n	8004562 <HAL_ADC_ConfigChannel+0x62e>
 800455e:	2320      	movs	r3, #32
 8004560:	e003      	b.n	800456a <HAL_ADC_ConfigChannel+0x636>
 8004562:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004564:	fab3 f383 	clz	r3, r3
 8004568:	b2db      	uxtb	r3, r3
 800456a:	3301      	adds	r3, #1
 800456c:	f003 031f 	and.w	r3, r3, #31
 8004570:	2101      	movs	r1, #1
 8004572:	fa01 f303 	lsl.w	r3, r1, r3
 8004576:	ea42 0103 	orr.w	r1, r2, r3
 800457a:	683b      	ldr	r3, [r7, #0]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004582:	2b00      	cmp	r3, #0
 8004584:	d10d      	bne.n	80045a2 <HAL_ADC_ConfigChannel+0x66e>
 8004586:	683b      	ldr	r3, [r7, #0]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	0e9b      	lsrs	r3, r3, #26
 800458c:	3301      	adds	r3, #1
 800458e:	f003 021f 	and.w	r2, r3, #31
 8004592:	4613      	mov	r3, r2
 8004594:	005b      	lsls	r3, r3, #1
 8004596:	4413      	add	r3, r2
 8004598:	3b1e      	subs	r3, #30
 800459a:	051b      	lsls	r3, r3, #20
 800459c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80045a0:	e01e      	b.n	80045e0 <HAL_ADC_ConfigChannel+0x6ac>
 80045a2:	683b      	ldr	r3, [r7, #0]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	617b      	str	r3, [r7, #20]
 80045a8:	697b      	ldr	r3, [r7, #20]
 80045aa:	fa93 f3a3 	rbit	r3, r3
 80045ae:	613b      	str	r3, [r7, #16]
 80045b0:	693b      	ldr	r3, [r7, #16]
 80045b2:	61bb      	str	r3, [r7, #24]
 80045b4:	69bb      	ldr	r3, [r7, #24]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d104      	bne.n	80045c4 <HAL_ADC_ConfigChannel+0x690>
 80045ba:	2320      	movs	r3, #32
 80045bc:	e006      	b.n	80045cc <HAL_ADC_ConfigChannel+0x698>
 80045be:	bf00      	nop
 80045c0:	407f0000 	.word	0x407f0000
 80045c4:	69bb      	ldr	r3, [r7, #24]
 80045c6:	fab3 f383 	clz	r3, r3
 80045ca:	b2db      	uxtb	r3, r3
 80045cc:	3301      	adds	r3, #1
 80045ce:	f003 021f 	and.w	r2, r3, #31
 80045d2:	4613      	mov	r3, r2
 80045d4:	005b      	lsls	r3, r3, #1
 80045d6:	4413      	add	r3, r2
 80045d8:	3b1e      	subs	r3, #30
 80045da:	051b      	lsls	r3, r3, #20
 80045dc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80045e0:	430b      	orrs	r3, r1
 80045e2:	683a      	ldr	r2, [r7, #0]
 80045e4:	6892      	ldr	r2, [r2, #8]
 80045e6:	4619      	mov	r1, r3
 80045e8:	f7fe ffe1 	bl	80035ae <LL_ADC_SetChannelSamplingTime>
 80045ec:	683b      	ldr	r3, [r7, #0]
 80045ee:	681a      	ldr	r2, [r3, #0]
 80045f0:	4b3f      	ldr	r3, [pc, #252]	@ (80046f0 <HAL_ADC_ConfigChannel+0x7bc>)
 80045f2:	4013      	ands	r3, r2
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d071      	beq.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 80045f8:	483e      	ldr	r0, [pc, #248]	@ (80046f4 <HAL_ADC_ConfigChannel+0x7c0>)
 80045fa:	f7fe feed 	bl	80033d8 <LL_ADC_GetCommonPathInternalCh>
 80045fe:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 8004602:	683b      	ldr	r3, [r7, #0]
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	4a3c      	ldr	r2, [pc, #240]	@ (80046f8 <HAL_ADC_ConfigChannel+0x7c4>)
 8004608:	4293      	cmp	r3, r2
 800460a:	d004      	beq.n	8004616 <HAL_ADC_ConfigChannel+0x6e2>
 800460c:	683b      	ldr	r3, [r7, #0]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	4a3a      	ldr	r2, [pc, #232]	@ (80046fc <HAL_ADC_ConfigChannel+0x7c8>)
 8004612:	4293      	cmp	r3, r2
 8004614:	d127      	bne.n	8004666 <HAL_ADC_ConfigChannel+0x732>
 8004616:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800461a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800461e:	2b00      	cmp	r3, #0
 8004620:	d121      	bne.n	8004666 <HAL_ADC_ConfigChannel+0x732>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800462a:	d157      	bne.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 800462c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004630:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004634:	4619      	mov	r1, r3
 8004636:	482f      	ldr	r0, [pc, #188]	@ (80046f4 <HAL_ADC_ConfigChannel+0x7c0>)
 8004638:	f7fe febb 	bl	80033b2 <LL_ADC_SetCommonPathInternalCh>
 800463c:	4b30      	ldr	r3, [pc, #192]	@ (8004700 <HAL_ADC_ConfigChannel+0x7cc>)
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	099b      	lsrs	r3, r3, #6
 8004642:	4a30      	ldr	r2, [pc, #192]	@ (8004704 <HAL_ADC_ConfigChannel+0x7d0>)
 8004644:	fba2 2303 	umull	r2, r3, r2, r3
 8004648:	099b      	lsrs	r3, r3, #6
 800464a:	1c5a      	adds	r2, r3, #1
 800464c:	4613      	mov	r3, r2
 800464e:	005b      	lsls	r3, r3, #1
 8004650:	4413      	add	r3, r2
 8004652:	009b      	lsls	r3, r3, #2
 8004654:	60fb      	str	r3, [r7, #12]
 8004656:	e002      	b.n	800465e <HAL_ADC_ConfigChannel+0x72a>
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	3b01      	subs	r3, #1
 800465c:	60fb      	str	r3, [r7, #12]
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	2b00      	cmp	r3, #0
 8004662:	d1f9      	bne.n	8004658 <HAL_ADC_ConfigChannel+0x724>
 8004664:	e03a      	b.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 8004666:	683b      	ldr	r3, [r7, #0]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	4a27      	ldr	r2, [pc, #156]	@ (8004708 <HAL_ADC_ConfigChannel+0x7d4>)
 800466c:	4293      	cmp	r3, r2
 800466e:	d113      	bne.n	8004698 <HAL_ADC_ConfigChannel+0x764>
 8004670:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004674:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004678:	2b00      	cmp	r3, #0
 800467a:	d10d      	bne.n	8004698 <HAL_ADC_ConfigChannel+0x764>
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	4a22      	ldr	r2, [pc, #136]	@ (800470c <HAL_ADC_ConfigChannel+0x7d8>)
 8004682:	4293      	cmp	r3, r2
 8004684:	d02a      	beq.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 8004686:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800468a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800468e:	4619      	mov	r1, r3
 8004690:	4818      	ldr	r0, [pc, #96]	@ (80046f4 <HAL_ADC_ConfigChannel+0x7c0>)
 8004692:	f7fe fe8e 	bl	80033b2 <LL_ADC_SetCommonPathInternalCh>
 8004696:	e021      	b.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 8004698:	683b      	ldr	r3, [r7, #0]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	4a1c      	ldr	r2, [pc, #112]	@ (8004710 <HAL_ADC_ConfigChannel+0x7dc>)
 800469e:	4293      	cmp	r3, r2
 80046a0:	d11c      	bne.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 80046a2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80046a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d116      	bne.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	4a16      	ldr	r2, [pc, #88]	@ (800470c <HAL_ADC_ConfigChannel+0x7d8>)
 80046b4:	4293      	cmp	r3, r2
 80046b6:	d011      	beq.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 80046b8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80046bc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80046c0:	4619      	mov	r1, r3
 80046c2:	480c      	ldr	r0, [pc, #48]	@ (80046f4 <HAL_ADC_ConfigChannel+0x7c0>)
 80046c4:	f7fe fe75 	bl	80033b2 <LL_ADC_SetCommonPathInternalCh>
 80046c8:	e008      	b.n	80046dc <HAL_ADC_ConfigChannel+0x7a8>
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80046ce:	f043 0220 	orr.w	r2, r3, #32
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80046d6:	2301      	movs	r3, #1
 80046d8:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	2200      	movs	r2, #0
 80046e0:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80046e4:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 80046e8:	4618      	mov	r0, r3
 80046ea:	37d8      	adds	r7, #216	@ 0xd8
 80046ec:	46bd      	mov	sp, r7
 80046ee:	bd80      	pop	{r7, pc}
 80046f0:	80080000 	.word	0x80080000
 80046f4:	50000300 	.word	0x50000300
 80046f8:	c3210000 	.word	0xc3210000
 80046fc:	90c00010 	.word	0x90c00010
 8004700:	20000050 	.word	0x20000050
 8004704:	053e2d63 	.word	0x053e2d63
 8004708:	c7520000 	.word	0xc7520000
 800470c:	50000100 	.word	0x50000100
 8004710:	cb840000 	.word	0xcb840000

08004714 <ADC_ConversionStop>:
 8004714:	b580      	push	{r7, lr}
 8004716:	b088      	sub	sp, #32
 8004718:	af00      	add	r7, sp, #0
 800471a:	6078      	str	r0, [r7, #4]
 800471c:	6039      	str	r1, [r7, #0]
 800471e:	2300      	movs	r3, #0
 8004720:	61fb      	str	r3, [r7, #28]
 8004722:	683b      	ldr	r3, [r7, #0]
 8004724:	61bb      	str	r3, [r7, #24]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	4618      	mov	r0, r3
 800472c:	f7ff f86e 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 8004730:	6138      	str	r0, [r7, #16]
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	4618      	mov	r0, r3
 8004738:	f7ff f88f 	bl	800385a <LL_ADC_INJ_IsConversionOngoing>
 800473c:	60f8      	str	r0, [r7, #12]
 800473e:	693b      	ldr	r3, [r7, #16]
 8004740:	2b00      	cmp	r3, #0
 8004742:	d103      	bne.n	800474c <ADC_ConversionStop+0x38>
 8004744:	68fb      	ldr	r3, [r7, #12]
 8004746:	2b00      	cmp	r3, #0
 8004748:	f000 8098 	beq.w	800487c <ADC_ConversionStop+0x168>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	68db      	ldr	r3, [r3, #12]
 8004752:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004756:	2b00      	cmp	r3, #0
 8004758:	d02a      	beq.n	80047b0 <ADC_ConversionStop+0x9c>
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	7f5b      	ldrb	r3, [r3, #29]
 800475e:	2b01      	cmp	r3, #1
 8004760:	d126      	bne.n	80047b0 <ADC_ConversionStop+0x9c>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	7f1b      	ldrb	r3, [r3, #28]
 8004766:	2b01      	cmp	r3, #1
 8004768:	d122      	bne.n	80047b0 <ADC_ConversionStop+0x9c>
 800476a:	2301      	movs	r3, #1
 800476c:	61bb      	str	r3, [r7, #24]
 800476e:	e014      	b.n	800479a <ADC_ConversionStop+0x86>
 8004770:	69fb      	ldr	r3, [r7, #28]
 8004772:	4a45      	ldr	r2, [pc, #276]	@ (8004888 <ADC_ConversionStop+0x174>)
 8004774:	4293      	cmp	r3, r2
 8004776:	d90d      	bls.n	8004794 <ADC_ConversionStop+0x80>
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800477c:	f043 0210 	orr.w	r2, r3, #16
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004788:	f043 0201 	orr.w	r2, r3, #1
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004790:	2301      	movs	r3, #1
 8004792:	e074      	b.n	800487e <ADC_ConversionStop+0x16a>
 8004794:	69fb      	ldr	r3, [r7, #28]
 8004796:	3301      	adds	r3, #1
 8004798:	61fb      	str	r3, [r7, #28]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80047a4:	2b40      	cmp	r3, #64	@ 0x40
 80047a6:	d1e3      	bne.n	8004770 <ADC_ConversionStop+0x5c>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	2240      	movs	r2, #64	@ 0x40
 80047ae:	601a      	str	r2, [r3, #0]
 80047b0:	69bb      	ldr	r3, [r7, #24]
 80047b2:	2b02      	cmp	r3, #2
 80047b4:	d014      	beq.n	80047e0 <ADC_ConversionStop+0xcc>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	4618      	mov	r0, r3
 80047bc:	f7ff f826 	bl	800380c <LL_ADC_REG_IsConversionOngoing>
 80047c0:	4603      	mov	r3, r0
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d00c      	beq.n	80047e0 <ADC_ConversionStop+0xcc>
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	4618      	mov	r0, r3
 80047cc:	f7fe ffe3 	bl	8003796 <LL_ADC_IsDisableOngoing>
 80047d0:	4603      	mov	r3, r0
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d104      	bne.n	80047e0 <ADC_ConversionStop+0xcc>
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	4618      	mov	r0, r3
 80047dc:	f7ff f802 	bl	80037e4 <LL_ADC_REG_StopConversion>
 80047e0:	69bb      	ldr	r3, [r7, #24]
 80047e2:	2b01      	cmp	r3, #1
 80047e4:	d014      	beq.n	8004810 <ADC_ConversionStop+0xfc>
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	4618      	mov	r0, r3
 80047ec:	f7ff f835 	bl	800385a <LL_ADC_INJ_IsConversionOngoing>
 80047f0:	4603      	mov	r3, r0
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d00c      	beq.n	8004810 <ADC_ConversionStop+0xfc>
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	4618      	mov	r0, r3
 80047fc:	f7fe ffcb 	bl	8003796 <LL_ADC_IsDisableOngoing>
 8004800:	4603      	mov	r3, r0
 8004802:	2b00      	cmp	r3, #0
 8004804:	d104      	bne.n	8004810 <ADC_ConversionStop+0xfc>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	4618      	mov	r0, r3
 800480c:	f7ff f811 	bl	8003832 <LL_ADC_INJ_StopConversion>
 8004810:	69bb      	ldr	r3, [r7, #24]
 8004812:	2b02      	cmp	r3, #2
 8004814:	d005      	beq.n	8004822 <ADC_ConversionStop+0x10e>
 8004816:	69bb      	ldr	r3, [r7, #24]
 8004818:	2b03      	cmp	r3, #3
 800481a:	d105      	bne.n	8004828 <ADC_ConversionStop+0x114>
 800481c:	230c      	movs	r3, #12
 800481e:	617b      	str	r3, [r7, #20]
 8004820:	e005      	b.n	800482e <ADC_ConversionStop+0x11a>
 8004822:	2308      	movs	r3, #8
 8004824:	617b      	str	r3, [r7, #20]
 8004826:	e002      	b.n	800482e <ADC_ConversionStop+0x11a>
 8004828:	2304      	movs	r3, #4
 800482a:	617b      	str	r3, [r7, #20]
 800482c:	bf00      	nop
 800482e:	f7fe fd7f 	bl	8003330 <HAL_GetTick>
 8004832:	60b8      	str	r0, [r7, #8]
 8004834:	e01b      	b.n	800486e <ADC_ConversionStop+0x15a>
 8004836:	f7fe fd7b 	bl	8003330 <HAL_GetTick>
 800483a:	4602      	mov	r2, r0
 800483c:	68bb      	ldr	r3, [r7, #8]
 800483e:	1ad3      	subs	r3, r2, r3
 8004840:	2b05      	cmp	r3, #5
 8004842:	d914      	bls.n	800486e <ADC_ConversionStop+0x15a>
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	689a      	ldr	r2, [r3, #8]
 800484a:	697b      	ldr	r3, [r7, #20]
 800484c:	4013      	ands	r3, r2
 800484e:	2b00      	cmp	r3, #0
 8004850:	d00d      	beq.n	800486e <ADC_ConversionStop+0x15a>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004856:	f043 0210 	orr.w	r2, r3, #16
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004862:	f043 0201 	orr.w	r2, r3, #1
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	661a      	str	r2, [r3, #96]	@ 0x60
 800486a:	2301      	movs	r3, #1
 800486c:	e007      	b.n	800487e <ADC_ConversionStop+0x16a>
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	689a      	ldr	r2, [r3, #8]
 8004874:	697b      	ldr	r3, [r7, #20]
 8004876:	4013      	ands	r3, r2
 8004878:	2b00      	cmp	r3, #0
 800487a:	d1dc      	bne.n	8004836 <ADC_ConversionStop+0x122>
 800487c:	2300      	movs	r3, #0
 800487e:	4618      	mov	r0, r3
 8004880:	3720      	adds	r7, #32
 8004882:	46bd      	mov	sp, r7
 8004884:	bd80      	pop	{r7, pc}
 8004886:	bf00      	nop
 8004888:	a33fffff 	.word	0xa33fffff

0800488c <ADC_Enable>:
 800488c:	b580      	push	{r7, lr}
 800488e:	b084      	sub	sp, #16
 8004890:	af00      	add	r7, sp, #0
 8004892:	6078      	str	r0, [r7, #4]
 8004894:	2300      	movs	r3, #0
 8004896:	60bb      	str	r3, [r7, #8]
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	4618      	mov	r0, r3
 800489e:	f7fe ff67 	bl	8003770 <LL_ADC_IsEnabled>
 80048a2:	4603      	mov	r3, r0
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	d169      	bne.n	800497c <ADC_Enable+0xf0>
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	689a      	ldr	r2, [r3, #8]
 80048ae:	4b36      	ldr	r3, [pc, #216]	@ (8004988 <ADC_Enable+0xfc>)
 80048b0:	4013      	ands	r3, r2
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d00d      	beq.n	80048d2 <ADC_Enable+0x46>
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80048ba:	f043 0210 	orr.w	r2, r3, #16
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80048c6:	f043 0201 	orr.w	r2, r3, #1
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	661a      	str	r2, [r3, #96]	@ 0x60
 80048ce:	2301      	movs	r3, #1
 80048d0:	e055      	b.n	800497e <ADC_Enable+0xf2>
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	4618      	mov	r0, r3
 80048d8:	f7fe ff22 	bl	8003720 <LL_ADC_Enable>
 80048dc:	482b      	ldr	r0, [pc, #172]	@ (800498c <ADC_Enable+0x100>)
 80048de:	f7fe fd7b 	bl	80033d8 <LL_ADC_GetCommonPathInternalCh>
 80048e2:	4603      	mov	r3, r0
 80048e4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d013      	beq.n	8004914 <ADC_Enable+0x88>
 80048ec:	4b28      	ldr	r3, [pc, #160]	@ (8004990 <ADC_Enable+0x104>)
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	099b      	lsrs	r3, r3, #6
 80048f2:	4a28      	ldr	r2, [pc, #160]	@ (8004994 <ADC_Enable+0x108>)
 80048f4:	fba2 2303 	umull	r2, r3, r2, r3
 80048f8:	099b      	lsrs	r3, r3, #6
 80048fa:	1c5a      	adds	r2, r3, #1
 80048fc:	4613      	mov	r3, r2
 80048fe:	005b      	lsls	r3, r3, #1
 8004900:	4413      	add	r3, r2
 8004902:	009b      	lsls	r3, r3, #2
 8004904:	60bb      	str	r3, [r7, #8]
 8004906:	e002      	b.n	800490e <ADC_Enable+0x82>
 8004908:	68bb      	ldr	r3, [r7, #8]
 800490a:	3b01      	subs	r3, #1
 800490c:	60bb      	str	r3, [r7, #8]
 800490e:	68bb      	ldr	r3, [r7, #8]
 8004910:	2b00      	cmp	r3, #0
 8004912:	d1f9      	bne.n	8004908 <ADC_Enable+0x7c>
 8004914:	f7fe fd0c 	bl	8003330 <HAL_GetTick>
 8004918:	60f8      	str	r0, [r7, #12]
 800491a:	e028      	b.n	800496e <ADC_Enable+0xe2>
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	4618      	mov	r0, r3
 8004922:	f7fe ff25 	bl	8003770 <LL_ADC_IsEnabled>
 8004926:	4603      	mov	r3, r0
 8004928:	2b00      	cmp	r3, #0
 800492a:	d104      	bne.n	8004936 <ADC_Enable+0xaa>
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	681b      	ldr	r3, [r3, #0]
 8004930:	4618      	mov	r0, r3
 8004932:	f7fe fef5 	bl	8003720 <LL_ADC_Enable>
 8004936:	f7fe fcfb 	bl	8003330 <HAL_GetTick>
 800493a:	4602      	mov	r2, r0
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	1ad3      	subs	r3, r2, r3
 8004940:	2b02      	cmp	r3, #2
 8004942:	d914      	bls.n	800496e <ADC_Enable+0xe2>
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f003 0301 	and.w	r3, r3, #1
 800494e:	2b01      	cmp	r3, #1
 8004950:	d00d      	beq.n	800496e <ADC_Enable+0xe2>
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004956:	f043 0210 	orr.w	r2, r3, #16
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004962:	f043 0201 	orr.w	r2, r3, #1
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	661a      	str	r2, [r3, #96]	@ 0x60
 800496a:	2301      	movs	r3, #1
 800496c:	e007      	b.n	800497e <ADC_Enable+0xf2>
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	f003 0301 	and.w	r3, r3, #1
 8004978:	2b01      	cmp	r3, #1
 800497a:	d1cf      	bne.n	800491c <ADC_Enable+0x90>
 800497c:	2300      	movs	r3, #0
 800497e:	4618      	mov	r0, r3
 8004980:	3710      	adds	r7, #16
 8004982:	46bd      	mov	sp, r7
 8004984:	bd80      	pop	{r7, pc}
 8004986:	bf00      	nop
 8004988:	8000003f 	.word	0x8000003f
 800498c:	50000300 	.word	0x50000300
 8004990:	20000050 	.word	0x20000050
 8004994:	053e2d63 	.word	0x053e2d63

08004998 <ADC_Disable>:
 8004998:	b580      	push	{r7, lr}
 800499a:	b084      	sub	sp, #16
 800499c:	af00      	add	r7, sp, #0
 800499e:	6078      	str	r0, [r7, #4]
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	4618      	mov	r0, r3
 80049a6:	f7fe fef6 	bl	8003796 <LL_ADC_IsDisableOngoing>
 80049aa:	60f8      	str	r0, [r7, #12]
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4618      	mov	r0, r3
 80049b2:	f7fe fedd 	bl	8003770 <LL_ADC_IsEnabled>
 80049b6:	4603      	mov	r3, r0
 80049b8:	2b00      	cmp	r3, #0
 80049ba:	d047      	beq.n	8004a4c <ADC_Disable+0xb4>
 80049bc:	68fb      	ldr	r3, [r7, #12]
 80049be:	2b00      	cmp	r3, #0
 80049c0:	d144      	bne.n	8004a4c <ADC_Disable+0xb4>
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	689b      	ldr	r3, [r3, #8]
 80049c8:	f003 030d 	and.w	r3, r3, #13
 80049cc:	2b01      	cmp	r3, #1
 80049ce:	d10c      	bne.n	80049ea <ADC_Disable+0x52>
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	4618      	mov	r0, r3
 80049d6:	f7fe feb7 	bl	8003748 <LL_ADC_Disable>
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	2203      	movs	r2, #3
 80049e0:	601a      	str	r2, [r3, #0]
 80049e2:	f7fe fca5 	bl	8003330 <HAL_GetTick>
 80049e6:	60b8      	str	r0, [r7, #8]
 80049e8:	e029      	b.n	8004a3e <ADC_Disable+0xa6>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80049ee:	f043 0210 	orr.w	r2, r3, #16
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80049fa:	f043 0201 	orr.w	r2, r3, #1
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	661a      	str	r2, [r3, #96]	@ 0x60
 8004a02:	2301      	movs	r3, #1
 8004a04:	e023      	b.n	8004a4e <ADC_Disable+0xb6>
 8004a06:	f7fe fc93 	bl	8003330 <HAL_GetTick>
 8004a0a:	4602      	mov	r2, r0
 8004a0c:	68bb      	ldr	r3, [r7, #8]
 8004a0e:	1ad3      	subs	r3, r2, r3
 8004a10:	2b02      	cmp	r3, #2
 8004a12:	d914      	bls.n	8004a3e <ADC_Disable+0xa6>
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	689b      	ldr	r3, [r3, #8]
 8004a1a:	f003 0301 	and.w	r3, r3, #1
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	d00d      	beq.n	8004a3e <ADC_Disable+0xa6>
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004a26:	f043 0210 	orr.w	r2, r3, #16
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004a32:	f043 0201 	orr.w	r2, r3, #1
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	661a      	str	r2, [r3, #96]	@ 0x60
 8004a3a:	2301      	movs	r3, #1
 8004a3c:	e007      	b.n	8004a4e <ADC_Disable+0xb6>
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	689b      	ldr	r3, [r3, #8]
 8004a44:	f003 0301 	and.w	r3, r3, #1
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d1dc      	bne.n	8004a06 <ADC_Disable+0x6e>
 8004a4c:	2300      	movs	r3, #0
 8004a4e:	4618      	mov	r0, r3
 8004a50:	3710      	adds	r7, #16
 8004a52:	46bd      	mov	sp, r7
 8004a54:	bd80      	pop	{r7, pc}

08004a56 <LL_ADC_IsEnabled>:
 8004a56:	b480      	push	{r7}
 8004a58:	b083      	sub	sp, #12
 8004a5a:	af00      	add	r7, sp, #0
 8004a5c:	6078      	str	r0, [r7, #4]
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	689b      	ldr	r3, [r3, #8]
 8004a62:	f003 0301 	and.w	r3, r3, #1
 8004a66:	2b01      	cmp	r3, #1
 8004a68:	d101      	bne.n	8004a6e <LL_ADC_IsEnabled+0x18>
 8004a6a:	2301      	movs	r3, #1
 8004a6c:	e000      	b.n	8004a70 <LL_ADC_IsEnabled+0x1a>
 8004a6e:	2300      	movs	r3, #0
 8004a70:	4618      	mov	r0, r3
 8004a72:	370c      	adds	r7, #12
 8004a74:	46bd      	mov	sp, r7
 8004a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a7a:	4770      	bx	lr

08004a7c <LL_ADC_StartCalibration>:
 8004a7c:	b480      	push	{r7}
 8004a7e:	b083      	sub	sp, #12
 8004a80:	af00      	add	r7, sp, #0
 8004a82:	6078      	str	r0, [r7, #4]
 8004a84:	6039      	str	r1, [r7, #0]
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	689b      	ldr	r3, [r3, #8]
 8004a8a:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8004a8e:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004a92:	683a      	ldr	r2, [r7, #0]
 8004a94:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8004a98:	4313      	orrs	r3, r2
 8004a9a:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	609a      	str	r2, [r3, #8]
 8004aa2:	bf00      	nop
 8004aa4:	370c      	adds	r7, #12
 8004aa6:	46bd      	mov	sp, r7
 8004aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aac:	4770      	bx	lr

08004aae <LL_ADC_IsCalibrationOnGoing>:
 8004aae:	b480      	push	{r7}
 8004ab0:	b083      	sub	sp, #12
 8004ab2:	af00      	add	r7, sp, #0
 8004ab4:	6078      	str	r0, [r7, #4]
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	689b      	ldr	r3, [r3, #8]
 8004aba:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004abe:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8004ac2:	d101      	bne.n	8004ac8 <LL_ADC_IsCalibrationOnGoing+0x1a>
 8004ac4:	2301      	movs	r3, #1
 8004ac6:	e000      	b.n	8004aca <LL_ADC_IsCalibrationOnGoing+0x1c>
 8004ac8:	2300      	movs	r3, #0
 8004aca:	4618      	mov	r0, r3
 8004acc:	370c      	adds	r7, #12
 8004ace:	46bd      	mov	sp, r7
 8004ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad4:	4770      	bx	lr

08004ad6 <LL_ADC_REG_IsConversionOngoing>:
 8004ad6:	b480      	push	{r7}
 8004ad8:	b083      	sub	sp, #12
 8004ada:	af00      	add	r7, sp, #0
 8004adc:	6078      	str	r0, [r7, #4]
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	689b      	ldr	r3, [r3, #8]
 8004ae2:	f003 0304 	and.w	r3, r3, #4
 8004ae6:	2b04      	cmp	r3, #4
 8004ae8:	d101      	bne.n	8004aee <LL_ADC_REG_IsConversionOngoing+0x18>
 8004aea:	2301      	movs	r3, #1
 8004aec:	e000      	b.n	8004af0 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8004aee:	2300      	movs	r3, #0
 8004af0:	4618      	mov	r0, r3
 8004af2:	370c      	adds	r7, #12
 8004af4:	46bd      	mov	sp, r7
 8004af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004afa:	4770      	bx	lr

08004afc <HAL_ADCEx_Calibration_Start>:
 8004afc:	b580      	push	{r7, lr}
 8004afe:	b084      	sub	sp, #16
 8004b00:	af00      	add	r7, sp, #0
 8004b02:	6078      	str	r0, [r7, #4]
 8004b04:	6039      	str	r1, [r7, #0]
 8004b06:	2300      	movs	r3, #0
 8004b08:	60bb      	str	r3, [r7, #8]
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004b10:	2b01      	cmp	r3, #1
 8004b12:	d101      	bne.n	8004b18 <HAL_ADCEx_Calibration_Start+0x1c>
 8004b14:	2302      	movs	r3, #2
 8004b16:	e04d      	b.n	8004bb4 <HAL_ADCEx_Calibration_Start+0xb8>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	2201      	movs	r2, #1
 8004b1c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004b20:	6878      	ldr	r0, [r7, #4]
 8004b22:	f7ff ff39 	bl	8004998 <ADC_Disable>
 8004b26:	4603      	mov	r3, r0
 8004b28:	73fb      	strb	r3, [r7, #15]
 8004b2a:	7bfb      	ldrb	r3, [r7, #15]
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d136      	bne.n	8004b9e <HAL_ADCEx_Calibration_Start+0xa2>
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b34:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8004b38:	f023 0302 	bic.w	r3, r3, #2
 8004b3c:	f043 0202 	orr.w	r2, r3, #2
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	6839      	ldr	r1, [r7, #0]
 8004b4a:	4618      	mov	r0, r3
 8004b4c:	f7ff ff96 	bl	8004a7c <LL_ADC_StartCalibration>
 8004b50:	e014      	b.n	8004b7c <HAL_ADCEx_Calibration_Start+0x80>
 8004b52:	68bb      	ldr	r3, [r7, #8]
 8004b54:	3301      	adds	r3, #1
 8004b56:	60bb      	str	r3, [r7, #8]
 8004b58:	68bb      	ldr	r3, [r7, #8]
 8004b5a:	4a18      	ldr	r2, [pc, #96]	@ (8004bbc <HAL_ADCEx_Calibration_Start+0xc0>)
 8004b5c:	4293      	cmp	r3, r2
 8004b5e:	d90d      	bls.n	8004b7c <HAL_ADCEx_Calibration_Start+0x80>
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b64:	f023 0312 	bic.w	r3, r3, #18
 8004b68:	f043 0210 	orr.w	r2, r3, #16
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	2200      	movs	r2, #0
 8004b74:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004b78:	2301      	movs	r3, #1
 8004b7a:	e01b      	b.n	8004bb4 <HAL_ADCEx_Calibration_Start+0xb8>
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	4618      	mov	r0, r3
 8004b82:	f7ff ff94 	bl	8004aae <LL_ADC_IsCalibrationOnGoing>
 8004b86:	4603      	mov	r3, r0
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d1e2      	bne.n	8004b52 <HAL_ADCEx_Calibration_Start+0x56>
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b90:	f023 0303 	bic.w	r3, r3, #3
 8004b94:	f043 0201 	orr.w	r2, r3, #1
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004b9c:	e005      	b.n	8004baa <HAL_ADCEx_Calibration_Start+0xae>
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004ba2:	f043 0210 	orr.w	r2, r3, #16
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	2200      	movs	r2, #0
 8004bae:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004bb2:	7bfb      	ldrb	r3, [r7, #15]
 8004bb4:	4618      	mov	r0, r3
 8004bb6:	3710      	adds	r7, #16
 8004bb8:	46bd      	mov	sp, r7
 8004bba:	bd80      	pop	{r7, pc}
 8004bbc:	0004de01 	.word	0x0004de01

08004bc0 <HAL_ADCEx_MultiModeConfigChannel>:
 8004bc0:	b590      	push	{r4, r7, lr}
 8004bc2:	b0a1      	sub	sp, #132	@ 0x84
 8004bc4:	af00      	add	r7, sp, #0
 8004bc6:	6078      	str	r0, [r7, #4]
 8004bc8:	6039      	str	r1, [r7, #0]
 8004bca:	2300      	movs	r3, #0
 8004bcc:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004bd6:	2b01      	cmp	r3, #1
 8004bd8:	d101      	bne.n	8004bde <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8004bda:	2302      	movs	r3, #2
 8004bdc:	e08b      	b.n	8004cf6 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	2201      	movs	r2, #1
 8004be2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004be6:	2300      	movs	r3, #0
 8004be8:	667b      	str	r3, [r7, #100]	@ 0x64
 8004bea:	2300      	movs	r3, #0
 8004bec:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004bf6:	d102      	bne.n	8004bfe <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8004bf8:	4b41      	ldr	r3, [pc, #260]	@ (8004d00 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004bfa:	60bb      	str	r3, [r7, #8]
 8004bfc:	e001      	b.n	8004c02 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8004bfe:	2300      	movs	r3, #0
 8004c00:	60bb      	str	r3, [r7, #8]
 8004c02:	68bb      	ldr	r3, [r7, #8]
 8004c04:	2b00      	cmp	r3, #0
 8004c06:	d10b      	bne.n	8004c20 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c0c:	f043 0220 	orr.w	r2, r3, #32
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	2200      	movs	r2, #0
 8004c18:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004c1c:	2301      	movs	r3, #1
 8004c1e:	e06a      	b.n	8004cf6 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8004c20:	68bb      	ldr	r3, [r7, #8]
 8004c22:	4618      	mov	r0, r3
 8004c24:	f7ff ff57 	bl	8004ad6 <LL_ADC_REG_IsConversionOngoing>
 8004c28:	67b8      	str	r0, [r7, #120]	@ 0x78
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	4618      	mov	r0, r3
 8004c30:	f7ff ff51 	bl	8004ad6 <LL_ADC_REG_IsConversionOngoing>
 8004c34:	4603      	mov	r3, r0
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	d14c      	bne.n	8004cd4 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8004c3a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	d149      	bne.n	8004cd4 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8004c40:	4b30      	ldr	r3, [pc, #192]	@ (8004d04 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8004c42:	677b      	str	r3, [r7, #116]	@ 0x74
 8004c44:	683b      	ldr	r3, [r7, #0]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	d028      	beq.n	8004c9e <HAL_ADCEx_MultiModeConfigChannel+0xde>
 8004c4c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c4e:	689b      	ldr	r3, [r3, #8]
 8004c50:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004c54:	683b      	ldr	r3, [r7, #0]
 8004c56:	6859      	ldr	r1, [r3, #4]
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8004c5e:	035b      	lsls	r3, r3, #13
 8004c60:	430b      	orrs	r3, r1
 8004c62:	431a      	orrs	r2, r3
 8004c64:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c66:	609a      	str	r2, [r3, #8]
 8004c68:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8004c6c:	f7ff fef3 	bl	8004a56 <LL_ADC_IsEnabled>
 8004c70:	4604      	mov	r4, r0
 8004c72:	4823      	ldr	r0, [pc, #140]	@ (8004d00 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004c74:	f7ff feef 	bl	8004a56 <LL_ADC_IsEnabled>
 8004c78:	4603      	mov	r3, r0
 8004c7a:	4323      	orrs	r3, r4
 8004c7c:	2b00      	cmp	r3, #0
 8004c7e:	d133      	bne.n	8004ce8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004c80:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c82:	689b      	ldr	r3, [r3, #8]
 8004c84:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8004c88:	f023 030f 	bic.w	r3, r3, #15
 8004c8c:	683a      	ldr	r2, [r7, #0]
 8004c8e:	6811      	ldr	r1, [r2, #0]
 8004c90:	683a      	ldr	r2, [r7, #0]
 8004c92:	6892      	ldr	r2, [r2, #8]
 8004c94:	430a      	orrs	r2, r1
 8004c96:	431a      	orrs	r2, r3
 8004c98:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c9a:	609a      	str	r2, [r3, #8]
 8004c9c:	e024      	b.n	8004ce8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004c9e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004ca0:	689b      	ldr	r3, [r3, #8]
 8004ca2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004ca6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004ca8:	609a      	str	r2, [r3, #8]
 8004caa:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8004cae:	f7ff fed2 	bl	8004a56 <LL_ADC_IsEnabled>
 8004cb2:	4604      	mov	r4, r0
 8004cb4:	4812      	ldr	r0, [pc, #72]	@ (8004d00 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004cb6:	f7ff fece 	bl	8004a56 <LL_ADC_IsEnabled>
 8004cba:	4603      	mov	r3, r0
 8004cbc:	4323      	orrs	r3, r4
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d112      	bne.n	8004ce8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004cc2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004cc4:	689b      	ldr	r3, [r3, #8]
 8004cc6:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8004cca:	f023 030f 	bic.w	r3, r3, #15
 8004cce:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8004cd0:	6093      	str	r3, [r2, #8]
 8004cd2:	e009      	b.n	8004ce8 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004cd8:	f043 0220 	orr.w	r2, r3, #32
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004ce0:	2301      	movs	r3, #1
 8004ce2:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004ce6:	e000      	b.n	8004cea <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 8004ce8:	bf00      	nop
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	2200      	movs	r2, #0
 8004cee:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004cf2:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8004cf6:	4618      	mov	r0, r3
 8004cf8:	3784      	adds	r7, #132	@ 0x84
 8004cfa:	46bd      	mov	sp, r7
 8004cfc:	bd90      	pop	{r4, r7, pc}
 8004cfe:	bf00      	nop
 8004d00:	50000100 	.word	0x50000100
 8004d04:	50000300 	.word	0x50000300

08004d08 <__NVIC_SetPriorityGrouping>:
 8004d08:	b480      	push	{r7}
 8004d0a:	b085      	sub	sp, #20
 8004d0c:	af00      	add	r7, sp, #0
 8004d0e:	6078      	str	r0, [r7, #4]
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	f003 0307 	and.w	r3, r3, #7
 8004d16:	60fb      	str	r3, [r7, #12]
 8004d18:	4b0c      	ldr	r3, [pc, #48]	@ (8004d4c <__NVIC_SetPriorityGrouping+0x44>)
 8004d1a:	68db      	ldr	r3, [r3, #12]
 8004d1c:	60bb      	str	r3, [r7, #8]
 8004d1e:	68ba      	ldr	r2, [r7, #8]
 8004d20:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004d24:	4013      	ands	r3, r2
 8004d26:	60bb      	str	r3, [r7, #8]
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	021a      	lsls	r2, r3, #8
 8004d2c:	68bb      	ldr	r3, [r7, #8]
 8004d2e:	4313      	orrs	r3, r2
 8004d30:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004d34:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004d38:	60bb      	str	r3, [r7, #8]
 8004d3a:	4a04      	ldr	r2, [pc, #16]	@ (8004d4c <__NVIC_SetPriorityGrouping+0x44>)
 8004d3c:	68bb      	ldr	r3, [r7, #8]
 8004d3e:	60d3      	str	r3, [r2, #12]
 8004d40:	bf00      	nop
 8004d42:	3714      	adds	r7, #20
 8004d44:	46bd      	mov	sp, r7
 8004d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d4a:	4770      	bx	lr
 8004d4c:	e000ed00 	.word	0xe000ed00

08004d50 <__NVIC_GetPriorityGrouping>:
 8004d50:	b480      	push	{r7}
 8004d52:	af00      	add	r7, sp, #0
 8004d54:	4b04      	ldr	r3, [pc, #16]	@ (8004d68 <__NVIC_GetPriorityGrouping+0x18>)
 8004d56:	68db      	ldr	r3, [r3, #12]
 8004d58:	0a1b      	lsrs	r3, r3, #8
 8004d5a:	f003 0307 	and.w	r3, r3, #7
 8004d5e:	4618      	mov	r0, r3
 8004d60:	46bd      	mov	sp, r7
 8004d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d66:	4770      	bx	lr
 8004d68:	e000ed00 	.word	0xe000ed00

08004d6c <__NVIC_EnableIRQ>:
 8004d6c:	b480      	push	{r7}
 8004d6e:	b083      	sub	sp, #12
 8004d70:	af00      	add	r7, sp, #0
 8004d72:	4603      	mov	r3, r0
 8004d74:	71fb      	strb	r3, [r7, #7]
 8004d76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	db0b      	blt.n	8004d96 <__NVIC_EnableIRQ+0x2a>
 8004d7e:	79fb      	ldrb	r3, [r7, #7]
 8004d80:	f003 021f 	and.w	r2, r3, #31
 8004d84:	4907      	ldr	r1, [pc, #28]	@ (8004da4 <__NVIC_EnableIRQ+0x38>)
 8004d86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004d8a:	095b      	lsrs	r3, r3, #5
 8004d8c:	2001      	movs	r0, #1
 8004d8e:	fa00 f202 	lsl.w	r2, r0, r2
 8004d92:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004d96:	bf00      	nop
 8004d98:	370c      	adds	r7, #12
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004da0:	4770      	bx	lr
 8004da2:	bf00      	nop
 8004da4:	e000e100 	.word	0xe000e100

08004da8 <__NVIC_SetPriority>:
 8004da8:	b480      	push	{r7}
 8004daa:	b083      	sub	sp, #12
 8004dac:	af00      	add	r7, sp, #0
 8004dae:	4603      	mov	r3, r0
 8004db0:	6039      	str	r1, [r7, #0]
 8004db2:	71fb      	strb	r3, [r7, #7]
 8004db4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	db0a      	blt.n	8004dd2 <__NVIC_SetPriority+0x2a>
 8004dbc:	683b      	ldr	r3, [r7, #0]
 8004dbe:	b2da      	uxtb	r2, r3
 8004dc0:	490c      	ldr	r1, [pc, #48]	@ (8004df4 <__NVIC_SetPriority+0x4c>)
 8004dc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004dc6:	0112      	lsls	r2, r2, #4
 8004dc8:	b2d2      	uxtb	r2, r2
 8004dca:	440b      	add	r3, r1
 8004dcc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004dd0:	e00a      	b.n	8004de8 <__NVIC_SetPriority+0x40>
 8004dd2:	683b      	ldr	r3, [r7, #0]
 8004dd4:	b2da      	uxtb	r2, r3
 8004dd6:	4908      	ldr	r1, [pc, #32]	@ (8004df8 <__NVIC_SetPriority+0x50>)
 8004dd8:	79fb      	ldrb	r3, [r7, #7]
 8004dda:	f003 030f 	and.w	r3, r3, #15
 8004dde:	3b04      	subs	r3, #4
 8004de0:	0112      	lsls	r2, r2, #4
 8004de2:	b2d2      	uxtb	r2, r2
 8004de4:	440b      	add	r3, r1
 8004de6:	761a      	strb	r2, [r3, #24]
 8004de8:	bf00      	nop
 8004dea:	370c      	adds	r7, #12
 8004dec:	46bd      	mov	sp, r7
 8004dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004df2:	4770      	bx	lr
 8004df4:	e000e100 	.word	0xe000e100
 8004df8:	e000ed00 	.word	0xe000ed00

08004dfc <NVIC_EncodePriority>:
 8004dfc:	b480      	push	{r7}
 8004dfe:	b089      	sub	sp, #36	@ 0x24
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	60f8      	str	r0, [r7, #12]
 8004e04:	60b9      	str	r1, [r7, #8]
 8004e06:	607a      	str	r2, [r7, #4]
 8004e08:	68fb      	ldr	r3, [r7, #12]
 8004e0a:	f003 0307 	and.w	r3, r3, #7
 8004e0e:	61fb      	str	r3, [r7, #28]
 8004e10:	69fb      	ldr	r3, [r7, #28]
 8004e12:	f1c3 0307 	rsb	r3, r3, #7
 8004e16:	2b04      	cmp	r3, #4
 8004e18:	bf28      	it	cs
 8004e1a:	2304      	movcs	r3, #4
 8004e1c:	61bb      	str	r3, [r7, #24]
 8004e1e:	69fb      	ldr	r3, [r7, #28]
 8004e20:	3304      	adds	r3, #4
 8004e22:	2b06      	cmp	r3, #6
 8004e24:	d902      	bls.n	8004e2c <NVIC_EncodePriority+0x30>
 8004e26:	69fb      	ldr	r3, [r7, #28]
 8004e28:	3b03      	subs	r3, #3
 8004e2a:	e000      	b.n	8004e2e <NVIC_EncodePriority+0x32>
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	617b      	str	r3, [r7, #20]
 8004e30:	f04f 32ff 	mov.w	r2, #4294967295
 8004e34:	69bb      	ldr	r3, [r7, #24]
 8004e36:	fa02 f303 	lsl.w	r3, r2, r3
 8004e3a:	43da      	mvns	r2, r3
 8004e3c:	68bb      	ldr	r3, [r7, #8]
 8004e3e:	401a      	ands	r2, r3
 8004e40:	697b      	ldr	r3, [r7, #20]
 8004e42:	409a      	lsls	r2, r3
 8004e44:	f04f 31ff 	mov.w	r1, #4294967295
 8004e48:	697b      	ldr	r3, [r7, #20]
 8004e4a:	fa01 f303 	lsl.w	r3, r1, r3
 8004e4e:	43d9      	mvns	r1, r3
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	400b      	ands	r3, r1
 8004e54:	4313      	orrs	r3, r2
 8004e56:	4618      	mov	r0, r3
 8004e58:	3724      	adds	r7, #36	@ 0x24
 8004e5a:	46bd      	mov	sp, r7
 8004e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e60:	4770      	bx	lr
	...

08004e64 <SysTick_Config>:
 8004e64:	b580      	push	{r7, lr}
 8004e66:	b082      	sub	sp, #8
 8004e68:	af00      	add	r7, sp, #0
 8004e6a:	6078      	str	r0, [r7, #4]
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	3b01      	subs	r3, #1
 8004e70:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004e74:	d301      	bcc.n	8004e7a <SysTick_Config+0x16>
 8004e76:	2301      	movs	r3, #1
 8004e78:	e00f      	b.n	8004e9a <SysTick_Config+0x36>
 8004e7a:	4a0a      	ldr	r2, [pc, #40]	@ (8004ea4 <SysTick_Config+0x40>)
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	3b01      	subs	r3, #1
 8004e80:	6053      	str	r3, [r2, #4]
 8004e82:	210f      	movs	r1, #15
 8004e84:	f04f 30ff 	mov.w	r0, #4294967295
 8004e88:	f7ff ff8e 	bl	8004da8 <__NVIC_SetPriority>
 8004e8c:	4b05      	ldr	r3, [pc, #20]	@ (8004ea4 <SysTick_Config+0x40>)
 8004e8e:	2200      	movs	r2, #0
 8004e90:	609a      	str	r2, [r3, #8]
 8004e92:	4b04      	ldr	r3, [pc, #16]	@ (8004ea4 <SysTick_Config+0x40>)
 8004e94:	2207      	movs	r2, #7
 8004e96:	601a      	str	r2, [r3, #0]
 8004e98:	2300      	movs	r3, #0
 8004e9a:	4618      	mov	r0, r3
 8004e9c:	3708      	adds	r7, #8
 8004e9e:	46bd      	mov	sp, r7
 8004ea0:	bd80      	pop	{r7, pc}
 8004ea2:	bf00      	nop
 8004ea4:	e000e010 	.word	0xe000e010

08004ea8 <HAL_NVIC_SetPriorityGrouping>:
 8004ea8:	b580      	push	{r7, lr}
 8004eaa:	b082      	sub	sp, #8
 8004eac:	af00      	add	r7, sp, #0
 8004eae:	6078      	str	r0, [r7, #4]
 8004eb0:	6878      	ldr	r0, [r7, #4]
 8004eb2:	f7ff ff29 	bl	8004d08 <__NVIC_SetPriorityGrouping>
 8004eb6:	bf00      	nop
 8004eb8:	3708      	adds	r7, #8
 8004eba:	46bd      	mov	sp, r7
 8004ebc:	bd80      	pop	{r7, pc}

08004ebe <HAL_NVIC_SetPriority>:
 8004ebe:	b580      	push	{r7, lr}
 8004ec0:	b086      	sub	sp, #24
 8004ec2:	af00      	add	r7, sp, #0
 8004ec4:	4603      	mov	r3, r0
 8004ec6:	60b9      	str	r1, [r7, #8]
 8004ec8:	607a      	str	r2, [r7, #4]
 8004eca:	73fb      	strb	r3, [r7, #15]
 8004ecc:	f7ff ff40 	bl	8004d50 <__NVIC_GetPriorityGrouping>
 8004ed0:	6178      	str	r0, [r7, #20]
 8004ed2:	687a      	ldr	r2, [r7, #4]
 8004ed4:	68b9      	ldr	r1, [r7, #8]
 8004ed6:	6978      	ldr	r0, [r7, #20]
 8004ed8:	f7ff ff90 	bl	8004dfc <NVIC_EncodePriority>
 8004edc:	4602      	mov	r2, r0
 8004ede:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004ee2:	4611      	mov	r1, r2
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	f7ff ff5f 	bl	8004da8 <__NVIC_SetPriority>
 8004eea:	bf00      	nop
 8004eec:	3718      	adds	r7, #24
 8004eee:	46bd      	mov	sp, r7
 8004ef0:	bd80      	pop	{r7, pc}

08004ef2 <HAL_NVIC_EnableIRQ>:
 8004ef2:	b580      	push	{r7, lr}
 8004ef4:	b082      	sub	sp, #8
 8004ef6:	af00      	add	r7, sp, #0
 8004ef8:	4603      	mov	r3, r0
 8004efa:	71fb      	strb	r3, [r7, #7]
 8004efc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004f00:	4618      	mov	r0, r3
 8004f02:	f7ff ff33 	bl	8004d6c <__NVIC_EnableIRQ>
 8004f06:	bf00      	nop
 8004f08:	3708      	adds	r7, #8
 8004f0a:	46bd      	mov	sp, r7
 8004f0c:	bd80      	pop	{r7, pc}

08004f0e <HAL_SYSTICK_Config>:
 8004f0e:	b580      	push	{r7, lr}
 8004f10:	b082      	sub	sp, #8
 8004f12:	af00      	add	r7, sp, #0
 8004f14:	6078      	str	r0, [r7, #4]
 8004f16:	6878      	ldr	r0, [r7, #4]
 8004f18:	f7ff ffa4 	bl	8004e64 <SysTick_Config>
 8004f1c:	4603      	mov	r3, r0
 8004f1e:	4618      	mov	r0, r3
 8004f20:	3708      	adds	r7, #8
 8004f22:	46bd      	mov	sp, r7
 8004f24:	bd80      	pop	{r7, pc}

08004f26 <HAL_DAC_Init>:
 8004f26:	b580      	push	{r7, lr}
 8004f28:	b082      	sub	sp, #8
 8004f2a:	af00      	add	r7, sp, #0
 8004f2c:	6078      	str	r0, [r7, #4]
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d101      	bne.n	8004f38 <HAL_DAC_Init+0x12>
 8004f34:	2301      	movs	r3, #1
 8004f36:	e014      	b.n	8004f62 <HAL_DAC_Init+0x3c>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	791b      	ldrb	r3, [r3, #4]
 8004f3c:	b2db      	uxtb	r3, r3
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d105      	bne.n	8004f4e <HAL_DAC_Init+0x28>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	2200      	movs	r2, #0
 8004f46:	715a      	strb	r2, [r3, #5]
 8004f48:	6878      	ldr	r0, [r7, #4]
 8004f4a:	f7fd ff15 	bl	8002d78 <HAL_DAC_MspInit>
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	2202      	movs	r2, #2
 8004f52:	711a      	strb	r2, [r3, #4]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	2200      	movs	r2, #0
 8004f58:	611a      	str	r2, [r3, #16]
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	2201      	movs	r2, #1
 8004f5e:	711a      	strb	r2, [r3, #4]
 8004f60:	2300      	movs	r3, #0
 8004f62:	4618      	mov	r0, r3
 8004f64:	3708      	adds	r7, #8
 8004f66:	46bd      	mov	sp, r7
 8004f68:	bd80      	pop	{r7, pc}
	...

08004f6c <HAL_DAC_Start>:
 8004f6c:	b480      	push	{r7}
 8004f6e:	b085      	sub	sp, #20
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	6078      	str	r0, [r7, #4]
 8004f74:	6039      	str	r1, [r7, #0]
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	d101      	bne.n	8004f80 <HAL_DAC_Start+0x14>
 8004f7c:	2301      	movs	r3, #1
 8004f7e:	e056      	b.n	800502e <HAL_DAC_Start+0xc2>
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	795b      	ldrb	r3, [r3, #5]
 8004f84:	2b01      	cmp	r3, #1
 8004f86:	d101      	bne.n	8004f8c <HAL_DAC_Start+0x20>
 8004f88:	2302      	movs	r3, #2
 8004f8a:	e050      	b.n	800502e <HAL_DAC_Start+0xc2>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	2201      	movs	r2, #1
 8004f90:	715a      	strb	r2, [r3, #5]
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	2202      	movs	r2, #2
 8004f96:	711a      	strb	r2, [r3, #4]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	6819      	ldr	r1, [r3, #0]
 8004f9e:	683b      	ldr	r3, [r7, #0]
 8004fa0:	f003 0310 	and.w	r3, r3, #16
 8004fa4:	2201      	movs	r2, #1
 8004fa6:	409a      	lsls	r2, r3
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	430a      	orrs	r2, r1
 8004fae:	601a      	str	r2, [r3, #0]
 8004fb0:	4b22      	ldr	r3, [pc, #136]	@ (800503c <HAL_DAC_Start+0xd0>)
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	099b      	lsrs	r3, r3, #6
 8004fb6:	4a22      	ldr	r2, [pc, #136]	@ (8005040 <HAL_DAC_Start+0xd4>)
 8004fb8:	fba2 2303 	umull	r2, r3, r2, r3
 8004fbc:	099b      	lsrs	r3, r3, #6
 8004fbe:	3301      	adds	r3, #1
 8004fc0:	60fb      	str	r3, [r7, #12]
 8004fc2:	e002      	b.n	8004fca <HAL_DAC_Start+0x5e>
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	3b01      	subs	r3, #1
 8004fc8:	60fb      	str	r3, [r7, #12]
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	d1f9      	bne.n	8004fc4 <HAL_DAC_Start+0x58>
 8004fd0:	683b      	ldr	r3, [r7, #0]
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d10f      	bne.n	8004ff6 <HAL_DAC_Start+0x8a>
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	f003 033e 	and.w	r3, r3, #62	@ 0x3e
 8004fe0:	2b02      	cmp	r3, #2
 8004fe2:	d11d      	bne.n	8005020 <HAL_DAC_Start+0xb4>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	685a      	ldr	r2, [r3, #4]
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	f042 0201 	orr.w	r2, r2, #1
 8004ff2:	605a      	str	r2, [r3, #4]
 8004ff4:	e014      	b.n	8005020 <HAL_DAC_Start+0xb4>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	f403 1278 	and.w	r2, r3, #4063232	@ 0x3e0000
 8005000:	683b      	ldr	r3, [r7, #0]
 8005002:	f003 0310 	and.w	r3, r3, #16
 8005006:	2102      	movs	r1, #2
 8005008:	fa01 f303 	lsl.w	r3, r1, r3
 800500c:	429a      	cmp	r2, r3
 800500e:	d107      	bne.n	8005020 <HAL_DAC_Start+0xb4>
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	685a      	ldr	r2, [r3, #4]
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f042 0202 	orr.w	r2, r2, #2
 800501e:	605a      	str	r2, [r3, #4]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	2201      	movs	r2, #1
 8005024:	711a      	strb	r2, [r3, #4]
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	2200      	movs	r2, #0
 800502a:	715a      	strb	r2, [r3, #5]
 800502c:	2300      	movs	r3, #0
 800502e:	4618      	mov	r0, r3
 8005030:	3714      	adds	r7, #20
 8005032:	46bd      	mov	sp, r7
 8005034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005038:	4770      	bx	lr
 800503a:	bf00      	nop
 800503c:	20000050 	.word	0x20000050
 8005040:	053e2d63 	.word	0x053e2d63

08005044 <HAL_DAC_SetValue>:
 8005044:	b480      	push	{r7}
 8005046:	b087      	sub	sp, #28
 8005048:	af00      	add	r7, sp, #0
 800504a:	60f8      	str	r0, [r7, #12]
 800504c:	60b9      	str	r1, [r7, #8]
 800504e:	607a      	str	r2, [r7, #4]
 8005050:	603b      	str	r3, [r7, #0]
 8005052:	2300      	movs	r3, #0
 8005054:	617b      	str	r3, [r7, #20]
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	2b00      	cmp	r3, #0
 800505a:	d101      	bne.n	8005060 <HAL_DAC_SetValue+0x1c>
 800505c:	2301      	movs	r3, #1
 800505e:	e018      	b.n	8005092 <HAL_DAC_SetValue+0x4e>
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	617b      	str	r3, [r7, #20]
 800506c:	68bb      	ldr	r3, [r7, #8]
 800506e:	2b00      	cmp	r3, #0
 8005070:	d105      	bne.n	800507e <HAL_DAC_SetValue+0x3a>
 8005072:	697a      	ldr	r2, [r7, #20]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	4413      	add	r3, r2
 8005078:	3308      	adds	r3, #8
 800507a:	617b      	str	r3, [r7, #20]
 800507c:	e004      	b.n	8005088 <HAL_DAC_SetValue+0x44>
 800507e:	697a      	ldr	r2, [r7, #20]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	4413      	add	r3, r2
 8005084:	3314      	adds	r3, #20
 8005086:	617b      	str	r3, [r7, #20]
 8005088:	697b      	ldr	r3, [r7, #20]
 800508a:	461a      	mov	r2, r3
 800508c:	683b      	ldr	r3, [r7, #0]
 800508e:	6013      	str	r3, [r2, #0]
 8005090:	2300      	movs	r3, #0
 8005092:	4618      	mov	r0, r3
 8005094:	371c      	adds	r7, #28
 8005096:	46bd      	mov	sp, r7
 8005098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800509c:	4770      	bx	lr
	...

080050a0 <HAL_DAC_ConfigChannel>:
 80050a0:	b580      	push	{r7, lr}
 80050a2:	b08a      	sub	sp, #40	@ 0x28
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	60f8      	str	r0, [r7, #12]
 80050a8:	60b9      	str	r1, [r7, #8]
 80050aa:	607a      	str	r2, [r7, #4]
 80050ac:	2300      	movs	r3, #0
 80050ae:	77fb      	strb	r3, [r7, #31]
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	d002      	beq.n	80050bc <HAL_DAC_ConfigChannel+0x1c>
 80050b6:	68bb      	ldr	r3, [r7, #8]
 80050b8:	2b00      	cmp	r3, #0
 80050ba:	d101      	bne.n	80050c0 <HAL_DAC_ConfigChannel+0x20>
 80050bc:	2301      	movs	r3, #1
 80050be:	e1a1      	b.n	8005404 <HAL_DAC_ConfigChannel+0x364>
 80050c0:	68bb      	ldr	r3, [r7, #8]
 80050c2:	689b      	ldr	r3, [r3, #8]
 80050c4:	2b04      	cmp	r3, #4
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	795b      	ldrb	r3, [r3, #5]
 80050ca:	2b01      	cmp	r3, #1
 80050cc:	d101      	bne.n	80050d2 <HAL_DAC_ConfigChannel+0x32>
 80050ce:	2302      	movs	r3, #2
 80050d0:	e198      	b.n	8005404 <HAL_DAC_ConfigChannel+0x364>
 80050d2:	68fb      	ldr	r3, [r7, #12]
 80050d4:	2201      	movs	r2, #1
 80050d6:	715a      	strb	r2, [r3, #5]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	2202      	movs	r2, #2
 80050dc:	711a      	strb	r2, [r3, #4]
 80050de:	68bb      	ldr	r3, [r7, #8]
 80050e0:	689b      	ldr	r3, [r3, #8]
 80050e2:	2b04      	cmp	r3, #4
 80050e4:	d17a      	bne.n	80051dc <HAL_DAC_ConfigChannel+0x13c>
 80050e6:	f7fe f923 	bl	8003330 <HAL_GetTick>
 80050ea:	61b8      	str	r0, [r7, #24]
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d13d      	bne.n	800516e <HAL_DAC_ConfigChannel+0xce>
 80050f2:	e018      	b.n	8005126 <HAL_DAC_ConfigChannel+0x86>
 80050f4:	f7fe f91c 	bl	8003330 <HAL_GetTick>
 80050f8:	4602      	mov	r2, r0
 80050fa:	69bb      	ldr	r3, [r7, #24]
 80050fc:	1ad3      	subs	r3, r2, r3
 80050fe:	2b01      	cmp	r3, #1
 8005100:	d911      	bls.n	8005126 <HAL_DAC_ConfigChannel+0x86>
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005108:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800510c:	2b00      	cmp	r3, #0
 800510e:	d00a      	beq.n	8005126 <HAL_DAC_ConfigChannel+0x86>
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	691b      	ldr	r3, [r3, #16]
 8005114:	f043 0208 	orr.w	r2, r3, #8
 8005118:	68fb      	ldr	r3, [r7, #12]
 800511a:	611a      	str	r2, [r3, #16]
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	2203      	movs	r2, #3
 8005120:	711a      	strb	r2, [r3, #4]
 8005122:	2303      	movs	r3, #3
 8005124:	e16e      	b.n	8005404 <HAL_DAC_ConfigChannel+0x364>
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800512c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005130:	2b00      	cmp	r3, #0
 8005132:	d1df      	bne.n	80050f4 <HAL_DAC_ConfigChannel+0x54>
 8005134:	68fb      	ldr	r3, [r7, #12]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	68ba      	ldr	r2, [r7, #8]
 800513a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800513c:	641a      	str	r2, [r3, #64]	@ 0x40
 800513e:	e020      	b.n	8005182 <HAL_DAC_ConfigChannel+0xe2>
 8005140:	f7fe f8f6 	bl	8003330 <HAL_GetTick>
 8005144:	4602      	mov	r2, r0
 8005146:	69bb      	ldr	r3, [r7, #24]
 8005148:	1ad3      	subs	r3, r2, r3
 800514a:	2b01      	cmp	r3, #1
 800514c:	d90f      	bls.n	800516e <HAL_DAC_ConfigChannel+0xce>
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005154:	2b00      	cmp	r3, #0
 8005156:	da0a      	bge.n	800516e <HAL_DAC_ConfigChannel+0xce>
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	691b      	ldr	r3, [r3, #16]
 800515c:	f043 0208 	orr.w	r2, r3, #8
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	611a      	str	r2, [r3, #16]
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	2203      	movs	r2, #3
 8005168:	711a      	strb	r2, [r3, #4]
 800516a:	2303      	movs	r3, #3
 800516c:	e14a      	b.n	8005404 <HAL_DAC_ConfigChannel+0x364>
 800516e:	68fb      	ldr	r3, [r7, #12]
 8005170:	681b      	ldr	r3, [r3, #0]
 8005172:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005174:	2b00      	cmp	r3, #0
 8005176:	dbe3      	blt.n	8005140 <HAL_DAC_ConfigChannel+0xa0>
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	68ba      	ldr	r2, [r7, #8]
 800517e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005180:	645a      	str	r2, [r3, #68]	@ 0x44
 8005182:	68fb      	ldr	r3, [r7, #12]
 8005184:	681b      	ldr	r3, [r3, #0]
 8005186:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	f003 0310 	and.w	r3, r3, #16
 800518e:	f240 31ff 	movw	r1, #1023	@ 0x3ff
 8005192:	fa01 f303 	lsl.w	r3, r1, r3
 8005196:	43db      	mvns	r3, r3
 8005198:	ea02 0103 	and.w	r1, r2, r3
 800519c:	68bb      	ldr	r3, [r7, #8]
 800519e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	f003 0310 	and.w	r3, r3, #16
 80051a6:	409a      	lsls	r2, r3
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	430a      	orrs	r2, r1
 80051ae:	649a      	str	r2, [r3, #72]	@ 0x48
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	f003 0310 	and.w	r3, r3, #16
 80051bc:	21ff      	movs	r1, #255	@ 0xff
 80051be:	fa01 f303 	lsl.w	r3, r1, r3
 80051c2:	43db      	mvns	r3, r3
 80051c4:	ea02 0103 	and.w	r1, r2, r3
 80051c8:	68bb      	ldr	r3, [r7, #8]
 80051ca:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	f003 0310 	and.w	r3, r3, #16
 80051d2:	409a      	lsls	r2, r3
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	430a      	orrs	r2, r1
 80051da:	64da      	str	r2, [r3, #76]	@ 0x4c
 80051dc:	68bb      	ldr	r3, [r7, #8]
 80051de:	69db      	ldr	r3, [r3, #28]
 80051e0:	2b01      	cmp	r3, #1
 80051e2:	d11d      	bne.n	8005220 <HAL_DAC_ConfigChannel+0x180>
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	f003 0310 	and.w	r3, r3, #16
 80051f2:	221f      	movs	r2, #31
 80051f4:	fa02 f303 	lsl.w	r3, r2, r3
 80051f8:	43db      	mvns	r3, r3
 80051fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80051fc:	4013      	ands	r3, r2
 80051fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8005200:	68bb      	ldr	r3, [r7, #8]
 8005202:	6a1b      	ldr	r3, [r3, #32]
 8005204:	617b      	str	r3, [r7, #20]
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	f003 0310 	and.w	r3, r3, #16
 800520c:	697a      	ldr	r2, [r7, #20]
 800520e:	fa02 f303 	lsl.w	r3, r2, r3
 8005212:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005214:	4313      	orrs	r3, r2
 8005216:	627b      	str	r3, [r7, #36]	@ 0x24
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800521e:	639a      	str	r2, [r3, #56]	@ 0x38
 8005220:	68fb      	ldr	r3, [r7, #12]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005226:	627b      	str	r3, [r7, #36]	@ 0x24
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	f003 0310 	and.w	r3, r3, #16
 800522e:	2207      	movs	r2, #7
 8005230:	fa02 f303 	lsl.w	r3, r2, r3
 8005234:	43db      	mvns	r3, r3
 8005236:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005238:	4013      	ands	r3, r2
 800523a:	627b      	str	r3, [r7, #36]	@ 0x24
 800523c:	68bb      	ldr	r3, [r7, #8]
 800523e:	699b      	ldr	r3, [r3, #24]
 8005240:	2b01      	cmp	r3, #1
 8005242:	d102      	bne.n	800524a <HAL_DAC_ConfigChannel+0x1aa>
 8005244:	2300      	movs	r3, #0
 8005246:	623b      	str	r3, [r7, #32]
 8005248:	e00f      	b.n	800526a <HAL_DAC_ConfigChannel+0x1ca>
 800524a:	68bb      	ldr	r3, [r7, #8]
 800524c:	699b      	ldr	r3, [r3, #24]
 800524e:	2b02      	cmp	r3, #2
 8005250:	d102      	bne.n	8005258 <HAL_DAC_ConfigChannel+0x1b8>
 8005252:	2301      	movs	r3, #1
 8005254:	623b      	str	r3, [r7, #32]
 8005256:	e008      	b.n	800526a <HAL_DAC_ConfigChannel+0x1ca>
 8005258:	68bb      	ldr	r3, [r7, #8]
 800525a:	695b      	ldr	r3, [r3, #20]
 800525c:	2b00      	cmp	r3, #0
 800525e:	d102      	bne.n	8005266 <HAL_DAC_ConfigChannel+0x1c6>
 8005260:	2301      	movs	r3, #1
 8005262:	623b      	str	r3, [r7, #32]
 8005264:	e001      	b.n	800526a <HAL_DAC_ConfigChannel+0x1ca>
 8005266:	2300      	movs	r3, #0
 8005268:	623b      	str	r3, [r7, #32]
 800526a:	68bb      	ldr	r3, [r7, #8]
 800526c:	689a      	ldr	r2, [r3, #8]
 800526e:	68bb      	ldr	r3, [r7, #8]
 8005270:	695b      	ldr	r3, [r3, #20]
 8005272:	4313      	orrs	r3, r2
 8005274:	6a3a      	ldr	r2, [r7, #32]
 8005276:	4313      	orrs	r3, r2
 8005278:	617b      	str	r3, [r7, #20]
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	f003 0310 	and.w	r3, r3, #16
 8005280:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8005284:	fa02 f303 	lsl.w	r3, r2, r3
 8005288:	43db      	mvns	r3, r3
 800528a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800528c:	4013      	ands	r3, r2
 800528e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005290:	68bb      	ldr	r3, [r7, #8]
 8005292:	791b      	ldrb	r3, [r3, #4]
 8005294:	2b01      	cmp	r3, #1
 8005296:	d102      	bne.n	800529e <HAL_DAC_ConfigChannel+0x1fe>
 8005298:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800529c:	e000      	b.n	80052a0 <HAL_DAC_ConfigChannel+0x200>
 800529e:	2300      	movs	r3, #0
 80052a0:	697a      	ldr	r2, [r7, #20]
 80052a2:	4313      	orrs	r3, r2
 80052a4:	617b      	str	r3, [r7, #20]
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	f003 0310 	and.w	r3, r3, #16
 80052ac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80052b0:	fa02 f303 	lsl.w	r3, r2, r3
 80052b4:	43db      	mvns	r3, r3
 80052b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80052b8:	4013      	ands	r3, r2
 80052ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80052bc:	68bb      	ldr	r3, [r7, #8]
 80052be:	795b      	ldrb	r3, [r3, #5]
 80052c0:	2b01      	cmp	r3, #1
 80052c2:	d102      	bne.n	80052ca <HAL_DAC_ConfigChannel+0x22a>
 80052c4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80052c8:	e000      	b.n	80052cc <HAL_DAC_ConfigChannel+0x22c>
 80052ca:	2300      	movs	r3, #0
 80052cc:	697a      	ldr	r2, [r7, #20]
 80052ce:	4313      	orrs	r3, r2
 80052d0:	617b      	str	r3, [r7, #20]
 80052d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052d4:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80052d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80052da:	68bb      	ldr	r3, [r7, #8]
 80052dc:	681b      	ldr	r3, [r3, #0]
 80052de:	2b02      	cmp	r3, #2
 80052e0:	d114      	bne.n	800530c <HAL_DAC_ConfigChannel+0x26c>
 80052e2:	f001 f971 	bl	80065c8 <HAL_RCC_GetHCLKFreq>
 80052e6:	6138      	str	r0, [r7, #16]
 80052e8:	693b      	ldr	r3, [r7, #16]
 80052ea:	4a48      	ldr	r2, [pc, #288]	@ (800540c <HAL_DAC_ConfigChannel+0x36c>)
 80052ec:	4293      	cmp	r3, r2
 80052ee:	d904      	bls.n	80052fa <HAL_DAC_ConfigChannel+0x25a>
 80052f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052f2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80052f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80052f8:	e00f      	b.n	800531a <HAL_DAC_ConfigChannel+0x27a>
 80052fa:	693b      	ldr	r3, [r7, #16]
 80052fc:	4a44      	ldr	r2, [pc, #272]	@ (8005410 <HAL_DAC_ConfigChannel+0x370>)
 80052fe:	4293      	cmp	r3, r2
 8005300:	d90a      	bls.n	8005318 <HAL_DAC_ConfigChannel+0x278>
 8005302:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005304:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005308:	627b      	str	r3, [r7, #36]	@ 0x24
 800530a:	e006      	b.n	800531a <HAL_DAC_ConfigChannel+0x27a>
 800530c:	68bb      	ldr	r3, [r7, #8]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005312:	4313      	orrs	r3, r2
 8005314:	627b      	str	r3, [r7, #36]	@ 0x24
 8005316:	e000      	b.n	800531a <HAL_DAC_ConfigChannel+0x27a>
 8005318:	bf00      	nop
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	f003 0310 	and.w	r3, r3, #16
 8005320:	697a      	ldr	r2, [r7, #20]
 8005322:	fa02 f303 	lsl.w	r3, r2, r3
 8005326:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005328:	4313      	orrs	r3, r2
 800532a:	627b      	str	r3, [r7, #36]	@ 0x24
 800532c:	68fb      	ldr	r3, [r7, #12]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005332:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	6819      	ldr	r1, [r3, #0]
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	f003 0310 	and.w	r3, r3, #16
 8005340:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8005344:	fa02 f303 	lsl.w	r3, r2, r3
 8005348:	43da      	mvns	r2, r3
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	400a      	ands	r2, r1
 8005350:	601a      	str	r2, [r3, #0]
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	627b      	str	r3, [r7, #36]	@ 0x24
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	f003 0310 	and.w	r3, r3, #16
 8005360:	f640 72fe 	movw	r2, #4094	@ 0xffe
 8005364:	fa02 f303 	lsl.w	r3, r2, r3
 8005368:	43db      	mvns	r3, r3
 800536a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800536c:	4013      	ands	r3, r2
 800536e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005370:	68bb      	ldr	r3, [r7, #8]
 8005372:	68db      	ldr	r3, [r3, #12]
 8005374:	617b      	str	r3, [r7, #20]
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	f003 0310 	and.w	r3, r3, #16
 800537c:	697a      	ldr	r2, [r7, #20]
 800537e:	fa02 f303 	lsl.w	r3, r2, r3
 8005382:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005384:	4313      	orrs	r3, r2
 8005386:	627b      	str	r3, [r7, #36]	@ 0x24
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800538e:	601a      	str	r2, [r3, #0]
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	6819      	ldr	r1, [r3, #0]
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	f003 0310 	and.w	r3, r3, #16
 800539c:	22c0      	movs	r2, #192	@ 0xc0
 800539e:	fa02 f303 	lsl.w	r3, r2, r3
 80053a2:	43da      	mvns	r2, r3
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	400a      	ands	r2, r1
 80053aa:	601a      	str	r2, [r3, #0]
 80053ac:	68bb      	ldr	r3, [r7, #8]
 80053ae:	68db      	ldr	r3, [r3, #12]
 80053b0:	089b      	lsrs	r3, r3, #2
 80053b2:	f003 030f 	and.w	r3, r3, #15
 80053b6:	617b      	str	r3, [r7, #20]
 80053b8:	68bb      	ldr	r3, [r7, #8]
 80053ba:	691b      	ldr	r3, [r3, #16]
 80053bc:	089b      	lsrs	r3, r3, #2
 80053be:	021b      	lsls	r3, r3, #8
 80053c0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80053c4:	697a      	ldr	r2, [r7, #20]
 80053c6:	4313      	orrs	r3, r2
 80053c8:	617b      	str	r3, [r7, #20]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	f003 0310 	and.w	r3, r3, #16
 80053d6:	f640 710f 	movw	r1, #3855	@ 0xf0f
 80053da:	fa01 f303 	lsl.w	r3, r1, r3
 80053de:	43db      	mvns	r3, r3
 80053e0:	ea02 0103 	and.w	r1, r2, r3
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	f003 0310 	and.w	r3, r3, #16
 80053ea:	697a      	ldr	r2, [r7, #20]
 80053ec:	409a      	lsls	r2, r3
 80053ee:	68fb      	ldr	r3, [r7, #12]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	430a      	orrs	r2, r1
 80053f4:	661a      	str	r2, [r3, #96]	@ 0x60
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	2201      	movs	r2, #1
 80053fa:	711a      	strb	r2, [r3, #4]
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	2200      	movs	r2, #0
 8005400:	715a      	strb	r2, [r3, #5]
 8005402:	7ffb      	ldrb	r3, [r7, #31]
 8005404:	4618      	mov	r0, r3
 8005406:	3728      	adds	r7, #40	@ 0x28
 8005408:	46bd      	mov	sp, r7
 800540a:	bd80      	pop	{r7, pc}
 800540c:	09896800 	.word	0x09896800
 8005410:	04c4b400 	.word	0x04c4b400

08005414 <HAL_DMA_Abort>:
 8005414:	b480      	push	{r7}
 8005416:	b085      	sub	sp, #20
 8005418:	af00      	add	r7, sp, #0
 800541a:	6078      	str	r0, [r7, #4]
 800541c:	2300      	movs	r3, #0
 800541e:	73fb      	strb	r3, [r7, #15]
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8005426:	b2db      	uxtb	r3, r3
 8005428:	2b02      	cmp	r3, #2
 800542a:	d005      	beq.n	8005438 <HAL_DMA_Abort+0x24>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	2204      	movs	r2, #4
 8005430:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005432:	2301      	movs	r3, #1
 8005434:	73fb      	strb	r3, [r7, #15]
 8005436:	e037      	b.n	80054a8 <HAL_DMA_Abort+0x94>
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	681b      	ldr	r3, [r3, #0]
 800543c:	681a      	ldr	r2, [r3, #0]
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	f022 020e 	bic.w	r2, r2, #14
 8005446:	601a      	str	r2, [r3, #0]
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800544c:	681a      	ldr	r2, [r3, #0]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005452:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005456:	601a      	str	r2, [r3, #0]
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	681a      	ldr	r2, [r3, #0]
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	f022 0201 	bic.w	r2, r2, #1
 8005466:	601a      	str	r2, [r3, #0]
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800546c:	f003 021f 	and.w	r2, r3, #31
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005474:	2101      	movs	r1, #1
 8005476:	fa01 f202 	lsl.w	r2, r1, r2
 800547a:	605a      	str	r2, [r3, #4]
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005480:	687a      	ldr	r2, [r7, #4]
 8005482:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005484:	605a      	str	r2, [r3, #4]
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800548a:	2b00      	cmp	r3, #0
 800548c:	d00c      	beq.n	80054a8 <HAL_DMA_Abort+0x94>
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005492:	681a      	ldr	r2, [r3, #0]
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005498:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800549c:	601a      	str	r2, [r3, #0]
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80054a2:	687a      	ldr	r2, [r7, #4]
 80054a4:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 80054a6:	605a      	str	r2, [r3, #4]
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	2201      	movs	r2, #1
 80054ac:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	2200      	movs	r2, #0
 80054b4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80054b8:	7bfb      	ldrb	r3, [r7, #15]
 80054ba:	4618      	mov	r0, r3
 80054bc:	3714      	adds	r7, #20
 80054be:	46bd      	mov	sp, r7
 80054c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c4:	4770      	bx	lr

080054c6 <HAL_DMA_Abort_IT>:
 80054c6:	b580      	push	{r7, lr}
 80054c8:	b084      	sub	sp, #16
 80054ca:	af00      	add	r7, sp, #0
 80054cc:	6078      	str	r0, [r7, #4]
 80054ce:	2300      	movs	r3, #0
 80054d0:	73fb      	strb	r3, [r7, #15]
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80054d8:	b2db      	uxtb	r3, r3
 80054da:	2b02      	cmp	r3, #2
 80054dc:	d00d      	beq.n	80054fa <HAL_DMA_Abort_IT+0x34>
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	2204      	movs	r2, #4
 80054e2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	2201      	movs	r2, #1
 80054e8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	2200      	movs	r2, #0
 80054f0:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80054f4:	2301      	movs	r3, #1
 80054f6:	73fb      	strb	r3, [r7, #15]
 80054f8:	e047      	b.n	800558a <HAL_DMA_Abort_IT+0xc4>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	681a      	ldr	r2, [r3, #0]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	f022 020e 	bic.w	r2, r2, #14
 8005508:	601a      	str	r2, [r3, #0]
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	681a      	ldr	r2, [r3, #0]
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	f022 0201 	bic.w	r2, r2, #1
 8005518:	601a      	str	r2, [r3, #0]
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800551e:	681a      	ldr	r2, [r3, #0]
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005524:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005528:	601a      	str	r2, [r3, #0]
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800552e:	f003 021f 	and.w	r2, r3, #31
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005536:	2101      	movs	r1, #1
 8005538:	fa01 f202 	lsl.w	r2, r1, r2
 800553c:	605a      	str	r2, [r3, #4]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005542:	687a      	ldr	r2, [r7, #4]
 8005544:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005546:	605a      	str	r2, [r3, #4]
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800554c:	2b00      	cmp	r3, #0
 800554e:	d00c      	beq.n	800556a <HAL_DMA_Abort_IT+0xa4>
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005554:	681a      	ldr	r2, [r3, #0]
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800555a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800555e:	601a      	str	r2, [r3, #0]
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005564:	687a      	ldr	r2, [r7, #4]
 8005566:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005568:	605a      	str	r2, [r3, #4]
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	2201      	movs	r2, #1
 800556e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	2200      	movs	r2, #0
 8005576:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800557e:	2b00      	cmp	r3, #0
 8005580:	d003      	beq.n	800558a <HAL_DMA_Abort_IT+0xc4>
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005586:	6878      	ldr	r0, [r7, #4]
 8005588:	4798      	blx	r3
 800558a:	7bfb      	ldrb	r3, [r7, #15]
 800558c:	4618      	mov	r0, r3
 800558e:	3710      	adds	r7, #16
 8005590:	46bd      	mov	sp, r7
 8005592:	bd80      	pop	{r7, pc}

08005594 <HAL_GPIO_Init>:
 8005594:	b480      	push	{r7}
 8005596:	b087      	sub	sp, #28
 8005598:	af00      	add	r7, sp, #0
 800559a:	6078      	str	r0, [r7, #4]
 800559c:	6039      	str	r1, [r7, #0]
 800559e:	2300      	movs	r3, #0
 80055a0:	617b      	str	r3, [r7, #20]
 80055a2:	e15a      	b.n	800585a <HAL_GPIO_Init+0x2c6>
 80055a4:	683b      	ldr	r3, [r7, #0]
 80055a6:	681a      	ldr	r2, [r3, #0]
 80055a8:	2101      	movs	r1, #1
 80055aa:	697b      	ldr	r3, [r7, #20]
 80055ac:	fa01 f303 	lsl.w	r3, r1, r3
 80055b0:	4013      	ands	r3, r2
 80055b2:	60fb      	str	r3, [r7, #12]
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	f000 814c 	beq.w	8005854 <HAL_GPIO_Init+0x2c0>
 80055bc:	683b      	ldr	r3, [r7, #0]
 80055be:	685b      	ldr	r3, [r3, #4]
 80055c0:	f003 0303 	and.w	r3, r3, #3
 80055c4:	2b01      	cmp	r3, #1
 80055c6:	d005      	beq.n	80055d4 <HAL_GPIO_Init+0x40>
 80055c8:	683b      	ldr	r3, [r7, #0]
 80055ca:	685b      	ldr	r3, [r3, #4]
 80055cc:	f003 0303 	and.w	r3, r3, #3
 80055d0:	2b02      	cmp	r3, #2
 80055d2:	d130      	bne.n	8005636 <HAL_GPIO_Init+0xa2>
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	689b      	ldr	r3, [r3, #8]
 80055d8:	613b      	str	r3, [r7, #16]
 80055da:	697b      	ldr	r3, [r7, #20]
 80055dc:	005b      	lsls	r3, r3, #1
 80055de:	2203      	movs	r2, #3
 80055e0:	fa02 f303 	lsl.w	r3, r2, r3
 80055e4:	43db      	mvns	r3, r3
 80055e6:	693a      	ldr	r2, [r7, #16]
 80055e8:	4013      	ands	r3, r2
 80055ea:	613b      	str	r3, [r7, #16]
 80055ec:	683b      	ldr	r3, [r7, #0]
 80055ee:	68da      	ldr	r2, [r3, #12]
 80055f0:	697b      	ldr	r3, [r7, #20]
 80055f2:	005b      	lsls	r3, r3, #1
 80055f4:	fa02 f303 	lsl.w	r3, r2, r3
 80055f8:	693a      	ldr	r2, [r7, #16]
 80055fa:	4313      	orrs	r3, r2
 80055fc:	613b      	str	r3, [r7, #16]
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	693a      	ldr	r2, [r7, #16]
 8005602:	609a      	str	r2, [r3, #8]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	685b      	ldr	r3, [r3, #4]
 8005608:	613b      	str	r3, [r7, #16]
 800560a:	2201      	movs	r2, #1
 800560c:	697b      	ldr	r3, [r7, #20]
 800560e:	fa02 f303 	lsl.w	r3, r2, r3
 8005612:	43db      	mvns	r3, r3
 8005614:	693a      	ldr	r2, [r7, #16]
 8005616:	4013      	ands	r3, r2
 8005618:	613b      	str	r3, [r7, #16]
 800561a:	683b      	ldr	r3, [r7, #0]
 800561c:	685b      	ldr	r3, [r3, #4]
 800561e:	091b      	lsrs	r3, r3, #4
 8005620:	f003 0201 	and.w	r2, r3, #1
 8005624:	697b      	ldr	r3, [r7, #20]
 8005626:	fa02 f303 	lsl.w	r3, r2, r3
 800562a:	693a      	ldr	r2, [r7, #16]
 800562c:	4313      	orrs	r3, r2
 800562e:	613b      	str	r3, [r7, #16]
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	693a      	ldr	r2, [r7, #16]
 8005634:	605a      	str	r2, [r3, #4]
 8005636:	683b      	ldr	r3, [r7, #0]
 8005638:	685b      	ldr	r3, [r3, #4]
 800563a:	f003 0303 	and.w	r3, r3, #3
 800563e:	2b03      	cmp	r3, #3
 8005640:	d017      	beq.n	8005672 <HAL_GPIO_Init+0xde>
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	68db      	ldr	r3, [r3, #12]
 8005646:	613b      	str	r3, [r7, #16]
 8005648:	697b      	ldr	r3, [r7, #20]
 800564a:	005b      	lsls	r3, r3, #1
 800564c:	2203      	movs	r2, #3
 800564e:	fa02 f303 	lsl.w	r3, r2, r3
 8005652:	43db      	mvns	r3, r3
 8005654:	693a      	ldr	r2, [r7, #16]
 8005656:	4013      	ands	r3, r2
 8005658:	613b      	str	r3, [r7, #16]
 800565a:	683b      	ldr	r3, [r7, #0]
 800565c:	689a      	ldr	r2, [r3, #8]
 800565e:	697b      	ldr	r3, [r7, #20]
 8005660:	005b      	lsls	r3, r3, #1
 8005662:	fa02 f303 	lsl.w	r3, r2, r3
 8005666:	693a      	ldr	r2, [r7, #16]
 8005668:	4313      	orrs	r3, r2
 800566a:	613b      	str	r3, [r7, #16]
 800566c:	687b      	ldr	r3, [r7, #4]
 800566e:	693a      	ldr	r2, [r7, #16]
 8005670:	60da      	str	r2, [r3, #12]
 8005672:	683b      	ldr	r3, [r7, #0]
 8005674:	685b      	ldr	r3, [r3, #4]
 8005676:	f003 0303 	and.w	r3, r3, #3
 800567a:	2b02      	cmp	r3, #2
 800567c:	d123      	bne.n	80056c6 <HAL_GPIO_Init+0x132>
 800567e:	697b      	ldr	r3, [r7, #20]
 8005680:	08da      	lsrs	r2, r3, #3
 8005682:	687b      	ldr	r3, [r7, #4]
 8005684:	3208      	adds	r2, #8
 8005686:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800568a:	613b      	str	r3, [r7, #16]
 800568c:	697b      	ldr	r3, [r7, #20]
 800568e:	f003 0307 	and.w	r3, r3, #7
 8005692:	009b      	lsls	r3, r3, #2
 8005694:	220f      	movs	r2, #15
 8005696:	fa02 f303 	lsl.w	r3, r2, r3
 800569a:	43db      	mvns	r3, r3
 800569c:	693a      	ldr	r2, [r7, #16]
 800569e:	4013      	ands	r3, r2
 80056a0:	613b      	str	r3, [r7, #16]
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	691a      	ldr	r2, [r3, #16]
 80056a6:	697b      	ldr	r3, [r7, #20]
 80056a8:	f003 0307 	and.w	r3, r3, #7
 80056ac:	009b      	lsls	r3, r3, #2
 80056ae:	fa02 f303 	lsl.w	r3, r2, r3
 80056b2:	693a      	ldr	r2, [r7, #16]
 80056b4:	4313      	orrs	r3, r2
 80056b6:	613b      	str	r3, [r7, #16]
 80056b8:	697b      	ldr	r3, [r7, #20]
 80056ba:	08da      	lsrs	r2, r3, #3
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	3208      	adds	r2, #8
 80056c0:	6939      	ldr	r1, [r7, #16]
 80056c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	613b      	str	r3, [r7, #16]
 80056cc:	697b      	ldr	r3, [r7, #20]
 80056ce:	005b      	lsls	r3, r3, #1
 80056d0:	2203      	movs	r2, #3
 80056d2:	fa02 f303 	lsl.w	r3, r2, r3
 80056d6:	43db      	mvns	r3, r3
 80056d8:	693a      	ldr	r2, [r7, #16]
 80056da:	4013      	ands	r3, r2
 80056dc:	613b      	str	r3, [r7, #16]
 80056de:	683b      	ldr	r3, [r7, #0]
 80056e0:	685b      	ldr	r3, [r3, #4]
 80056e2:	f003 0203 	and.w	r2, r3, #3
 80056e6:	697b      	ldr	r3, [r7, #20]
 80056e8:	005b      	lsls	r3, r3, #1
 80056ea:	fa02 f303 	lsl.w	r3, r2, r3
 80056ee:	693a      	ldr	r2, [r7, #16]
 80056f0:	4313      	orrs	r3, r2
 80056f2:	613b      	str	r3, [r7, #16]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	693a      	ldr	r2, [r7, #16]
 80056f8:	601a      	str	r2, [r3, #0]
 80056fa:	683b      	ldr	r3, [r7, #0]
 80056fc:	685b      	ldr	r3, [r3, #4]
 80056fe:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8005702:	2b00      	cmp	r3, #0
 8005704:	f000 80a6 	beq.w	8005854 <HAL_GPIO_Init+0x2c0>
 8005708:	4b5b      	ldr	r3, [pc, #364]	@ (8005878 <HAL_GPIO_Init+0x2e4>)
 800570a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800570c:	4a5a      	ldr	r2, [pc, #360]	@ (8005878 <HAL_GPIO_Init+0x2e4>)
 800570e:	f043 0301 	orr.w	r3, r3, #1
 8005712:	6613      	str	r3, [r2, #96]	@ 0x60
 8005714:	4b58      	ldr	r3, [pc, #352]	@ (8005878 <HAL_GPIO_Init+0x2e4>)
 8005716:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005718:	f003 0301 	and.w	r3, r3, #1
 800571c:	60bb      	str	r3, [r7, #8]
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	4a56      	ldr	r2, [pc, #344]	@ (800587c <HAL_GPIO_Init+0x2e8>)
 8005722:	697b      	ldr	r3, [r7, #20]
 8005724:	089b      	lsrs	r3, r3, #2
 8005726:	3302      	adds	r3, #2
 8005728:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800572c:	613b      	str	r3, [r7, #16]
 800572e:	697b      	ldr	r3, [r7, #20]
 8005730:	f003 0303 	and.w	r3, r3, #3
 8005734:	009b      	lsls	r3, r3, #2
 8005736:	220f      	movs	r2, #15
 8005738:	fa02 f303 	lsl.w	r3, r2, r3
 800573c:	43db      	mvns	r3, r3
 800573e:	693a      	ldr	r2, [r7, #16]
 8005740:	4013      	ands	r3, r2
 8005742:	613b      	str	r3, [r7, #16]
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800574a:	d01f      	beq.n	800578c <HAL_GPIO_Init+0x1f8>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	4a4c      	ldr	r2, [pc, #304]	@ (8005880 <HAL_GPIO_Init+0x2ec>)
 8005750:	4293      	cmp	r3, r2
 8005752:	d019      	beq.n	8005788 <HAL_GPIO_Init+0x1f4>
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	4a4b      	ldr	r2, [pc, #300]	@ (8005884 <HAL_GPIO_Init+0x2f0>)
 8005758:	4293      	cmp	r3, r2
 800575a:	d013      	beq.n	8005784 <HAL_GPIO_Init+0x1f0>
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	4a4a      	ldr	r2, [pc, #296]	@ (8005888 <HAL_GPIO_Init+0x2f4>)
 8005760:	4293      	cmp	r3, r2
 8005762:	d00d      	beq.n	8005780 <HAL_GPIO_Init+0x1ec>
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	4a49      	ldr	r2, [pc, #292]	@ (800588c <HAL_GPIO_Init+0x2f8>)
 8005768:	4293      	cmp	r3, r2
 800576a:	d007      	beq.n	800577c <HAL_GPIO_Init+0x1e8>
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	4a48      	ldr	r2, [pc, #288]	@ (8005890 <HAL_GPIO_Init+0x2fc>)
 8005770:	4293      	cmp	r3, r2
 8005772:	d101      	bne.n	8005778 <HAL_GPIO_Init+0x1e4>
 8005774:	2305      	movs	r3, #5
 8005776:	e00a      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 8005778:	2306      	movs	r3, #6
 800577a:	e008      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 800577c:	2304      	movs	r3, #4
 800577e:	e006      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 8005780:	2303      	movs	r3, #3
 8005782:	e004      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 8005784:	2302      	movs	r3, #2
 8005786:	e002      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 8005788:	2301      	movs	r3, #1
 800578a:	e000      	b.n	800578e <HAL_GPIO_Init+0x1fa>
 800578c:	2300      	movs	r3, #0
 800578e:	697a      	ldr	r2, [r7, #20]
 8005790:	f002 0203 	and.w	r2, r2, #3
 8005794:	0092      	lsls	r2, r2, #2
 8005796:	4093      	lsls	r3, r2
 8005798:	693a      	ldr	r2, [r7, #16]
 800579a:	4313      	orrs	r3, r2
 800579c:	613b      	str	r3, [r7, #16]
 800579e:	4937      	ldr	r1, [pc, #220]	@ (800587c <HAL_GPIO_Init+0x2e8>)
 80057a0:	697b      	ldr	r3, [r7, #20]
 80057a2:	089b      	lsrs	r3, r3, #2
 80057a4:	3302      	adds	r3, #2
 80057a6:	693a      	ldr	r2, [r7, #16]
 80057a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80057ac:	4b39      	ldr	r3, [pc, #228]	@ (8005894 <HAL_GPIO_Init+0x300>)
 80057ae:	689b      	ldr	r3, [r3, #8]
 80057b0:	613b      	str	r3, [r7, #16]
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	43db      	mvns	r3, r3
 80057b6:	693a      	ldr	r2, [r7, #16]
 80057b8:	4013      	ands	r3, r2
 80057ba:	613b      	str	r3, [r7, #16]
 80057bc:	683b      	ldr	r3, [r7, #0]
 80057be:	685b      	ldr	r3, [r3, #4]
 80057c0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80057c4:	2b00      	cmp	r3, #0
 80057c6:	d003      	beq.n	80057d0 <HAL_GPIO_Init+0x23c>
 80057c8:	693a      	ldr	r2, [r7, #16]
 80057ca:	68fb      	ldr	r3, [r7, #12]
 80057cc:	4313      	orrs	r3, r2
 80057ce:	613b      	str	r3, [r7, #16]
 80057d0:	4a30      	ldr	r2, [pc, #192]	@ (8005894 <HAL_GPIO_Init+0x300>)
 80057d2:	693b      	ldr	r3, [r7, #16]
 80057d4:	6093      	str	r3, [r2, #8]
 80057d6:	4b2f      	ldr	r3, [pc, #188]	@ (8005894 <HAL_GPIO_Init+0x300>)
 80057d8:	68db      	ldr	r3, [r3, #12]
 80057da:	613b      	str	r3, [r7, #16]
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	43db      	mvns	r3, r3
 80057e0:	693a      	ldr	r2, [r7, #16]
 80057e2:	4013      	ands	r3, r2
 80057e4:	613b      	str	r3, [r7, #16]
 80057e6:	683b      	ldr	r3, [r7, #0]
 80057e8:	685b      	ldr	r3, [r3, #4]
 80057ea:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d003      	beq.n	80057fa <HAL_GPIO_Init+0x266>
 80057f2:	693a      	ldr	r2, [r7, #16]
 80057f4:	68fb      	ldr	r3, [r7, #12]
 80057f6:	4313      	orrs	r3, r2
 80057f8:	613b      	str	r3, [r7, #16]
 80057fa:	4a26      	ldr	r2, [pc, #152]	@ (8005894 <HAL_GPIO_Init+0x300>)
 80057fc:	693b      	ldr	r3, [r7, #16]
 80057fe:	60d3      	str	r3, [r2, #12]
 8005800:	4b24      	ldr	r3, [pc, #144]	@ (8005894 <HAL_GPIO_Init+0x300>)
 8005802:	685b      	ldr	r3, [r3, #4]
 8005804:	613b      	str	r3, [r7, #16]
 8005806:	68fb      	ldr	r3, [r7, #12]
 8005808:	43db      	mvns	r3, r3
 800580a:	693a      	ldr	r2, [r7, #16]
 800580c:	4013      	ands	r3, r2
 800580e:	613b      	str	r3, [r7, #16]
 8005810:	683b      	ldr	r3, [r7, #0]
 8005812:	685b      	ldr	r3, [r3, #4]
 8005814:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005818:	2b00      	cmp	r3, #0
 800581a:	d003      	beq.n	8005824 <HAL_GPIO_Init+0x290>
 800581c:	693a      	ldr	r2, [r7, #16]
 800581e:	68fb      	ldr	r3, [r7, #12]
 8005820:	4313      	orrs	r3, r2
 8005822:	613b      	str	r3, [r7, #16]
 8005824:	4a1b      	ldr	r2, [pc, #108]	@ (8005894 <HAL_GPIO_Init+0x300>)
 8005826:	693b      	ldr	r3, [r7, #16]
 8005828:	6053      	str	r3, [r2, #4]
 800582a:	4b1a      	ldr	r3, [pc, #104]	@ (8005894 <HAL_GPIO_Init+0x300>)
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	613b      	str	r3, [r7, #16]
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	43db      	mvns	r3, r3
 8005834:	693a      	ldr	r2, [r7, #16]
 8005836:	4013      	ands	r3, r2
 8005838:	613b      	str	r3, [r7, #16]
 800583a:	683b      	ldr	r3, [r7, #0]
 800583c:	685b      	ldr	r3, [r3, #4]
 800583e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005842:	2b00      	cmp	r3, #0
 8005844:	d003      	beq.n	800584e <HAL_GPIO_Init+0x2ba>
 8005846:	693a      	ldr	r2, [r7, #16]
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	4313      	orrs	r3, r2
 800584c:	613b      	str	r3, [r7, #16]
 800584e:	4a11      	ldr	r2, [pc, #68]	@ (8005894 <HAL_GPIO_Init+0x300>)
 8005850:	693b      	ldr	r3, [r7, #16]
 8005852:	6013      	str	r3, [r2, #0]
 8005854:	697b      	ldr	r3, [r7, #20]
 8005856:	3301      	adds	r3, #1
 8005858:	617b      	str	r3, [r7, #20]
 800585a:	683b      	ldr	r3, [r7, #0]
 800585c:	681a      	ldr	r2, [r3, #0]
 800585e:	697b      	ldr	r3, [r7, #20]
 8005860:	fa22 f303 	lsr.w	r3, r2, r3
 8005864:	2b00      	cmp	r3, #0
 8005866:	f47f ae9d 	bne.w	80055a4 <HAL_GPIO_Init+0x10>
 800586a:	bf00      	nop
 800586c:	bf00      	nop
 800586e:	371c      	adds	r7, #28
 8005870:	46bd      	mov	sp, r7
 8005872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005876:	4770      	bx	lr
 8005878:	40021000 	.word	0x40021000
 800587c:	40010000 	.word	0x40010000
 8005880:	48000400 	.word	0x48000400
 8005884:	48000800 	.word	0x48000800
 8005888:	48000c00 	.word	0x48000c00
 800588c:	48001000 	.word	0x48001000
 8005890:	48001400 	.word	0x48001400
 8005894:	40010400 	.word	0x40010400

08005898 <HAL_GPIO_WritePin>:
 8005898:	b480      	push	{r7}
 800589a:	b083      	sub	sp, #12
 800589c:	af00      	add	r7, sp, #0
 800589e:	6078      	str	r0, [r7, #4]
 80058a0:	460b      	mov	r3, r1
 80058a2:	807b      	strh	r3, [r7, #2]
 80058a4:	4613      	mov	r3, r2
 80058a6:	707b      	strb	r3, [r7, #1]
 80058a8:	787b      	ldrb	r3, [r7, #1]
 80058aa:	2b00      	cmp	r3, #0
 80058ac:	d003      	beq.n	80058b6 <HAL_GPIO_WritePin+0x1e>
 80058ae:	887a      	ldrh	r2, [r7, #2]
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	619a      	str	r2, [r3, #24]
 80058b4:	e002      	b.n	80058bc <HAL_GPIO_WritePin+0x24>
 80058b6:	887a      	ldrh	r2, [r7, #2]
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	629a      	str	r2, [r3, #40]	@ 0x28
 80058bc:	bf00      	nop
 80058be:	370c      	adds	r7, #12
 80058c0:	46bd      	mov	sp, r7
 80058c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c6:	4770      	bx	lr

080058c8 <HAL_GPIO_TogglePin>:
 80058c8:	b480      	push	{r7}
 80058ca:	b085      	sub	sp, #20
 80058cc:	af00      	add	r7, sp, #0
 80058ce:	6078      	str	r0, [r7, #4]
 80058d0:	460b      	mov	r3, r1
 80058d2:	807b      	strh	r3, [r7, #2]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	695b      	ldr	r3, [r3, #20]
 80058d8:	60fb      	str	r3, [r7, #12]
 80058da:	887a      	ldrh	r2, [r7, #2]
 80058dc:	68fb      	ldr	r3, [r7, #12]
 80058de:	4013      	ands	r3, r2
 80058e0:	041a      	lsls	r2, r3, #16
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	43d9      	mvns	r1, r3
 80058e6:	887b      	ldrh	r3, [r7, #2]
 80058e8:	400b      	ands	r3, r1
 80058ea:	431a      	orrs	r2, r3
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	619a      	str	r2, [r3, #24]
 80058f0:	bf00      	nop
 80058f2:	3714      	adds	r7, #20
 80058f4:	46bd      	mov	sp, r7
 80058f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058fa:	4770      	bx	lr

080058fc <HAL_OPAMP_Init>:
 80058fc:	b580      	push	{r7, lr}
 80058fe:	b084      	sub	sp, #16
 8005900:	af00      	add	r7, sp, #0
 8005902:	6078      	str	r0, [r7, #4]
 8005904:	2300      	movs	r3, #0
 8005906:	73fb      	strb	r3, [r7, #15]
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	2b00      	cmp	r3, #0
 800590c:	d101      	bne.n	8005912 <HAL_OPAMP_Init+0x16>
 800590e:	2301      	movs	r3, #1
 8005910:	e0bb      	b.n	8005a8a <HAL_OPAMP_Init+0x18e>
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005918:	b2db      	uxtb	r3, r3
 800591a:	2b05      	cmp	r3, #5
 800591c:	d101      	bne.n	8005922 <HAL_OPAMP_Init+0x26>
 800591e:	2301      	movs	r3, #1
 8005920:	e0b3      	b.n	8005a8a <HAL_OPAMP_Init+0x18e>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005928:	b2db      	uxtb	r3, r3
 800592a:	2b02      	cmp	r3, #2
 800592c:	d101      	bne.n	8005932 <HAL_OPAMP_Init+0x36>
 800592e:	2301      	movs	r3, #1
 8005930:	e0ab      	b.n	8005a8a <HAL_OPAMP_Init+0x18e>
 8005932:	4b58      	ldr	r3, [pc, #352]	@ (8005a94 <HAL_OPAMP_Init+0x198>)
 8005934:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005936:	4a57      	ldr	r2, [pc, #348]	@ (8005a94 <HAL_OPAMP_Init+0x198>)
 8005938:	f043 0301 	orr.w	r3, r3, #1
 800593c:	6613      	str	r3, [r2, #96]	@ 0x60
 800593e:	4b55      	ldr	r3, [pc, #340]	@ (8005a94 <HAL_OPAMP_Init+0x198>)
 8005940:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005942:	f003 0301 	and.w	r3, r3, #1
 8005946:	60bb      	str	r3, [r7, #8]
 8005948:	68bb      	ldr	r3, [r7, #8]
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005950:	b2db      	uxtb	r3, r3
 8005952:	2b00      	cmp	r3, #0
 8005954:	d103      	bne.n	800595e <HAL_OPAMP_Init+0x62>
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	2200      	movs	r2, #0
 800595a:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800595e:	6878      	ldr	r0, [r7, #4]
 8005960:	f7fd fa48 	bl	8002df4 <HAL_OPAMP_MspInit>
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	689b      	ldr	r3, [r3, #8]
 8005968:	2b40      	cmp	r3, #64	@ 0x40
 800596a:	d003      	beq.n	8005974 <HAL_OPAMP_Init+0x78>
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	689b      	ldr	r3, [r3, #8]
 8005970:	2b60      	cmp	r3, #96	@ 0x60
 8005972:	d133      	bne.n	80059dc <HAL_OPAMP_Init+0xe0>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	f023 0110 	bic.w	r1, r3, #16
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	430a      	orrs	r2, r1
 8005988:	601a      	str	r2, [r3, #0]
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	681a      	ldr	r2, [r3, #0]
 8005990:	4b41      	ldr	r3, [pc, #260]	@ (8005a98 <HAL_OPAMP_Init+0x19c>)
 8005992:	4013      	ands	r3, r2
 8005994:	687a      	ldr	r2, [r7, #4]
 8005996:	6851      	ldr	r1, [r2, #4]
 8005998:	687a      	ldr	r2, [r7, #4]
 800599a:	6892      	ldr	r2, [r2, #8]
 800599c:	4311      	orrs	r1, r2
 800599e:	687a      	ldr	r2, [r7, #4]
 80059a0:	6912      	ldr	r2, [r2, #16]
 80059a2:	430a      	orrs	r2, r1
 80059a4:	6879      	ldr	r1, [r7, #4]
 80059a6:	7d09      	ldrb	r1, [r1, #20]
 80059a8:	2901      	cmp	r1, #1
 80059aa:	d102      	bne.n	80059b2 <HAL_OPAMP_Init+0xb6>
 80059ac:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80059b0:	e000      	b.n	80059b4 <HAL_OPAMP_Init+0xb8>
 80059b2:	2100      	movs	r1, #0
 80059b4:	4311      	orrs	r1, r2
 80059b6:	687a      	ldr	r2, [r7, #4]
 80059b8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80059ba:	4311      	orrs	r1, r2
 80059bc:	687a      	ldr	r2, [r7, #4]
 80059be:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80059c0:	4311      	orrs	r1, r2
 80059c2:	687a      	ldr	r2, [r7, #4]
 80059c4:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 80059c6:	04d2      	lsls	r2, r2, #19
 80059c8:	4311      	orrs	r1, r2
 80059ca:	687a      	ldr	r2, [r7, #4]
 80059cc:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 80059ce:	0612      	lsls	r2, r2, #24
 80059d0:	4311      	orrs	r1, r2
 80059d2:	687a      	ldr	r2, [r7, #4]
 80059d4:	6812      	ldr	r2, [r2, #0]
 80059d6:	430b      	orrs	r3, r1
 80059d8:	6013      	str	r3, [r2, #0]
 80059da:	e035      	b.n	8005a48 <HAL_OPAMP_Init+0x14c>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	f023 0110 	bic.w	r1, r3, #16
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	430a      	orrs	r2, r1
 80059f0:	601a      	str	r2, [r3, #0]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	681a      	ldr	r2, [r3, #0]
 80059f8:	4b27      	ldr	r3, [pc, #156]	@ (8005a98 <HAL_OPAMP_Init+0x19c>)
 80059fa:	4013      	ands	r3, r2
 80059fc:	687a      	ldr	r2, [r7, #4]
 80059fe:	6851      	ldr	r1, [r2, #4]
 8005a00:	687a      	ldr	r2, [r7, #4]
 8005a02:	6892      	ldr	r2, [r2, #8]
 8005a04:	4311      	orrs	r1, r2
 8005a06:	687a      	ldr	r2, [r7, #4]
 8005a08:	68d2      	ldr	r2, [r2, #12]
 8005a0a:	4311      	orrs	r1, r2
 8005a0c:	687a      	ldr	r2, [r7, #4]
 8005a0e:	6912      	ldr	r2, [r2, #16]
 8005a10:	430a      	orrs	r2, r1
 8005a12:	6879      	ldr	r1, [r7, #4]
 8005a14:	7d09      	ldrb	r1, [r1, #20]
 8005a16:	2901      	cmp	r1, #1
 8005a18:	d102      	bne.n	8005a20 <HAL_OPAMP_Init+0x124>
 8005a1a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8005a1e:	e000      	b.n	8005a22 <HAL_OPAMP_Init+0x126>
 8005a20:	2100      	movs	r1, #0
 8005a22:	4311      	orrs	r1, r2
 8005a24:	687a      	ldr	r2, [r7, #4]
 8005a26:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005a28:	4311      	orrs	r1, r2
 8005a2a:	687a      	ldr	r2, [r7, #4]
 8005a2c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8005a2e:	4311      	orrs	r1, r2
 8005a30:	687a      	ldr	r2, [r7, #4]
 8005a32:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8005a34:	04d2      	lsls	r2, r2, #19
 8005a36:	4311      	orrs	r1, r2
 8005a38:	687a      	ldr	r2, [r7, #4]
 8005a3a:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8005a3c:	0612      	lsls	r2, r2, #24
 8005a3e:	4311      	orrs	r1, r2
 8005a40:	687a      	ldr	r2, [r7, #4]
 8005a42:	6812      	ldr	r2, [r2, #0]
 8005a44:	430b      	orrs	r3, r1
 8005a46:	6013      	str	r3, [r2, #0]
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	699b      	ldr	r3, [r3, #24]
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	db10      	blt.n	8005a74 <HAL_OPAMP_Init+0x178>
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	699b      	ldr	r3, [r3, #24]
 8005a58:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	699a      	ldr	r2, [r3, #24]
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	69db      	ldr	r3, [r3, #28]
 8005a64:	431a      	orrs	r2, r3
 8005a66:	687b      	ldr	r3, [r7, #4]
 8005a68:	6a1b      	ldr	r3, [r3, #32]
 8005a6a:	431a      	orrs	r2, r3
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	430a      	orrs	r2, r1
 8005a72:	619a      	str	r2, [r3, #24]
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005a7a:	b2db      	uxtb	r3, r3
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	d103      	bne.n	8005a88 <HAL_OPAMP_Init+0x18c>
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	2201      	movs	r2, #1
 8005a84:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8005a88:	7bfb      	ldrb	r3, [r7, #15]
 8005a8a:	4618      	mov	r0, r3
 8005a8c:	3710      	adds	r7, #16
 8005a8e:	46bd      	mov	sp, r7
 8005a90:	bd80      	pop	{r7, pc}
 8005a92:	bf00      	nop
 8005a94:	40021000 	.word	0x40021000
 8005a98:	e0003e11 	.word	0xe0003e11

08005a9c <HAL_OPAMP_Start>:
 8005a9c:	b480      	push	{r7}
 8005a9e:	b085      	sub	sp, #20
 8005aa0:	af00      	add	r7, sp, #0
 8005aa2:	6078      	str	r0, [r7, #4]
 8005aa4:	2300      	movs	r3, #0
 8005aa6:	73fb      	strb	r3, [r7, #15]
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2b00      	cmp	r3, #0
 8005aac:	d102      	bne.n	8005ab4 <HAL_OPAMP_Start+0x18>
 8005aae:	2301      	movs	r3, #1
 8005ab0:	73fb      	strb	r3, [r7, #15]
 8005ab2:	e01d      	b.n	8005af0 <HAL_OPAMP_Start+0x54>
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005aba:	b2db      	uxtb	r3, r3
 8005abc:	2b05      	cmp	r3, #5
 8005abe:	d102      	bne.n	8005ac6 <HAL_OPAMP_Start+0x2a>
 8005ac0:	2301      	movs	r3, #1
 8005ac2:	73fb      	strb	r3, [r7, #15]
 8005ac4:	e014      	b.n	8005af0 <HAL_OPAMP_Start+0x54>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8005acc:	b2db      	uxtb	r3, r3
 8005ace:	2b01      	cmp	r3, #1
 8005ad0:	d10c      	bne.n	8005aec <HAL_OPAMP_Start+0x50>
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	681a      	ldr	r2, [r3, #0]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	f042 0201 	orr.w	r2, r2, #1
 8005ae0:	601a      	str	r2, [r3, #0]
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	2204      	movs	r2, #4
 8005ae6:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8005aea:	e001      	b.n	8005af0 <HAL_OPAMP_Start+0x54>
 8005aec:	2301      	movs	r3, #1
 8005aee:	73fb      	strb	r3, [r7, #15]
 8005af0:	7bfb      	ldrb	r3, [r7, #15]
 8005af2:	4618      	mov	r0, r3
 8005af4:	3714      	adds	r7, #20
 8005af6:	46bd      	mov	sp, r7
 8005af8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005afc:	4770      	bx	lr
	...

08005b00 <HAL_PWREx_ControlVoltageScaling>:
 8005b00:	b480      	push	{r7}
 8005b02:	b085      	sub	sp, #20
 8005b04:	af00      	add	r7, sp, #0
 8005b06:	6078      	str	r0, [r7, #4]
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	d141      	bne.n	8005b92 <HAL_PWREx_ControlVoltageScaling+0x92>
 8005b0e:	4b4b      	ldr	r3, [pc, #300]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8005b16:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005b1a:	d131      	bne.n	8005b80 <HAL_PWREx_ControlVoltageScaling+0x80>
 8005b1c:	4b47      	ldr	r3, [pc, #284]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005b22:	4a46      	ldr	r2, [pc, #280]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b24:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005b28:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8005b2c:	4b43      	ldr	r3, [pc, #268]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005b34:	4a41      	ldr	r2, [pc, #260]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b36:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005b3a:	6013      	str	r3, [r2, #0]
 8005b3c:	4b40      	ldr	r3, [pc, #256]	@ (8005c40 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	2232      	movs	r2, #50	@ 0x32
 8005b42:	fb02 f303 	mul.w	r3, r2, r3
 8005b46:	4a3f      	ldr	r2, [pc, #252]	@ (8005c44 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8005b48:	fba2 2303 	umull	r2, r3, r2, r3
 8005b4c:	0c9b      	lsrs	r3, r3, #18
 8005b4e:	3301      	adds	r3, #1
 8005b50:	60fb      	str	r3, [r7, #12]
 8005b52:	e002      	b.n	8005b5a <HAL_PWREx_ControlVoltageScaling+0x5a>
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	3b01      	subs	r3, #1
 8005b58:	60fb      	str	r3, [r7, #12]
 8005b5a:	4b38      	ldr	r3, [pc, #224]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b5c:	695b      	ldr	r3, [r3, #20]
 8005b5e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005b62:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005b66:	d102      	bne.n	8005b6e <HAL_PWREx_ControlVoltageScaling+0x6e>
 8005b68:	68fb      	ldr	r3, [r7, #12]
 8005b6a:	2b00      	cmp	r3, #0
 8005b6c:	d1f2      	bne.n	8005b54 <HAL_PWREx_ControlVoltageScaling+0x54>
 8005b6e:	4b33      	ldr	r3, [pc, #204]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b70:	695b      	ldr	r3, [r3, #20]
 8005b72:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005b76:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005b7a:	d158      	bne.n	8005c2e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8005b7c:	2303      	movs	r3, #3
 8005b7e:	e057      	b.n	8005c30 <HAL_PWREx_ControlVoltageScaling+0x130>
 8005b80:	4b2e      	ldr	r3, [pc, #184]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b82:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005b86:	4a2d      	ldr	r2, [pc, #180]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b88:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005b8c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8005b90:	e04d      	b.n	8005c2e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005b98:	d141      	bne.n	8005c1e <HAL_PWREx_ControlVoltageScaling+0x11e>
 8005b9a:	4b28      	ldr	r3, [pc, #160]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8005ba2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005ba6:	d131      	bne.n	8005c0c <HAL_PWREx_ControlVoltageScaling+0x10c>
 8005ba8:	4b24      	ldr	r3, [pc, #144]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005baa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005bae:	4a23      	ldr	r2, [pc, #140]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005bb0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005bb4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8005bb8:	4b20      	ldr	r3, [pc, #128]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005bc0:	4a1e      	ldr	r2, [pc, #120]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005bc2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005bc6:	6013      	str	r3, [r2, #0]
 8005bc8:	4b1d      	ldr	r3, [pc, #116]	@ (8005c40 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	2232      	movs	r2, #50	@ 0x32
 8005bce:	fb02 f303 	mul.w	r3, r2, r3
 8005bd2:	4a1c      	ldr	r2, [pc, #112]	@ (8005c44 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8005bd4:	fba2 2303 	umull	r2, r3, r2, r3
 8005bd8:	0c9b      	lsrs	r3, r3, #18
 8005bda:	3301      	adds	r3, #1
 8005bdc:	60fb      	str	r3, [r7, #12]
 8005bde:	e002      	b.n	8005be6 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	3b01      	subs	r3, #1
 8005be4:	60fb      	str	r3, [r7, #12]
 8005be6:	4b15      	ldr	r3, [pc, #84]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005be8:	695b      	ldr	r3, [r3, #20]
 8005bea:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005bee:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005bf2:	d102      	bne.n	8005bfa <HAL_PWREx_ControlVoltageScaling+0xfa>
 8005bf4:	68fb      	ldr	r3, [r7, #12]
 8005bf6:	2b00      	cmp	r3, #0
 8005bf8:	d1f2      	bne.n	8005be0 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8005bfa:	4b10      	ldr	r3, [pc, #64]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005bfc:	695b      	ldr	r3, [r3, #20]
 8005bfe:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005c02:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005c06:	d112      	bne.n	8005c2e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8005c08:	2303      	movs	r3, #3
 8005c0a:	e011      	b.n	8005c30 <HAL_PWREx_ControlVoltageScaling+0x130>
 8005c0c:	4b0b      	ldr	r3, [pc, #44]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005c0e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005c12:	4a0a      	ldr	r2, [pc, #40]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005c14:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005c18:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8005c1c:	e007      	b.n	8005c2e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8005c1e:	4b07      	ldr	r3, [pc, #28]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005c26:	4a05      	ldr	r2, [pc, #20]	@ (8005c3c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8005c28:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8005c2c:	6013      	str	r3, [r2, #0]
 8005c2e:	2300      	movs	r3, #0
 8005c30:	4618      	mov	r0, r3
 8005c32:	3714      	adds	r7, #20
 8005c34:	46bd      	mov	sp, r7
 8005c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c3a:	4770      	bx	lr
 8005c3c:	40007000 	.word	0x40007000
 8005c40:	20000050 	.word	0x20000050
 8005c44:	431bde83 	.word	0x431bde83

08005c48 <HAL_PWREx_DisableUCPDDeadBattery>:
 8005c48:	b480      	push	{r7}
 8005c4a:	af00      	add	r7, sp, #0
 8005c4c:	4b05      	ldr	r3, [pc, #20]	@ (8005c64 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8005c4e:	689b      	ldr	r3, [r3, #8]
 8005c50:	4a04      	ldr	r2, [pc, #16]	@ (8005c64 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8005c52:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005c56:	6093      	str	r3, [r2, #8]
 8005c58:	bf00      	nop
 8005c5a:	46bd      	mov	sp, r7
 8005c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c60:	4770      	bx	lr
 8005c62:	bf00      	nop
 8005c64:	40007000 	.word	0x40007000

08005c68 <HAL_RCC_OscConfig>:
 8005c68:	b580      	push	{r7, lr}
 8005c6a:	b088      	sub	sp, #32
 8005c6c:	af00      	add	r7, sp, #0
 8005c6e:	6078      	str	r0, [r7, #4]
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	2b00      	cmp	r3, #0
 8005c74:	d101      	bne.n	8005c7a <HAL_RCC_OscConfig+0x12>
 8005c76:	2301      	movs	r3, #1
 8005c78:	e2fe      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	f003 0301 	and.w	r3, r3, #1
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d075      	beq.n	8005d72 <HAL_RCC_OscConfig+0x10a>
 8005c86:	4b97      	ldr	r3, [pc, #604]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005c88:	689b      	ldr	r3, [r3, #8]
 8005c8a:	f003 030c 	and.w	r3, r3, #12
 8005c8e:	61bb      	str	r3, [r7, #24]
 8005c90:	4b94      	ldr	r3, [pc, #592]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005c92:	68db      	ldr	r3, [r3, #12]
 8005c94:	f003 0303 	and.w	r3, r3, #3
 8005c98:	617b      	str	r3, [r7, #20]
 8005c9a:	69bb      	ldr	r3, [r7, #24]
 8005c9c:	2b0c      	cmp	r3, #12
 8005c9e:	d102      	bne.n	8005ca6 <HAL_RCC_OscConfig+0x3e>
 8005ca0:	697b      	ldr	r3, [r7, #20]
 8005ca2:	2b03      	cmp	r3, #3
 8005ca4:	d002      	beq.n	8005cac <HAL_RCC_OscConfig+0x44>
 8005ca6:	69bb      	ldr	r3, [r7, #24]
 8005ca8:	2b08      	cmp	r3, #8
 8005caa:	d10b      	bne.n	8005cc4 <HAL_RCC_OscConfig+0x5c>
 8005cac:	4b8d      	ldr	r3, [pc, #564]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d05b      	beq.n	8005d70 <HAL_RCC_OscConfig+0x108>
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	685b      	ldr	r3, [r3, #4]
 8005cbc:	2b00      	cmp	r3, #0
 8005cbe:	d157      	bne.n	8005d70 <HAL_RCC_OscConfig+0x108>
 8005cc0:	2301      	movs	r3, #1
 8005cc2:	e2d9      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	685b      	ldr	r3, [r3, #4]
 8005cc8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ccc:	d106      	bne.n	8005cdc <HAL_RCC_OscConfig+0x74>
 8005cce:	4b85      	ldr	r3, [pc, #532]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	4a84      	ldr	r2, [pc, #528]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cd4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005cd8:	6013      	str	r3, [r2, #0]
 8005cda:	e01d      	b.n	8005d18 <HAL_RCC_OscConfig+0xb0>
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	685b      	ldr	r3, [r3, #4]
 8005ce0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005ce4:	d10c      	bne.n	8005d00 <HAL_RCC_OscConfig+0x98>
 8005ce6:	4b7f      	ldr	r3, [pc, #508]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	4a7e      	ldr	r2, [pc, #504]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005cf0:	6013      	str	r3, [r2, #0]
 8005cf2:	4b7c      	ldr	r3, [pc, #496]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	4a7b      	ldr	r2, [pc, #492]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005cf8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005cfc:	6013      	str	r3, [r2, #0]
 8005cfe:	e00b      	b.n	8005d18 <HAL_RCC_OscConfig+0xb0>
 8005d00:	4b78      	ldr	r3, [pc, #480]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	4a77      	ldr	r2, [pc, #476]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d06:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005d0a:	6013      	str	r3, [r2, #0]
 8005d0c:	4b75      	ldr	r3, [pc, #468]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	4a74      	ldr	r2, [pc, #464]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d12:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005d16:	6013      	str	r3, [r2, #0]
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	685b      	ldr	r3, [r3, #4]
 8005d1c:	2b00      	cmp	r3, #0
 8005d1e:	d013      	beq.n	8005d48 <HAL_RCC_OscConfig+0xe0>
 8005d20:	f7fd fb06 	bl	8003330 <HAL_GetTick>
 8005d24:	6138      	str	r0, [r7, #16]
 8005d26:	e008      	b.n	8005d3a <HAL_RCC_OscConfig+0xd2>
 8005d28:	f7fd fb02 	bl	8003330 <HAL_GetTick>
 8005d2c:	4602      	mov	r2, r0
 8005d2e:	693b      	ldr	r3, [r7, #16]
 8005d30:	1ad3      	subs	r3, r2, r3
 8005d32:	2b64      	cmp	r3, #100	@ 0x64
 8005d34:	d901      	bls.n	8005d3a <HAL_RCC_OscConfig+0xd2>
 8005d36:	2303      	movs	r3, #3
 8005d38:	e29e      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005d3a:	4b6a      	ldr	r3, [pc, #424]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d0f0      	beq.n	8005d28 <HAL_RCC_OscConfig+0xc0>
 8005d46:	e014      	b.n	8005d72 <HAL_RCC_OscConfig+0x10a>
 8005d48:	f7fd faf2 	bl	8003330 <HAL_GetTick>
 8005d4c:	6138      	str	r0, [r7, #16]
 8005d4e:	e008      	b.n	8005d62 <HAL_RCC_OscConfig+0xfa>
 8005d50:	f7fd faee 	bl	8003330 <HAL_GetTick>
 8005d54:	4602      	mov	r2, r0
 8005d56:	693b      	ldr	r3, [r7, #16]
 8005d58:	1ad3      	subs	r3, r2, r3
 8005d5a:	2b64      	cmp	r3, #100	@ 0x64
 8005d5c:	d901      	bls.n	8005d62 <HAL_RCC_OscConfig+0xfa>
 8005d5e:	2303      	movs	r3, #3
 8005d60:	e28a      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005d62:	4b60      	ldr	r3, [pc, #384]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d64:	681b      	ldr	r3, [r3, #0]
 8005d66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d6a:	2b00      	cmp	r3, #0
 8005d6c:	d1f0      	bne.n	8005d50 <HAL_RCC_OscConfig+0xe8>
 8005d6e:	e000      	b.n	8005d72 <HAL_RCC_OscConfig+0x10a>
 8005d70:	bf00      	nop
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	f003 0302 	and.w	r3, r3, #2
 8005d7a:	2b00      	cmp	r3, #0
 8005d7c:	d075      	beq.n	8005e6a <HAL_RCC_OscConfig+0x202>
 8005d7e:	4b59      	ldr	r3, [pc, #356]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d80:	689b      	ldr	r3, [r3, #8]
 8005d82:	f003 030c 	and.w	r3, r3, #12
 8005d86:	61bb      	str	r3, [r7, #24]
 8005d88:	4b56      	ldr	r3, [pc, #344]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005d8a:	68db      	ldr	r3, [r3, #12]
 8005d8c:	f003 0303 	and.w	r3, r3, #3
 8005d90:	617b      	str	r3, [r7, #20]
 8005d92:	69bb      	ldr	r3, [r7, #24]
 8005d94:	2b0c      	cmp	r3, #12
 8005d96:	d102      	bne.n	8005d9e <HAL_RCC_OscConfig+0x136>
 8005d98:	697b      	ldr	r3, [r7, #20]
 8005d9a:	2b02      	cmp	r3, #2
 8005d9c:	d002      	beq.n	8005da4 <HAL_RCC_OscConfig+0x13c>
 8005d9e:	69bb      	ldr	r3, [r7, #24]
 8005da0:	2b04      	cmp	r3, #4
 8005da2:	d11f      	bne.n	8005de4 <HAL_RCC_OscConfig+0x17c>
 8005da4:	4b4f      	ldr	r3, [pc, #316]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d005      	beq.n	8005dbc <HAL_RCC_OscConfig+0x154>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	68db      	ldr	r3, [r3, #12]
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d101      	bne.n	8005dbc <HAL_RCC_OscConfig+0x154>
 8005db8:	2301      	movs	r3, #1
 8005dba:	e25d      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005dbc:	4b49      	ldr	r3, [pc, #292]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005dbe:	685b      	ldr	r3, [r3, #4]
 8005dc0:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	691b      	ldr	r3, [r3, #16]
 8005dc8:	061b      	lsls	r3, r3, #24
 8005dca:	4946      	ldr	r1, [pc, #280]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005dcc:	4313      	orrs	r3, r2
 8005dce:	604b      	str	r3, [r1, #4]
 8005dd0:	4b45      	ldr	r3, [pc, #276]	@ (8005ee8 <HAL_RCC_OscConfig+0x280>)
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	4618      	mov	r0, r3
 8005dd6:	f7fd fa5f 	bl	8003298 <HAL_InitTick>
 8005dda:	4603      	mov	r3, r0
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d043      	beq.n	8005e68 <HAL_RCC_OscConfig+0x200>
 8005de0:	2301      	movs	r3, #1
 8005de2:	e249      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	68db      	ldr	r3, [r3, #12]
 8005de8:	2b00      	cmp	r3, #0
 8005dea:	d023      	beq.n	8005e34 <HAL_RCC_OscConfig+0x1cc>
 8005dec:	4b3d      	ldr	r3, [pc, #244]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	4a3c      	ldr	r2, [pc, #240]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005df2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005df6:	6013      	str	r3, [r2, #0]
 8005df8:	f7fd fa9a 	bl	8003330 <HAL_GetTick>
 8005dfc:	6138      	str	r0, [r7, #16]
 8005dfe:	e008      	b.n	8005e12 <HAL_RCC_OscConfig+0x1aa>
 8005e00:	f7fd fa96 	bl	8003330 <HAL_GetTick>
 8005e04:	4602      	mov	r2, r0
 8005e06:	693b      	ldr	r3, [r7, #16]
 8005e08:	1ad3      	subs	r3, r2, r3
 8005e0a:	2b02      	cmp	r3, #2
 8005e0c:	d901      	bls.n	8005e12 <HAL_RCC_OscConfig+0x1aa>
 8005e0e:	2303      	movs	r3, #3
 8005e10:	e232      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005e12:	4b34      	ldr	r3, [pc, #208]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	d0f0      	beq.n	8005e00 <HAL_RCC_OscConfig+0x198>
 8005e1e:	4b31      	ldr	r3, [pc, #196]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e20:	685b      	ldr	r3, [r3, #4]
 8005e22:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	691b      	ldr	r3, [r3, #16]
 8005e2a:	061b      	lsls	r3, r3, #24
 8005e2c:	492d      	ldr	r1, [pc, #180]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e2e:	4313      	orrs	r3, r2
 8005e30:	604b      	str	r3, [r1, #4]
 8005e32:	e01a      	b.n	8005e6a <HAL_RCC_OscConfig+0x202>
 8005e34:	4b2b      	ldr	r3, [pc, #172]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	4a2a      	ldr	r2, [pc, #168]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e3a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005e3e:	6013      	str	r3, [r2, #0]
 8005e40:	f7fd fa76 	bl	8003330 <HAL_GetTick>
 8005e44:	6138      	str	r0, [r7, #16]
 8005e46:	e008      	b.n	8005e5a <HAL_RCC_OscConfig+0x1f2>
 8005e48:	f7fd fa72 	bl	8003330 <HAL_GetTick>
 8005e4c:	4602      	mov	r2, r0
 8005e4e:	693b      	ldr	r3, [r7, #16]
 8005e50:	1ad3      	subs	r3, r2, r3
 8005e52:	2b02      	cmp	r3, #2
 8005e54:	d901      	bls.n	8005e5a <HAL_RCC_OscConfig+0x1f2>
 8005e56:	2303      	movs	r3, #3
 8005e58:	e20e      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005e5a:	4b22      	ldr	r3, [pc, #136]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005e62:	2b00      	cmp	r3, #0
 8005e64:	d1f0      	bne.n	8005e48 <HAL_RCC_OscConfig+0x1e0>
 8005e66:	e000      	b.n	8005e6a <HAL_RCC_OscConfig+0x202>
 8005e68:	bf00      	nop
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	f003 0308 	and.w	r3, r3, #8
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d041      	beq.n	8005efa <HAL_RCC_OscConfig+0x292>
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	695b      	ldr	r3, [r3, #20]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d01c      	beq.n	8005eb8 <HAL_RCC_OscConfig+0x250>
 8005e7e:	4b19      	ldr	r3, [pc, #100]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e80:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005e84:	4a17      	ldr	r2, [pc, #92]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005e86:	f043 0301 	orr.w	r3, r3, #1
 8005e8a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8005e8e:	f7fd fa4f 	bl	8003330 <HAL_GetTick>
 8005e92:	6138      	str	r0, [r7, #16]
 8005e94:	e008      	b.n	8005ea8 <HAL_RCC_OscConfig+0x240>
 8005e96:	f7fd fa4b 	bl	8003330 <HAL_GetTick>
 8005e9a:	4602      	mov	r2, r0
 8005e9c:	693b      	ldr	r3, [r7, #16]
 8005e9e:	1ad3      	subs	r3, r2, r3
 8005ea0:	2b02      	cmp	r3, #2
 8005ea2:	d901      	bls.n	8005ea8 <HAL_RCC_OscConfig+0x240>
 8005ea4:	2303      	movs	r3, #3
 8005ea6:	e1e7      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005ea8:	4b0e      	ldr	r3, [pc, #56]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005eaa:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005eae:	f003 0302 	and.w	r3, r3, #2
 8005eb2:	2b00      	cmp	r3, #0
 8005eb4:	d0ef      	beq.n	8005e96 <HAL_RCC_OscConfig+0x22e>
 8005eb6:	e020      	b.n	8005efa <HAL_RCC_OscConfig+0x292>
 8005eb8:	4b0a      	ldr	r3, [pc, #40]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005eba:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005ebe:	4a09      	ldr	r2, [pc, #36]	@ (8005ee4 <HAL_RCC_OscConfig+0x27c>)
 8005ec0:	f023 0301 	bic.w	r3, r3, #1
 8005ec4:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8005ec8:	f7fd fa32 	bl	8003330 <HAL_GetTick>
 8005ecc:	6138      	str	r0, [r7, #16]
 8005ece:	e00d      	b.n	8005eec <HAL_RCC_OscConfig+0x284>
 8005ed0:	f7fd fa2e 	bl	8003330 <HAL_GetTick>
 8005ed4:	4602      	mov	r2, r0
 8005ed6:	693b      	ldr	r3, [r7, #16]
 8005ed8:	1ad3      	subs	r3, r2, r3
 8005eda:	2b02      	cmp	r3, #2
 8005edc:	d906      	bls.n	8005eec <HAL_RCC_OscConfig+0x284>
 8005ede:	2303      	movs	r3, #3
 8005ee0:	e1ca      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005ee2:	bf00      	nop
 8005ee4:	40021000 	.word	0x40021000
 8005ee8:	20000054 	.word	0x20000054
 8005eec:	4b8c      	ldr	r3, [pc, #560]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005eee:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005ef2:	f003 0302 	and.w	r3, r3, #2
 8005ef6:	2b00      	cmp	r3, #0
 8005ef8:	d1ea      	bne.n	8005ed0 <HAL_RCC_OscConfig+0x268>
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	681b      	ldr	r3, [r3, #0]
 8005efe:	f003 0304 	and.w	r3, r3, #4
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	f000 80a6 	beq.w	8006054 <HAL_RCC_OscConfig+0x3ec>
 8005f08:	2300      	movs	r3, #0
 8005f0a:	77fb      	strb	r3, [r7, #31]
 8005f0c:	4b84      	ldr	r3, [pc, #528]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f0e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005f10:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d101      	bne.n	8005f1c <HAL_RCC_OscConfig+0x2b4>
 8005f18:	2301      	movs	r3, #1
 8005f1a:	e000      	b.n	8005f1e <HAL_RCC_OscConfig+0x2b6>
 8005f1c:	2300      	movs	r3, #0
 8005f1e:	2b00      	cmp	r3, #0
 8005f20:	d00d      	beq.n	8005f3e <HAL_RCC_OscConfig+0x2d6>
 8005f22:	4b7f      	ldr	r3, [pc, #508]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f24:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005f26:	4a7e      	ldr	r2, [pc, #504]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f28:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005f2c:	6593      	str	r3, [r2, #88]	@ 0x58
 8005f2e:	4b7c      	ldr	r3, [pc, #496]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005f32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005f36:	60fb      	str	r3, [r7, #12]
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	2301      	movs	r3, #1
 8005f3c:	77fb      	strb	r3, [r7, #31]
 8005f3e:	4b79      	ldr	r3, [pc, #484]	@ (8006124 <HAL_RCC_OscConfig+0x4bc>)
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005f46:	2b00      	cmp	r3, #0
 8005f48:	d118      	bne.n	8005f7c <HAL_RCC_OscConfig+0x314>
 8005f4a:	4b76      	ldr	r3, [pc, #472]	@ (8006124 <HAL_RCC_OscConfig+0x4bc>)
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	4a75      	ldr	r2, [pc, #468]	@ (8006124 <HAL_RCC_OscConfig+0x4bc>)
 8005f50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005f54:	6013      	str	r3, [r2, #0]
 8005f56:	f7fd f9eb 	bl	8003330 <HAL_GetTick>
 8005f5a:	6138      	str	r0, [r7, #16]
 8005f5c:	e008      	b.n	8005f70 <HAL_RCC_OscConfig+0x308>
 8005f5e:	f7fd f9e7 	bl	8003330 <HAL_GetTick>
 8005f62:	4602      	mov	r2, r0
 8005f64:	693b      	ldr	r3, [r7, #16]
 8005f66:	1ad3      	subs	r3, r2, r3
 8005f68:	2b02      	cmp	r3, #2
 8005f6a:	d901      	bls.n	8005f70 <HAL_RCC_OscConfig+0x308>
 8005f6c:	2303      	movs	r3, #3
 8005f6e:	e183      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8005f70:	4b6c      	ldr	r3, [pc, #432]	@ (8006124 <HAL_RCC_OscConfig+0x4bc>)
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005f78:	2b00      	cmp	r3, #0
 8005f7a:	d0f0      	beq.n	8005f5e <HAL_RCC_OscConfig+0x2f6>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	689b      	ldr	r3, [r3, #8]
 8005f80:	2b01      	cmp	r3, #1
 8005f82:	d108      	bne.n	8005f96 <HAL_RCC_OscConfig+0x32e>
 8005f84:	4b66      	ldr	r3, [pc, #408]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f86:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005f8a:	4a65      	ldr	r2, [pc, #404]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005f8c:	f043 0301 	orr.w	r3, r3, #1
 8005f90:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005f94:	e024      	b.n	8005fe0 <HAL_RCC_OscConfig+0x378>
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	689b      	ldr	r3, [r3, #8]
 8005f9a:	2b05      	cmp	r3, #5
 8005f9c:	d110      	bne.n	8005fc0 <HAL_RCC_OscConfig+0x358>
 8005f9e:	4b60      	ldr	r3, [pc, #384]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fa0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005fa4:	4a5e      	ldr	r2, [pc, #376]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fa6:	f043 0304 	orr.w	r3, r3, #4
 8005faa:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005fae:	4b5c      	ldr	r3, [pc, #368]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005fb4:	4a5a      	ldr	r2, [pc, #360]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fb6:	f043 0301 	orr.w	r3, r3, #1
 8005fba:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005fbe:	e00f      	b.n	8005fe0 <HAL_RCC_OscConfig+0x378>
 8005fc0:	4b57      	ldr	r3, [pc, #348]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fc2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005fc6:	4a56      	ldr	r2, [pc, #344]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fc8:	f023 0301 	bic.w	r3, r3, #1
 8005fcc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005fd0:	4b53      	ldr	r3, [pc, #332]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fd2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005fd6:	4a52      	ldr	r2, [pc, #328]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8005fd8:	f023 0304 	bic.w	r3, r3, #4
 8005fdc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	689b      	ldr	r3, [r3, #8]
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d016      	beq.n	8006016 <HAL_RCC_OscConfig+0x3ae>
 8005fe8:	f7fd f9a2 	bl	8003330 <HAL_GetTick>
 8005fec:	6138      	str	r0, [r7, #16]
 8005fee:	e00a      	b.n	8006006 <HAL_RCC_OscConfig+0x39e>
 8005ff0:	f7fd f99e 	bl	8003330 <HAL_GetTick>
 8005ff4:	4602      	mov	r2, r0
 8005ff6:	693b      	ldr	r3, [r7, #16]
 8005ff8:	1ad3      	subs	r3, r2, r3
 8005ffa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005ffe:	4293      	cmp	r3, r2
 8006000:	d901      	bls.n	8006006 <HAL_RCC_OscConfig+0x39e>
 8006002:	2303      	movs	r3, #3
 8006004:	e138      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006006:	4b46      	ldr	r3, [pc, #280]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8006008:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800600c:	f003 0302 	and.w	r3, r3, #2
 8006010:	2b00      	cmp	r3, #0
 8006012:	d0ed      	beq.n	8005ff0 <HAL_RCC_OscConfig+0x388>
 8006014:	e015      	b.n	8006042 <HAL_RCC_OscConfig+0x3da>
 8006016:	f7fd f98b 	bl	8003330 <HAL_GetTick>
 800601a:	6138      	str	r0, [r7, #16]
 800601c:	e00a      	b.n	8006034 <HAL_RCC_OscConfig+0x3cc>
 800601e:	f7fd f987 	bl	8003330 <HAL_GetTick>
 8006022:	4602      	mov	r2, r0
 8006024:	693b      	ldr	r3, [r7, #16]
 8006026:	1ad3      	subs	r3, r2, r3
 8006028:	f241 3288 	movw	r2, #5000	@ 0x1388
 800602c:	4293      	cmp	r3, r2
 800602e:	d901      	bls.n	8006034 <HAL_RCC_OscConfig+0x3cc>
 8006030:	2303      	movs	r3, #3
 8006032:	e121      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006034:	4b3a      	ldr	r3, [pc, #232]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8006036:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800603a:	f003 0302 	and.w	r3, r3, #2
 800603e:	2b00      	cmp	r3, #0
 8006040:	d1ed      	bne.n	800601e <HAL_RCC_OscConfig+0x3b6>
 8006042:	7ffb      	ldrb	r3, [r7, #31]
 8006044:	2b01      	cmp	r3, #1
 8006046:	d105      	bne.n	8006054 <HAL_RCC_OscConfig+0x3ec>
 8006048:	4b35      	ldr	r3, [pc, #212]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 800604a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800604c:	4a34      	ldr	r2, [pc, #208]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 800604e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006052:	6593      	str	r3, [r2, #88]	@ 0x58
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f003 0320 	and.w	r3, r3, #32
 800605c:	2b00      	cmp	r3, #0
 800605e:	d03c      	beq.n	80060da <HAL_RCC_OscConfig+0x472>
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	699b      	ldr	r3, [r3, #24]
 8006064:	2b00      	cmp	r3, #0
 8006066:	d01c      	beq.n	80060a2 <HAL_RCC_OscConfig+0x43a>
 8006068:	4b2d      	ldr	r3, [pc, #180]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 800606a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800606e:	4a2c      	ldr	r2, [pc, #176]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8006070:	f043 0301 	orr.w	r3, r3, #1
 8006074:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006078:	f7fd f95a 	bl	8003330 <HAL_GetTick>
 800607c:	6138      	str	r0, [r7, #16]
 800607e:	e008      	b.n	8006092 <HAL_RCC_OscConfig+0x42a>
 8006080:	f7fd f956 	bl	8003330 <HAL_GetTick>
 8006084:	4602      	mov	r2, r0
 8006086:	693b      	ldr	r3, [r7, #16]
 8006088:	1ad3      	subs	r3, r2, r3
 800608a:	2b02      	cmp	r3, #2
 800608c:	d901      	bls.n	8006092 <HAL_RCC_OscConfig+0x42a>
 800608e:	2303      	movs	r3, #3
 8006090:	e0f2      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006092:	4b23      	ldr	r3, [pc, #140]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8006094:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006098:	f003 0302 	and.w	r3, r3, #2
 800609c:	2b00      	cmp	r3, #0
 800609e:	d0ef      	beq.n	8006080 <HAL_RCC_OscConfig+0x418>
 80060a0:	e01b      	b.n	80060da <HAL_RCC_OscConfig+0x472>
 80060a2:	4b1f      	ldr	r3, [pc, #124]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 80060a4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80060a8:	4a1d      	ldr	r2, [pc, #116]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 80060aa:	f023 0301 	bic.w	r3, r3, #1
 80060ae:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 80060b2:	f7fd f93d 	bl	8003330 <HAL_GetTick>
 80060b6:	6138      	str	r0, [r7, #16]
 80060b8:	e008      	b.n	80060cc <HAL_RCC_OscConfig+0x464>
 80060ba:	f7fd f939 	bl	8003330 <HAL_GetTick>
 80060be:	4602      	mov	r2, r0
 80060c0:	693b      	ldr	r3, [r7, #16]
 80060c2:	1ad3      	subs	r3, r2, r3
 80060c4:	2b02      	cmp	r3, #2
 80060c6:	d901      	bls.n	80060cc <HAL_RCC_OscConfig+0x464>
 80060c8:	2303      	movs	r3, #3
 80060ca:	e0d5      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 80060cc:	4b14      	ldr	r3, [pc, #80]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 80060ce:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80060d2:	f003 0302 	and.w	r3, r3, #2
 80060d6:	2b00      	cmp	r3, #0
 80060d8:	d1ef      	bne.n	80060ba <HAL_RCC_OscConfig+0x452>
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	69db      	ldr	r3, [r3, #28]
 80060de:	2b00      	cmp	r3, #0
 80060e0:	f000 80c9 	beq.w	8006276 <HAL_RCC_OscConfig+0x60e>
 80060e4:	4b0e      	ldr	r3, [pc, #56]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 80060e6:	689b      	ldr	r3, [r3, #8]
 80060e8:	f003 030c 	and.w	r3, r3, #12
 80060ec:	2b0c      	cmp	r3, #12
 80060ee:	f000 8083 	beq.w	80061f8 <HAL_RCC_OscConfig+0x590>
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	69db      	ldr	r3, [r3, #28]
 80060f6:	2b02      	cmp	r3, #2
 80060f8:	d15e      	bne.n	80061b8 <HAL_RCC_OscConfig+0x550>
 80060fa:	4b09      	ldr	r3, [pc, #36]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	4a08      	ldr	r2, [pc, #32]	@ (8006120 <HAL_RCC_OscConfig+0x4b8>)
 8006100:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006104:	6013      	str	r3, [r2, #0]
 8006106:	f7fd f913 	bl	8003330 <HAL_GetTick>
 800610a:	6138      	str	r0, [r7, #16]
 800610c:	e00c      	b.n	8006128 <HAL_RCC_OscConfig+0x4c0>
 800610e:	f7fd f90f 	bl	8003330 <HAL_GetTick>
 8006112:	4602      	mov	r2, r0
 8006114:	693b      	ldr	r3, [r7, #16]
 8006116:	1ad3      	subs	r3, r2, r3
 8006118:	2b02      	cmp	r3, #2
 800611a:	d905      	bls.n	8006128 <HAL_RCC_OscConfig+0x4c0>
 800611c:	2303      	movs	r3, #3
 800611e:	e0ab      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006120:	40021000 	.word	0x40021000
 8006124:	40007000 	.word	0x40007000
 8006128:	4b55      	ldr	r3, [pc, #340]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006130:	2b00      	cmp	r3, #0
 8006132:	d1ec      	bne.n	800610e <HAL_RCC_OscConfig+0x4a6>
 8006134:	4b52      	ldr	r3, [pc, #328]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 8006136:	68da      	ldr	r2, [r3, #12]
 8006138:	4b52      	ldr	r3, [pc, #328]	@ (8006284 <HAL_RCC_OscConfig+0x61c>)
 800613a:	4013      	ands	r3, r2
 800613c:	687a      	ldr	r2, [r7, #4]
 800613e:	6a11      	ldr	r1, [r2, #32]
 8006140:	687a      	ldr	r2, [r7, #4]
 8006142:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006144:	3a01      	subs	r2, #1
 8006146:	0112      	lsls	r2, r2, #4
 8006148:	4311      	orrs	r1, r2
 800614a:	687a      	ldr	r2, [r7, #4]
 800614c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800614e:	0212      	lsls	r2, r2, #8
 8006150:	4311      	orrs	r1, r2
 8006152:	687a      	ldr	r2, [r7, #4]
 8006154:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8006156:	0852      	lsrs	r2, r2, #1
 8006158:	3a01      	subs	r2, #1
 800615a:	0552      	lsls	r2, r2, #21
 800615c:	4311      	orrs	r1, r2
 800615e:	687a      	ldr	r2, [r7, #4]
 8006160:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8006162:	0852      	lsrs	r2, r2, #1
 8006164:	3a01      	subs	r2, #1
 8006166:	0652      	lsls	r2, r2, #25
 8006168:	4311      	orrs	r1, r2
 800616a:	687a      	ldr	r2, [r7, #4]
 800616c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800616e:	06d2      	lsls	r2, r2, #27
 8006170:	430a      	orrs	r2, r1
 8006172:	4943      	ldr	r1, [pc, #268]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 8006174:	4313      	orrs	r3, r2
 8006176:	60cb      	str	r3, [r1, #12]
 8006178:	4b41      	ldr	r3, [pc, #260]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	4a40      	ldr	r2, [pc, #256]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 800617e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006182:	6013      	str	r3, [r2, #0]
 8006184:	4b3e      	ldr	r3, [pc, #248]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 8006186:	68db      	ldr	r3, [r3, #12]
 8006188:	4a3d      	ldr	r2, [pc, #244]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 800618a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800618e:	60d3      	str	r3, [r2, #12]
 8006190:	f7fd f8ce 	bl	8003330 <HAL_GetTick>
 8006194:	6138      	str	r0, [r7, #16]
 8006196:	e008      	b.n	80061aa <HAL_RCC_OscConfig+0x542>
 8006198:	f7fd f8ca 	bl	8003330 <HAL_GetTick>
 800619c:	4602      	mov	r2, r0
 800619e:	693b      	ldr	r3, [r7, #16]
 80061a0:	1ad3      	subs	r3, r2, r3
 80061a2:	2b02      	cmp	r3, #2
 80061a4:	d901      	bls.n	80061aa <HAL_RCC_OscConfig+0x542>
 80061a6:	2303      	movs	r3, #3
 80061a8:	e066      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 80061aa:	4b35      	ldr	r3, [pc, #212]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061ac:	681b      	ldr	r3, [r3, #0]
 80061ae:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d0f0      	beq.n	8006198 <HAL_RCC_OscConfig+0x530>
 80061b6:	e05e      	b.n	8006276 <HAL_RCC_OscConfig+0x60e>
 80061b8:	4b31      	ldr	r3, [pc, #196]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	4a30      	ldr	r2, [pc, #192]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061be:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80061c2:	6013      	str	r3, [r2, #0]
 80061c4:	f7fd f8b4 	bl	8003330 <HAL_GetTick>
 80061c8:	6138      	str	r0, [r7, #16]
 80061ca:	e008      	b.n	80061de <HAL_RCC_OscConfig+0x576>
 80061cc:	f7fd f8b0 	bl	8003330 <HAL_GetTick>
 80061d0:	4602      	mov	r2, r0
 80061d2:	693b      	ldr	r3, [r7, #16]
 80061d4:	1ad3      	subs	r3, r2, r3
 80061d6:	2b02      	cmp	r3, #2
 80061d8:	d901      	bls.n	80061de <HAL_RCC_OscConfig+0x576>
 80061da:	2303      	movs	r3, #3
 80061dc:	e04c      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 80061de:	4b28      	ldr	r3, [pc, #160]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d1f0      	bne.n	80061cc <HAL_RCC_OscConfig+0x564>
 80061ea:	4b25      	ldr	r3, [pc, #148]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061ec:	68da      	ldr	r2, [r3, #12]
 80061ee:	4924      	ldr	r1, [pc, #144]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 80061f0:	4b25      	ldr	r3, [pc, #148]	@ (8006288 <HAL_RCC_OscConfig+0x620>)
 80061f2:	4013      	ands	r3, r2
 80061f4:	60cb      	str	r3, [r1, #12]
 80061f6:	e03e      	b.n	8006276 <HAL_RCC_OscConfig+0x60e>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	69db      	ldr	r3, [r3, #28]
 80061fc:	2b01      	cmp	r3, #1
 80061fe:	d101      	bne.n	8006204 <HAL_RCC_OscConfig+0x59c>
 8006200:	2301      	movs	r3, #1
 8006202:	e039      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006204:	4b1e      	ldr	r3, [pc, #120]	@ (8006280 <HAL_RCC_OscConfig+0x618>)
 8006206:	68db      	ldr	r3, [r3, #12]
 8006208:	617b      	str	r3, [r7, #20]
 800620a:	697b      	ldr	r3, [r7, #20]
 800620c:	f003 0203 	and.w	r2, r3, #3
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	6a1b      	ldr	r3, [r3, #32]
 8006214:	429a      	cmp	r2, r3
 8006216:	d12c      	bne.n	8006272 <HAL_RCC_OscConfig+0x60a>
 8006218:	697b      	ldr	r3, [r7, #20]
 800621a:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006222:	3b01      	subs	r3, #1
 8006224:	011b      	lsls	r3, r3, #4
 8006226:	429a      	cmp	r2, r3
 8006228:	d123      	bne.n	8006272 <HAL_RCC_OscConfig+0x60a>
 800622a:	697b      	ldr	r3, [r7, #20]
 800622c:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006234:	021b      	lsls	r3, r3, #8
 8006236:	429a      	cmp	r2, r3
 8006238:	d11b      	bne.n	8006272 <HAL_RCC_OscConfig+0x60a>
 800623a:	697b      	ldr	r3, [r7, #20]
 800623c:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006244:	06db      	lsls	r3, r3, #27
 8006246:	429a      	cmp	r2, r3
 8006248:	d113      	bne.n	8006272 <HAL_RCC_OscConfig+0x60a>
 800624a:	697b      	ldr	r3, [r7, #20]
 800624c:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006254:	085b      	lsrs	r3, r3, #1
 8006256:	3b01      	subs	r3, #1
 8006258:	055b      	lsls	r3, r3, #21
 800625a:	429a      	cmp	r2, r3
 800625c:	d109      	bne.n	8006272 <HAL_RCC_OscConfig+0x60a>
 800625e:	697b      	ldr	r3, [r7, #20]
 8006260:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006268:	085b      	lsrs	r3, r3, #1
 800626a:	3b01      	subs	r3, #1
 800626c:	065b      	lsls	r3, r3, #25
 800626e:	429a      	cmp	r2, r3
 8006270:	d001      	beq.n	8006276 <HAL_RCC_OscConfig+0x60e>
 8006272:	2301      	movs	r3, #1
 8006274:	e000      	b.n	8006278 <HAL_RCC_OscConfig+0x610>
 8006276:	2300      	movs	r3, #0
 8006278:	4618      	mov	r0, r3
 800627a:	3720      	adds	r7, #32
 800627c:	46bd      	mov	sp, r7
 800627e:	bd80      	pop	{r7, pc}
 8006280:	40021000 	.word	0x40021000
 8006284:	019f800c 	.word	0x019f800c
 8006288:	feeefffc 	.word	0xfeeefffc

0800628c <HAL_RCC_ClockConfig>:
 800628c:	b580      	push	{r7, lr}
 800628e:	b086      	sub	sp, #24
 8006290:	af00      	add	r7, sp, #0
 8006292:	6078      	str	r0, [r7, #4]
 8006294:	6039      	str	r1, [r7, #0]
 8006296:	2300      	movs	r3, #0
 8006298:	617b      	str	r3, [r7, #20]
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	2b00      	cmp	r3, #0
 800629e:	d101      	bne.n	80062a4 <HAL_RCC_ClockConfig+0x18>
 80062a0:	2301      	movs	r3, #1
 80062a2:	e11e      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 80062a4:	4b91      	ldr	r3, [pc, #580]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	f003 030f 	and.w	r3, r3, #15
 80062ac:	683a      	ldr	r2, [r7, #0]
 80062ae:	429a      	cmp	r2, r3
 80062b0:	d910      	bls.n	80062d4 <HAL_RCC_ClockConfig+0x48>
 80062b2:	4b8e      	ldr	r3, [pc, #568]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 80062b4:	681b      	ldr	r3, [r3, #0]
 80062b6:	f023 020f 	bic.w	r2, r3, #15
 80062ba:	498c      	ldr	r1, [pc, #560]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 80062bc:	683b      	ldr	r3, [r7, #0]
 80062be:	4313      	orrs	r3, r2
 80062c0:	600b      	str	r3, [r1, #0]
 80062c2:	4b8a      	ldr	r3, [pc, #552]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 80062c4:	681b      	ldr	r3, [r3, #0]
 80062c6:	f003 030f 	and.w	r3, r3, #15
 80062ca:	683a      	ldr	r2, [r7, #0]
 80062cc:	429a      	cmp	r2, r3
 80062ce:	d001      	beq.n	80062d4 <HAL_RCC_ClockConfig+0x48>
 80062d0:	2301      	movs	r3, #1
 80062d2:	e106      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	681b      	ldr	r3, [r3, #0]
 80062d8:	f003 0301 	and.w	r3, r3, #1
 80062dc:	2b00      	cmp	r3, #0
 80062de:	d073      	beq.n	80063c8 <HAL_RCC_ClockConfig+0x13c>
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	685b      	ldr	r3, [r3, #4]
 80062e4:	2b03      	cmp	r3, #3
 80062e6:	d129      	bne.n	800633c <HAL_RCC_ClockConfig+0xb0>
 80062e8:	4b81      	ldr	r3, [pc, #516]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d101      	bne.n	80062f8 <HAL_RCC_ClockConfig+0x6c>
 80062f4:	2301      	movs	r3, #1
 80062f6:	e0f4      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 80062f8:	f000 f99e 	bl	8006638 <RCC_GetSysClockFreqFromPLLSource>
 80062fc:	6138      	str	r0, [r7, #16]
 80062fe:	693b      	ldr	r3, [r7, #16]
 8006300:	4a7c      	ldr	r2, [pc, #496]	@ (80064f4 <HAL_RCC_ClockConfig+0x268>)
 8006302:	4293      	cmp	r3, r2
 8006304:	d93f      	bls.n	8006386 <HAL_RCC_ClockConfig+0xfa>
 8006306:	4b7a      	ldr	r3, [pc, #488]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006308:	689b      	ldr	r3, [r3, #8]
 800630a:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800630e:	2b00      	cmp	r3, #0
 8006310:	d009      	beq.n	8006326 <HAL_RCC_ClockConfig+0x9a>
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	f003 0302 	and.w	r3, r3, #2
 800631a:	2b00      	cmp	r3, #0
 800631c:	d033      	beq.n	8006386 <HAL_RCC_ClockConfig+0xfa>
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	689b      	ldr	r3, [r3, #8]
 8006322:	2b00      	cmp	r3, #0
 8006324:	d12f      	bne.n	8006386 <HAL_RCC_ClockConfig+0xfa>
 8006326:	4b72      	ldr	r3, [pc, #456]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006328:	689b      	ldr	r3, [r3, #8]
 800632a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800632e:	4a70      	ldr	r2, [pc, #448]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006330:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006334:	6093      	str	r3, [r2, #8]
 8006336:	2380      	movs	r3, #128	@ 0x80
 8006338:	617b      	str	r3, [r7, #20]
 800633a:	e024      	b.n	8006386 <HAL_RCC_ClockConfig+0xfa>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	685b      	ldr	r3, [r3, #4]
 8006340:	2b02      	cmp	r3, #2
 8006342:	d107      	bne.n	8006354 <HAL_RCC_ClockConfig+0xc8>
 8006344:	4b6a      	ldr	r3, [pc, #424]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800634c:	2b00      	cmp	r3, #0
 800634e:	d109      	bne.n	8006364 <HAL_RCC_ClockConfig+0xd8>
 8006350:	2301      	movs	r3, #1
 8006352:	e0c6      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 8006354:	4b66      	ldr	r3, [pc, #408]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800635c:	2b00      	cmp	r3, #0
 800635e:	d101      	bne.n	8006364 <HAL_RCC_ClockConfig+0xd8>
 8006360:	2301      	movs	r3, #1
 8006362:	e0be      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 8006364:	f000 f8ce 	bl	8006504 <HAL_RCC_GetSysClockFreq>
 8006368:	6138      	str	r0, [r7, #16]
 800636a:	693b      	ldr	r3, [r7, #16]
 800636c:	4a61      	ldr	r2, [pc, #388]	@ (80064f4 <HAL_RCC_ClockConfig+0x268>)
 800636e:	4293      	cmp	r3, r2
 8006370:	d909      	bls.n	8006386 <HAL_RCC_ClockConfig+0xfa>
 8006372:	4b5f      	ldr	r3, [pc, #380]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006374:	689b      	ldr	r3, [r3, #8]
 8006376:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800637a:	4a5d      	ldr	r2, [pc, #372]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 800637c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006380:	6093      	str	r3, [r2, #8]
 8006382:	2380      	movs	r3, #128	@ 0x80
 8006384:	617b      	str	r3, [r7, #20]
 8006386:	4b5a      	ldr	r3, [pc, #360]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006388:	689b      	ldr	r3, [r3, #8]
 800638a:	f023 0203 	bic.w	r2, r3, #3
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	685b      	ldr	r3, [r3, #4]
 8006392:	4957      	ldr	r1, [pc, #348]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006394:	4313      	orrs	r3, r2
 8006396:	608b      	str	r3, [r1, #8]
 8006398:	f7fc ffca 	bl	8003330 <HAL_GetTick>
 800639c:	60f8      	str	r0, [r7, #12]
 800639e:	e00a      	b.n	80063b6 <HAL_RCC_ClockConfig+0x12a>
 80063a0:	f7fc ffc6 	bl	8003330 <HAL_GetTick>
 80063a4:	4602      	mov	r2, r0
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	1ad3      	subs	r3, r2, r3
 80063aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80063ae:	4293      	cmp	r3, r2
 80063b0:	d901      	bls.n	80063b6 <HAL_RCC_ClockConfig+0x12a>
 80063b2:	2303      	movs	r3, #3
 80063b4:	e095      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 80063b6:	4b4e      	ldr	r3, [pc, #312]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80063b8:	689b      	ldr	r3, [r3, #8]
 80063ba:	f003 020c 	and.w	r2, r3, #12
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	685b      	ldr	r3, [r3, #4]
 80063c2:	009b      	lsls	r3, r3, #2
 80063c4:	429a      	cmp	r2, r3
 80063c6:	d1eb      	bne.n	80063a0 <HAL_RCC_ClockConfig+0x114>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	f003 0302 	and.w	r3, r3, #2
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d023      	beq.n	800641c <HAL_RCC_ClockConfig+0x190>
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	f003 0304 	and.w	r3, r3, #4
 80063dc:	2b00      	cmp	r3, #0
 80063de:	d005      	beq.n	80063ec <HAL_RCC_ClockConfig+0x160>
 80063e0:	4b43      	ldr	r3, [pc, #268]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80063e2:	689b      	ldr	r3, [r3, #8]
 80063e4:	4a42      	ldr	r2, [pc, #264]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80063e6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80063ea:	6093      	str	r3, [r2, #8]
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	681b      	ldr	r3, [r3, #0]
 80063f0:	f003 0308 	and.w	r3, r3, #8
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d007      	beq.n	8006408 <HAL_RCC_ClockConfig+0x17c>
 80063f8:	4b3d      	ldr	r3, [pc, #244]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80063fa:	689b      	ldr	r3, [r3, #8]
 80063fc:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8006400:	4a3b      	ldr	r2, [pc, #236]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006402:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8006406:	6093      	str	r3, [r2, #8]
 8006408:	4b39      	ldr	r3, [pc, #228]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 800640a:	689b      	ldr	r3, [r3, #8]
 800640c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006410:	687b      	ldr	r3, [r7, #4]
 8006412:	689b      	ldr	r3, [r3, #8]
 8006414:	4936      	ldr	r1, [pc, #216]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006416:	4313      	orrs	r3, r2
 8006418:	608b      	str	r3, [r1, #8]
 800641a:	e008      	b.n	800642e <HAL_RCC_ClockConfig+0x1a2>
 800641c:	697b      	ldr	r3, [r7, #20]
 800641e:	2b80      	cmp	r3, #128	@ 0x80
 8006420:	d105      	bne.n	800642e <HAL_RCC_ClockConfig+0x1a2>
 8006422:	4b33      	ldr	r3, [pc, #204]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006424:	689b      	ldr	r3, [r3, #8]
 8006426:	4a32      	ldr	r2, [pc, #200]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006428:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800642c:	6093      	str	r3, [r2, #8]
 800642e:	4b2f      	ldr	r3, [pc, #188]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	f003 030f 	and.w	r3, r3, #15
 8006436:	683a      	ldr	r2, [r7, #0]
 8006438:	429a      	cmp	r2, r3
 800643a:	d21d      	bcs.n	8006478 <HAL_RCC_ClockConfig+0x1ec>
 800643c:	4b2b      	ldr	r3, [pc, #172]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 800643e:	681b      	ldr	r3, [r3, #0]
 8006440:	f023 020f 	bic.w	r2, r3, #15
 8006444:	4929      	ldr	r1, [pc, #164]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 8006446:	683b      	ldr	r3, [r7, #0]
 8006448:	4313      	orrs	r3, r2
 800644a:	600b      	str	r3, [r1, #0]
 800644c:	f7fc ff70 	bl	8003330 <HAL_GetTick>
 8006450:	60f8      	str	r0, [r7, #12]
 8006452:	e00a      	b.n	800646a <HAL_RCC_ClockConfig+0x1de>
 8006454:	f7fc ff6c 	bl	8003330 <HAL_GetTick>
 8006458:	4602      	mov	r2, r0
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	1ad3      	subs	r3, r2, r3
 800645e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006462:	4293      	cmp	r3, r2
 8006464:	d901      	bls.n	800646a <HAL_RCC_ClockConfig+0x1de>
 8006466:	2303      	movs	r3, #3
 8006468:	e03b      	b.n	80064e2 <HAL_RCC_ClockConfig+0x256>
 800646a:	4b20      	ldr	r3, [pc, #128]	@ (80064ec <HAL_RCC_ClockConfig+0x260>)
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	f003 030f 	and.w	r3, r3, #15
 8006472:	683a      	ldr	r2, [r7, #0]
 8006474:	429a      	cmp	r2, r3
 8006476:	d1ed      	bne.n	8006454 <HAL_RCC_ClockConfig+0x1c8>
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	f003 0304 	and.w	r3, r3, #4
 8006480:	2b00      	cmp	r3, #0
 8006482:	d008      	beq.n	8006496 <HAL_RCC_ClockConfig+0x20a>
 8006484:	4b1a      	ldr	r3, [pc, #104]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006486:	689b      	ldr	r3, [r3, #8]
 8006488:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	68db      	ldr	r3, [r3, #12]
 8006490:	4917      	ldr	r1, [pc, #92]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 8006492:	4313      	orrs	r3, r2
 8006494:	608b      	str	r3, [r1, #8]
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	f003 0308 	and.w	r3, r3, #8
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d009      	beq.n	80064b6 <HAL_RCC_ClockConfig+0x22a>
 80064a2:	4b13      	ldr	r3, [pc, #76]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80064a4:	689b      	ldr	r3, [r3, #8]
 80064a6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	691b      	ldr	r3, [r3, #16]
 80064ae:	00db      	lsls	r3, r3, #3
 80064b0:	490f      	ldr	r1, [pc, #60]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80064b2:	4313      	orrs	r3, r2
 80064b4:	608b      	str	r3, [r1, #8]
 80064b6:	f000 f825 	bl	8006504 <HAL_RCC_GetSysClockFreq>
 80064ba:	4602      	mov	r2, r0
 80064bc:	4b0c      	ldr	r3, [pc, #48]	@ (80064f0 <HAL_RCC_ClockConfig+0x264>)
 80064be:	689b      	ldr	r3, [r3, #8]
 80064c0:	091b      	lsrs	r3, r3, #4
 80064c2:	f003 030f 	and.w	r3, r3, #15
 80064c6:	490c      	ldr	r1, [pc, #48]	@ (80064f8 <HAL_RCC_ClockConfig+0x26c>)
 80064c8:	5ccb      	ldrb	r3, [r1, r3]
 80064ca:	f003 031f 	and.w	r3, r3, #31
 80064ce:	fa22 f303 	lsr.w	r3, r2, r3
 80064d2:	4a0a      	ldr	r2, [pc, #40]	@ (80064fc <HAL_RCC_ClockConfig+0x270>)
 80064d4:	6013      	str	r3, [r2, #0]
 80064d6:	4b0a      	ldr	r3, [pc, #40]	@ (8006500 <HAL_RCC_ClockConfig+0x274>)
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	4618      	mov	r0, r3
 80064dc:	f7fc fedc 	bl	8003298 <HAL_InitTick>
 80064e0:	4603      	mov	r3, r0
 80064e2:	4618      	mov	r0, r3
 80064e4:	3718      	adds	r7, #24
 80064e6:	46bd      	mov	sp, r7
 80064e8:	bd80      	pop	{r7, pc}
 80064ea:	bf00      	nop
 80064ec:	40022000 	.word	0x40022000
 80064f0:	40021000 	.word	0x40021000
 80064f4:	04c4b400 	.word	0x04c4b400
 80064f8:	0800c9b4 	.word	0x0800c9b4
 80064fc:	20000050 	.word	0x20000050
 8006500:	20000054 	.word	0x20000054

08006504 <HAL_RCC_GetSysClockFreq>:
 8006504:	b480      	push	{r7}
 8006506:	b087      	sub	sp, #28
 8006508:	af00      	add	r7, sp, #0
 800650a:	4b2c      	ldr	r3, [pc, #176]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 800650c:	689b      	ldr	r3, [r3, #8]
 800650e:	f003 030c 	and.w	r3, r3, #12
 8006512:	2b04      	cmp	r3, #4
 8006514:	d102      	bne.n	800651c <HAL_RCC_GetSysClockFreq+0x18>
 8006516:	4b2a      	ldr	r3, [pc, #168]	@ (80065c0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8006518:	613b      	str	r3, [r7, #16]
 800651a:	e047      	b.n	80065ac <HAL_RCC_GetSysClockFreq+0xa8>
 800651c:	4b27      	ldr	r3, [pc, #156]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 800651e:	689b      	ldr	r3, [r3, #8]
 8006520:	f003 030c 	and.w	r3, r3, #12
 8006524:	2b08      	cmp	r3, #8
 8006526:	d102      	bne.n	800652e <HAL_RCC_GetSysClockFreq+0x2a>
 8006528:	4b26      	ldr	r3, [pc, #152]	@ (80065c4 <HAL_RCC_GetSysClockFreq+0xc0>)
 800652a:	613b      	str	r3, [r7, #16]
 800652c:	e03e      	b.n	80065ac <HAL_RCC_GetSysClockFreq+0xa8>
 800652e:	4b23      	ldr	r3, [pc, #140]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 8006530:	689b      	ldr	r3, [r3, #8]
 8006532:	f003 030c 	and.w	r3, r3, #12
 8006536:	2b0c      	cmp	r3, #12
 8006538:	d136      	bne.n	80065a8 <HAL_RCC_GetSysClockFreq+0xa4>
 800653a:	4b20      	ldr	r3, [pc, #128]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 800653c:	68db      	ldr	r3, [r3, #12]
 800653e:	f003 0303 	and.w	r3, r3, #3
 8006542:	60fb      	str	r3, [r7, #12]
 8006544:	4b1d      	ldr	r3, [pc, #116]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 8006546:	68db      	ldr	r3, [r3, #12]
 8006548:	091b      	lsrs	r3, r3, #4
 800654a:	f003 030f 	and.w	r3, r3, #15
 800654e:	3301      	adds	r3, #1
 8006550:	60bb      	str	r3, [r7, #8]
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	2b03      	cmp	r3, #3
 8006556:	d10c      	bne.n	8006572 <HAL_RCC_GetSysClockFreq+0x6e>
 8006558:	4a1a      	ldr	r2, [pc, #104]	@ (80065c4 <HAL_RCC_GetSysClockFreq+0xc0>)
 800655a:	68bb      	ldr	r3, [r7, #8]
 800655c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006560:	4a16      	ldr	r2, [pc, #88]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 8006562:	68d2      	ldr	r2, [r2, #12]
 8006564:	0a12      	lsrs	r2, r2, #8
 8006566:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800656a:	fb02 f303 	mul.w	r3, r2, r3
 800656e:	617b      	str	r3, [r7, #20]
 8006570:	e00c      	b.n	800658c <HAL_RCC_GetSysClockFreq+0x88>
 8006572:	4a13      	ldr	r2, [pc, #76]	@ (80065c0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8006574:	68bb      	ldr	r3, [r7, #8]
 8006576:	fbb2 f3f3 	udiv	r3, r2, r3
 800657a:	4a10      	ldr	r2, [pc, #64]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 800657c:	68d2      	ldr	r2, [r2, #12]
 800657e:	0a12      	lsrs	r2, r2, #8
 8006580:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006584:	fb02 f303 	mul.w	r3, r2, r3
 8006588:	617b      	str	r3, [r7, #20]
 800658a:	bf00      	nop
 800658c:	4b0b      	ldr	r3, [pc, #44]	@ (80065bc <HAL_RCC_GetSysClockFreq+0xb8>)
 800658e:	68db      	ldr	r3, [r3, #12]
 8006590:	0e5b      	lsrs	r3, r3, #25
 8006592:	f003 0303 	and.w	r3, r3, #3
 8006596:	3301      	adds	r3, #1
 8006598:	005b      	lsls	r3, r3, #1
 800659a:	607b      	str	r3, [r7, #4]
 800659c:	697a      	ldr	r2, [r7, #20]
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80065a4:	613b      	str	r3, [r7, #16]
 80065a6:	e001      	b.n	80065ac <HAL_RCC_GetSysClockFreq+0xa8>
 80065a8:	2300      	movs	r3, #0
 80065aa:	613b      	str	r3, [r7, #16]
 80065ac:	693b      	ldr	r3, [r7, #16]
 80065ae:	4618      	mov	r0, r3
 80065b0:	371c      	adds	r7, #28
 80065b2:	46bd      	mov	sp, r7
 80065b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b8:	4770      	bx	lr
 80065ba:	bf00      	nop
 80065bc:	40021000 	.word	0x40021000
 80065c0:	00f42400 	.word	0x00f42400
 80065c4:	007a1200 	.word	0x007a1200

080065c8 <HAL_RCC_GetHCLKFreq>:
 80065c8:	b480      	push	{r7}
 80065ca:	af00      	add	r7, sp, #0
 80065cc:	4b03      	ldr	r3, [pc, #12]	@ (80065dc <HAL_RCC_GetHCLKFreq+0x14>)
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	4618      	mov	r0, r3
 80065d2:	46bd      	mov	sp, r7
 80065d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065d8:	4770      	bx	lr
 80065da:	bf00      	nop
 80065dc:	20000050 	.word	0x20000050

080065e0 <HAL_RCC_GetPCLK1Freq>:
 80065e0:	b580      	push	{r7, lr}
 80065e2:	af00      	add	r7, sp, #0
 80065e4:	f7ff fff0 	bl	80065c8 <HAL_RCC_GetHCLKFreq>
 80065e8:	4602      	mov	r2, r0
 80065ea:	4b06      	ldr	r3, [pc, #24]	@ (8006604 <HAL_RCC_GetPCLK1Freq+0x24>)
 80065ec:	689b      	ldr	r3, [r3, #8]
 80065ee:	0a1b      	lsrs	r3, r3, #8
 80065f0:	f003 0307 	and.w	r3, r3, #7
 80065f4:	4904      	ldr	r1, [pc, #16]	@ (8006608 <HAL_RCC_GetPCLK1Freq+0x28>)
 80065f6:	5ccb      	ldrb	r3, [r1, r3]
 80065f8:	f003 031f 	and.w	r3, r3, #31
 80065fc:	fa22 f303 	lsr.w	r3, r2, r3
 8006600:	4618      	mov	r0, r3
 8006602:	bd80      	pop	{r7, pc}
 8006604:	40021000 	.word	0x40021000
 8006608:	0800c9c4 	.word	0x0800c9c4

0800660c <HAL_RCC_GetPCLK2Freq>:
 800660c:	b580      	push	{r7, lr}
 800660e:	af00      	add	r7, sp, #0
 8006610:	f7ff ffda 	bl	80065c8 <HAL_RCC_GetHCLKFreq>
 8006614:	4602      	mov	r2, r0
 8006616:	4b06      	ldr	r3, [pc, #24]	@ (8006630 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006618:	689b      	ldr	r3, [r3, #8]
 800661a:	0adb      	lsrs	r3, r3, #11
 800661c:	f003 0307 	and.w	r3, r3, #7
 8006620:	4904      	ldr	r1, [pc, #16]	@ (8006634 <HAL_RCC_GetPCLK2Freq+0x28>)
 8006622:	5ccb      	ldrb	r3, [r1, r3]
 8006624:	f003 031f 	and.w	r3, r3, #31
 8006628:	fa22 f303 	lsr.w	r3, r2, r3
 800662c:	4618      	mov	r0, r3
 800662e:	bd80      	pop	{r7, pc}
 8006630:	40021000 	.word	0x40021000
 8006634:	0800c9c4 	.word	0x0800c9c4

08006638 <RCC_GetSysClockFreqFromPLLSource>:
 8006638:	b480      	push	{r7}
 800663a:	b087      	sub	sp, #28
 800663c:	af00      	add	r7, sp, #0
 800663e:	4b1e      	ldr	r3, [pc, #120]	@ (80066b8 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8006640:	68db      	ldr	r3, [r3, #12]
 8006642:	f003 0303 	and.w	r3, r3, #3
 8006646:	613b      	str	r3, [r7, #16]
 8006648:	4b1b      	ldr	r3, [pc, #108]	@ (80066b8 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800664a:	68db      	ldr	r3, [r3, #12]
 800664c:	091b      	lsrs	r3, r3, #4
 800664e:	f003 030f 	and.w	r3, r3, #15
 8006652:	3301      	adds	r3, #1
 8006654:	60fb      	str	r3, [r7, #12]
 8006656:	693b      	ldr	r3, [r7, #16]
 8006658:	2b03      	cmp	r3, #3
 800665a:	d10c      	bne.n	8006676 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 800665c:	4a17      	ldr	r2, [pc, #92]	@ (80066bc <RCC_GetSysClockFreqFromPLLSource+0x84>)
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	fbb2 f3f3 	udiv	r3, r2, r3
 8006664:	4a14      	ldr	r2, [pc, #80]	@ (80066b8 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8006666:	68d2      	ldr	r2, [r2, #12]
 8006668:	0a12      	lsrs	r2, r2, #8
 800666a:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800666e:	fb02 f303 	mul.w	r3, r2, r3
 8006672:	617b      	str	r3, [r7, #20]
 8006674:	e00c      	b.n	8006690 <RCC_GetSysClockFreqFromPLLSource+0x58>
 8006676:	4a12      	ldr	r2, [pc, #72]	@ (80066c0 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	fbb2 f3f3 	udiv	r3, r2, r3
 800667e:	4a0e      	ldr	r2, [pc, #56]	@ (80066b8 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8006680:	68d2      	ldr	r2, [r2, #12]
 8006682:	0a12      	lsrs	r2, r2, #8
 8006684:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006688:	fb02 f303 	mul.w	r3, r2, r3
 800668c:	617b      	str	r3, [r7, #20]
 800668e:	bf00      	nop
 8006690:	4b09      	ldr	r3, [pc, #36]	@ (80066b8 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8006692:	68db      	ldr	r3, [r3, #12]
 8006694:	0e5b      	lsrs	r3, r3, #25
 8006696:	f003 0303 	and.w	r3, r3, #3
 800669a:	3301      	adds	r3, #1
 800669c:	005b      	lsls	r3, r3, #1
 800669e:	60bb      	str	r3, [r7, #8]
 80066a0:	697a      	ldr	r2, [r7, #20]
 80066a2:	68bb      	ldr	r3, [r7, #8]
 80066a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80066a8:	607b      	str	r3, [r7, #4]
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	4618      	mov	r0, r3
 80066ae:	371c      	adds	r7, #28
 80066b0:	46bd      	mov	sp, r7
 80066b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066b6:	4770      	bx	lr
 80066b8:	40021000 	.word	0x40021000
 80066bc:	007a1200 	.word	0x007a1200
 80066c0:	00f42400 	.word	0x00f42400

080066c4 <HAL_RCCEx_PeriphCLKConfig>:
 80066c4:	b580      	push	{r7, lr}
 80066c6:	b086      	sub	sp, #24
 80066c8:	af00      	add	r7, sp, #0
 80066ca:	6078      	str	r0, [r7, #4]
 80066cc:	2300      	movs	r3, #0
 80066ce:	74fb      	strb	r3, [r7, #19]
 80066d0:	2300      	movs	r3, #0
 80066d2:	74bb      	strb	r3, [r7, #18]
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80066dc:	2b00      	cmp	r3, #0
 80066de:	f000 8098 	beq.w	8006812 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80066e2:	2300      	movs	r3, #0
 80066e4:	747b      	strb	r3, [r7, #17]
 80066e6:	4b43      	ldr	r3, [pc, #268]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80066e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80066ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d10d      	bne.n	800670e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80066f2:	4b40      	ldr	r3, [pc, #256]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80066f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80066f6:	4a3f      	ldr	r2, [pc, #252]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80066f8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80066fc:	6593      	str	r3, [r2, #88]	@ 0x58
 80066fe:	4b3d      	ldr	r3, [pc, #244]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006700:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006702:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006706:	60bb      	str	r3, [r7, #8]
 8006708:	68bb      	ldr	r3, [r7, #8]
 800670a:	2301      	movs	r3, #1
 800670c:	747b      	strb	r3, [r7, #17]
 800670e:	4b3a      	ldr	r3, [pc, #232]	@ (80067f8 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	4a39      	ldr	r2, [pc, #228]	@ (80067f8 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8006714:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006718:	6013      	str	r3, [r2, #0]
 800671a:	f7fc fe09 	bl	8003330 <HAL_GetTick>
 800671e:	60f8      	str	r0, [r7, #12]
 8006720:	e009      	b.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8006722:	f7fc fe05 	bl	8003330 <HAL_GetTick>
 8006726:	4602      	mov	r2, r0
 8006728:	68fb      	ldr	r3, [r7, #12]
 800672a:	1ad3      	subs	r3, r2, r3
 800672c:	2b02      	cmp	r3, #2
 800672e:	d902      	bls.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8006730:	2303      	movs	r3, #3
 8006732:	74fb      	strb	r3, [r7, #19]
 8006734:	e005      	b.n	8006742 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8006736:	4b30      	ldr	r3, [pc, #192]	@ (80067f8 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800673e:	2b00      	cmp	r3, #0
 8006740:	d0ef      	beq.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006742:	7cfb      	ldrb	r3, [r7, #19]
 8006744:	2b00      	cmp	r3, #0
 8006746:	d159      	bne.n	80067fc <HAL_RCCEx_PeriphCLKConfig+0x138>
 8006748:	4b2a      	ldr	r3, [pc, #168]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800674a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800674e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006752:	617b      	str	r3, [r7, #20]
 8006754:	697b      	ldr	r3, [r7, #20]
 8006756:	2b00      	cmp	r3, #0
 8006758:	d01e      	beq.n	8006798 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800675e:	697a      	ldr	r2, [r7, #20]
 8006760:	429a      	cmp	r2, r3
 8006762:	d019      	beq.n	8006798 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8006764:	4b23      	ldr	r3, [pc, #140]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006766:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800676a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800676e:	617b      	str	r3, [r7, #20]
 8006770:	4b20      	ldr	r3, [pc, #128]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006772:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006776:	4a1f      	ldr	r2, [pc, #124]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006778:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800677c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006780:	4b1c      	ldr	r3, [pc, #112]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006782:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006786:	4a1b      	ldr	r2, [pc, #108]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006788:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800678c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006790:	4a18      	ldr	r2, [pc, #96]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8006792:	697b      	ldr	r3, [r7, #20]
 8006794:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006798:	697b      	ldr	r3, [r7, #20]
 800679a:	f003 0301 	and.w	r3, r3, #1
 800679e:	2b00      	cmp	r3, #0
 80067a0:	d016      	beq.n	80067d0 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80067a2:	f7fc fdc5 	bl	8003330 <HAL_GetTick>
 80067a6:	60f8      	str	r0, [r7, #12]
 80067a8:	e00b      	b.n	80067c2 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80067aa:	f7fc fdc1 	bl	8003330 <HAL_GetTick>
 80067ae:	4602      	mov	r2, r0
 80067b0:	68fb      	ldr	r3, [r7, #12]
 80067b2:	1ad3      	subs	r3, r2, r3
 80067b4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80067b8:	4293      	cmp	r3, r2
 80067ba:	d902      	bls.n	80067c2 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80067bc:	2303      	movs	r3, #3
 80067be:	74fb      	strb	r3, [r7, #19]
 80067c0:	e006      	b.n	80067d0 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80067c2:	4b0c      	ldr	r3, [pc, #48]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80067c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80067c8:	f003 0302 	and.w	r3, r3, #2
 80067cc:	2b00      	cmp	r3, #0
 80067ce:	d0ec      	beq.n	80067aa <HAL_RCCEx_PeriphCLKConfig+0xe6>
 80067d0:	7cfb      	ldrb	r3, [r7, #19]
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	d10b      	bne.n	80067ee <HAL_RCCEx_PeriphCLKConfig+0x12a>
 80067d6:	4b07      	ldr	r3, [pc, #28]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80067d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80067dc:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80067e4:	4903      	ldr	r1, [pc, #12]	@ (80067f4 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80067e6:	4313      	orrs	r3, r2
 80067e8:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80067ec:	e008      	b.n	8006800 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80067ee:	7cfb      	ldrb	r3, [r7, #19]
 80067f0:	74bb      	strb	r3, [r7, #18]
 80067f2:	e005      	b.n	8006800 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80067f4:	40021000 	.word	0x40021000
 80067f8:	40007000 	.word	0x40007000
 80067fc:	7cfb      	ldrb	r3, [r7, #19]
 80067fe:	74bb      	strb	r3, [r7, #18]
 8006800:	7c7b      	ldrb	r3, [r7, #17]
 8006802:	2b01      	cmp	r3, #1
 8006804:	d105      	bne.n	8006812 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8006806:	4ba6      	ldr	r3, [pc, #664]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006808:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800680a:	4aa5      	ldr	r2, [pc, #660]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800680c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006810:	6593      	str	r3, [r2, #88]	@ 0x58
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	681b      	ldr	r3, [r3, #0]
 8006816:	f003 0301 	and.w	r3, r3, #1
 800681a:	2b00      	cmp	r3, #0
 800681c:	d00a      	beq.n	8006834 <HAL_RCCEx_PeriphCLKConfig+0x170>
 800681e:	4ba0      	ldr	r3, [pc, #640]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006820:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006824:	f023 0203 	bic.w	r2, r3, #3
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	685b      	ldr	r3, [r3, #4]
 800682c:	499c      	ldr	r1, [pc, #624]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800682e:	4313      	orrs	r3, r2
 8006830:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	f003 0302 	and.w	r3, r3, #2
 800683c:	2b00      	cmp	r3, #0
 800683e:	d00a      	beq.n	8006856 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8006840:	4b97      	ldr	r3, [pc, #604]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006842:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006846:	f023 020c 	bic.w	r2, r3, #12
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	689b      	ldr	r3, [r3, #8]
 800684e:	4994      	ldr	r1, [pc, #592]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006850:	4313      	orrs	r3, r2
 8006852:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	f003 0304 	and.w	r3, r3, #4
 800685e:	2b00      	cmp	r3, #0
 8006860:	d00a      	beq.n	8006878 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8006862:	4b8f      	ldr	r3, [pc, #572]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006864:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006868:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	68db      	ldr	r3, [r3, #12]
 8006870:	498b      	ldr	r1, [pc, #556]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006872:	4313      	orrs	r3, r2
 8006874:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	f003 0308 	and.w	r3, r3, #8
 8006880:	2b00      	cmp	r3, #0
 8006882:	d00a      	beq.n	800689a <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8006884:	4b86      	ldr	r3, [pc, #536]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006886:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800688a:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	691b      	ldr	r3, [r3, #16]
 8006892:	4983      	ldr	r1, [pc, #524]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006894:	4313      	orrs	r3, r2
 8006896:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	f003 0320 	and.w	r3, r3, #32
 80068a2:	2b00      	cmp	r3, #0
 80068a4:	d00a      	beq.n	80068bc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80068a6:	4b7e      	ldr	r3, [pc, #504]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80068ac:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	695b      	ldr	r3, [r3, #20]
 80068b4:	497a      	ldr	r1, [pc, #488]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068b6:	4313      	orrs	r3, r2
 80068b8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	681b      	ldr	r3, [r3, #0]
 80068c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80068c4:	2b00      	cmp	r3, #0
 80068c6:	d00a      	beq.n	80068de <HAL_RCCEx_PeriphCLKConfig+0x21a>
 80068c8:	4b75      	ldr	r3, [pc, #468]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80068ce:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	699b      	ldr	r3, [r3, #24]
 80068d6:	4972      	ldr	r1, [pc, #456]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068d8:	4313      	orrs	r3, r2
 80068da:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80068e6:	2b00      	cmp	r3, #0
 80068e8:	d00a      	beq.n	8006900 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80068ea:	4b6d      	ldr	r3, [pc, #436]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80068f0:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	69db      	ldr	r3, [r3, #28]
 80068f8:	4969      	ldr	r1, [pc, #420]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80068fa:	4313      	orrs	r3, r2
 80068fc:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	681b      	ldr	r3, [r3, #0]
 8006904:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006908:	2b00      	cmp	r3, #0
 800690a:	d00a      	beq.n	8006922 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 800690c:	4b64      	ldr	r3, [pc, #400]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800690e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006912:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	6a1b      	ldr	r3, [r3, #32]
 800691a:	4961      	ldr	r1, [pc, #388]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800691c:	4313      	orrs	r3, r2
 800691e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800692a:	2b00      	cmp	r3, #0
 800692c:	d00a      	beq.n	8006944 <HAL_RCCEx_PeriphCLKConfig+0x280>
 800692e:	4b5c      	ldr	r3, [pc, #368]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006930:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006934:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800693c:	4958      	ldr	r1, [pc, #352]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800693e:	4313      	orrs	r3, r2
 8006940:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800694c:	2b00      	cmp	r3, #0
 800694e:	d015      	beq.n	800697c <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8006950:	4b53      	ldr	r3, [pc, #332]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006952:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006956:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800695e:	4950      	ldr	r1, [pc, #320]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006960:	4313      	orrs	r3, r2
 8006962:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800696a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800696e:	d105      	bne.n	800697c <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8006970:	4b4b      	ldr	r3, [pc, #300]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006972:	68db      	ldr	r3, [r3, #12]
 8006974:	4a4a      	ldr	r2, [pc, #296]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006976:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800697a:	60d3      	str	r3, [r2, #12]
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	681b      	ldr	r3, [r3, #0]
 8006980:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006984:	2b00      	cmp	r3, #0
 8006986:	d015      	beq.n	80069b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8006988:	4b45      	ldr	r3, [pc, #276]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800698a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800698e:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006996:	4942      	ldr	r1, [pc, #264]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006998:	4313      	orrs	r3, r2
 800699a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80069a2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80069a6:	d105      	bne.n	80069b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80069a8:	4b3d      	ldr	r3, [pc, #244]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069aa:	68db      	ldr	r3, [r3, #12]
 80069ac:	4a3c      	ldr	r2, [pc, #240]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069ae:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80069b2:	60d3      	str	r3, [r2, #12]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80069bc:	2b00      	cmp	r3, #0
 80069be:	d015      	beq.n	80069ec <HAL_RCCEx_PeriphCLKConfig+0x328>
 80069c0:	4b37      	ldr	r3, [pc, #220]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80069c6:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80069ce:	4934      	ldr	r1, [pc, #208]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069d0:	4313      	orrs	r3, r2
 80069d2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80069da:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80069de:	d105      	bne.n	80069ec <HAL_RCCEx_PeriphCLKConfig+0x328>
 80069e0:	4b2f      	ldr	r3, [pc, #188]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069e2:	68db      	ldr	r3, [r3, #12]
 80069e4:	4a2e      	ldr	r2, [pc, #184]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069e6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80069ea:	60d3      	str	r3, [r2, #12]
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80069f4:	2b00      	cmp	r3, #0
 80069f6:	d015      	beq.n	8006a24 <HAL_RCCEx_PeriphCLKConfig+0x360>
 80069f8:	4b29      	ldr	r3, [pc, #164]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80069fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80069fe:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a06:	4926      	ldr	r1, [pc, #152]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a08:	4313      	orrs	r3, r2
 8006a0a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a12:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006a16:	d105      	bne.n	8006a24 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8006a18:	4b21      	ldr	r3, [pc, #132]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a1a:	68db      	ldr	r3, [r3, #12]
 8006a1c:	4a20      	ldr	r2, [pc, #128]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a1e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006a22:	60d3      	str	r3, [r2, #12]
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006a2c:	2b00      	cmp	r3, #0
 8006a2e:	d015      	beq.n	8006a5c <HAL_RCCEx_PeriphCLKConfig+0x398>
 8006a30:	4b1b      	ldr	r3, [pc, #108]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a32:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006a36:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a3e:	4918      	ldr	r1, [pc, #96]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a40:	4313      	orrs	r3, r2
 8006a42:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006a46:	687b      	ldr	r3, [r7, #4]
 8006a48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a4a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006a4e:	d105      	bne.n	8006a5c <HAL_RCCEx_PeriphCLKConfig+0x398>
 8006a50:	4b13      	ldr	r3, [pc, #76]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a52:	68db      	ldr	r3, [r3, #12]
 8006a54:	4a12      	ldr	r2, [pc, #72]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a56:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006a5a:	60d3      	str	r3, [r2, #12]
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006a64:	2b00      	cmp	r3, #0
 8006a66:	d015      	beq.n	8006a94 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8006a68:	4b0d      	ldr	r3, [pc, #52]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a6a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006a6e:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006a76:	490a      	ldr	r1, [pc, #40]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a78:	4313      	orrs	r3, r2
 8006a7a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006a82:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006a86:	d105      	bne.n	8006a94 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8006a88:	4b05      	ldr	r3, [pc, #20]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a8a:	68db      	ldr	r3, [r3, #12]
 8006a8c:	4a04      	ldr	r2, [pc, #16]	@ (8006aa0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8006a8e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006a92:	60d3      	str	r3, [r2, #12]
 8006a94:	7cbb      	ldrb	r3, [r7, #18]
 8006a96:	4618      	mov	r0, r3
 8006a98:	3718      	adds	r7, #24
 8006a9a:	46bd      	mov	sp, r7
 8006a9c:	bd80      	pop	{r7, pc}
 8006a9e:	bf00      	nop
 8006aa0:	40021000 	.word	0x40021000

08006aa4 <HAL_TIM_Base_Init>:
 8006aa4:	b580      	push	{r7, lr}
 8006aa6:	b082      	sub	sp, #8
 8006aa8:	af00      	add	r7, sp, #0
 8006aaa:	6078      	str	r0, [r7, #4]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d101      	bne.n	8006ab6 <HAL_TIM_Base_Init+0x12>
 8006ab2:	2301      	movs	r3, #1
 8006ab4:	e049      	b.n	8006b4a <HAL_TIM_Base_Init+0xa6>
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006abc:	b2db      	uxtb	r3, r3
 8006abe:	2b00      	cmp	r3, #0
 8006ac0:	d106      	bne.n	8006ad0 <HAL_TIM_Base_Init+0x2c>
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	2200      	movs	r2, #0
 8006ac6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006aca:	6878      	ldr	r0, [r7, #4]
 8006acc:	f7fc f9c4 	bl	8002e58 <HAL_TIM_Base_MspInit>
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	2202      	movs	r2, #2
 8006ad4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681a      	ldr	r2, [r3, #0]
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	3304      	adds	r3, #4
 8006ae0:	4619      	mov	r1, r3
 8006ae2:	4610      	mov	r0, r2
 8006ae4:	f000 fb12 	bl	800710c <TIM_Base_SetConfig>
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	2201      	movs	r2, #1
 8006aec:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	2201      	movs	r2, #1
 8006af4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	2201      	movs	r2, #1
 8006afc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	2201      	movs	r2, #1
 8006b04:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	2201      	movs	r2, #1
 8006b0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	2201      	movs	r2, #1
 8006b14:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	2201      	movs	r2, #1
 8006b1c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	2201      	movs	r2, #1
 8006b24:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	2201      	movs	r2, #1
 8006b2c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	2201      	movs	r2, #1
 8006b34:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	2201      	movs	r2, #1
 8006b3c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	2201      	movs	r2, #1
 8006b44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006b48:	2300      	movs	r3, #0
 8006b4a:	4618      	mov	r0, r3
 8006b4c:	3708      	adds	r7, #8
 8006b4e:	46bd      	mov	sp, r7
 8006b50:	bd80      	pop	{r7, pc}
	...

08006b54 <HAL_TIM_Base_Start_IT>:
 8006b54:	b480      	push	{r7}
 8006b56:	b085      	sub	sp, #20
 8006b58:	af00      	add	r7, sp, #0
 8006b5a:	6078      	str	r0, [r7, #4]
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b62:	b2db      	uxtb	r3, r3
 8006b64:	2b01      	cmp	r3, #1
 8006b66:	d001      	beq.n	8006b6c <HAL_TIM_Base_Start_IT+0x18>
 8006b68:	2301      	movs	r3, #1
 8006b6a:	e04a      	b.n	8006c02 <HAL_TIM_Base_Start_IT+0xae>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	2202      	movs	r2, #2
 8006b70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	68da      	ldr	r2, [r3, #12]
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	f042 0201 	orr.w	r2, r2, #1
 8006b82:	60da      	str	r2, [r3, #12]
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	4a21      	ldr	r2, [pc, #132]	@ (8006c10 <HAL_TIM_Base_Start_IT+0xbc>)
 8006b8a:	4293      	cmp	r3, r2
 8006b8c:	d018      	beq.n	8006bc0 <HAL_TIM_Base_Start_IT+0x6c>
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006b96:	d013      	beq.n	8006bc0 <HAL_TIM_Base_Start_IT+0x6c>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	4a1d      	ldr	r2, [pc, #116]	@ (8006c14 <HAL_TIM_Base_Start_IT+0xc0>)
 8006b9e:	4293      	cmp	r3, r2
 8006ba0:	d00e      	beq.n	8006bc0 <HAL_TIM_Base_Start_IT+0x6c>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	4a1c      	ldr	r2, [pc, #112]	@ (8006c18 <HAL_TIM_Base_Start_IT+0xc4>)
 8006ba8:	4293      	cmp	r3, r2
 8006baa:	d009      	beq.n	8006bc0 <HAL_TIM_Base_Start_IT+0x6c>
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	681b      	ldr	r3, [r3, #0]
 8006bb0:	4a1a      	ldr	r2, [pc, #104]	@ (8006c1c <HAL_TIM_Base_Start_IT+0xc8>)
 8006bb2:	4293      	cmp	r3, r2
 8006bb4:	d004      	beq.n	8006bc0 <HAL_TIM_Base_Start_IT+0x6c>
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	4a19      	ldr	r2, [pc, #100]	@ (8006c20 <HAL_TIM_Base_Start_IT+0xcc>)
 8006bbc:	4293      	cmp	r3, r2
 8006bbe:	d115      	bne.n	8006bec <HAL_TIM_Base_Start_IT+0x98>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	689a      	ldr	r2, [r3, #8]
 8006bc6:	4b17      	ldr	r3, [pc, #92]	@ (8006c24 <HAL_TIM_Base_Start_IT+0xd0>)
 8006bc8:	4013      	ands	r3, r2
 8006bca:	60fb      	str	r3, [r7, #12]
 8006bcc:	68fb      	ldr	r3, [r7, #12]
 8006bce:	2b06      	cmp	r3, #6
 8006bd0:	d015      	beq.n	8006bfe <HAL_TIM_Base_Start_IT+0xaa>
 8006bd2:	68fb      	ldr	r3, [r7, #12]
 8006bd4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006bd8:	d011      	beq.n	8006bfe <HAL_TIM_Base_Start_IT+0xaa>
 8006bda:	687b      	ldr	r3, [r7, #4]
 8006bdc:	681b      	ldr	r3, [r3, #0]
 8006bde:	681a      	ldr	r2, [r3, #0]
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	f042 0201 	orr.w	r2, r2, #1
 8006be8:	601a      	str	r2, [r3, #0]
 8006bea:	e008      	b.n	8006bfe <HAL_TIM_Base_Start_IT+0xaa>
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	681b      	ldr	r3, [r3, #0]
 8006bf0:	681a      	ldr	r2, [r3, #0]
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	f042 0201 	orr.w	r2, r2, #1
 8006bfa:	601a      	str	r2, [r3, #0]
 8006bfc:	e000      	b.n	8006c00 <HAL_TIM_Base_Start_IT+0xac>
 8006bfe:	bf00      	nop
 8006c00:	2300      	movs	r3, #0
 8006c02:	4618      	mov	r0, r3
 8006c04:	3714      	adds	r7, #20
 8006c06:	46bd      	mov	sp, r7
 8006c08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c0c:	4770      	bx	lr
 8006c0e:	bf00      	nop
 8006c10:	40012c00 	.word	0x40012c00
 8006c14:	40000400 	.word	0x40000400
 8006c18:	40000800 	.word	0x40000800
 8006c1c:	40013400 	.word	0x40013400
 8006c20:	40014000 	.word	0x40014000
 8006c24:	00010007 	.word	0x00010007

08006c28 <HAL_TIM_IRQHandler>:
 8006c28:	b580      	push	{r7, lr}
 8006c2a:	b084      	sub	sp, #16
 8006c2c:	af00      	add	r7, sp, #0
 8006c2e:	6078      	str	r0, [r7, #4]
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	68db      	ldr	r3, [r3, #12]
 8006c36:	60fb      	str	r3, [r7, #12]
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	691b      	ldr	r3, [r3, #16]
 8006c3e:	60bb      	str	r3, [r7, #8]
 8006c40:	68bb      	ldr	r3, [r7, #8]
 8006c42:	f003 0302 	and.w	r3, r3, #2
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	d020      	beq.n	8006c8c <HAL_TIM_IRQHandler+0x64>
 8006c4a:	68fb      	ldr	r3, [r7, #12]
 8006c4c:	f003 0302 	and.w	r3, r3, #2
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d01b      	beq.n	8006c8c <HAL_TIM_IRQHandler+0x64>
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	f06f 0202 	mvn.w	r2, #2
 8006c5c:	611a      	str	r2, [r3, #16]
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2201      	movs	r2, #1
 8006c62:	771a      	strb	r2, [r3, #28]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	699b      	ldr	r3, [r3, #24]
 8006c6a:	f003 0303 	and.w	r3, r3, #3
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	d003      	beq.n	8006c7a <HAL_TIM_IRQHandler+0x52>
 8006c72:	6878      	ldr	r0, [r7, #4]
 8006c74:	f000 fa2c 	bl	80070d0 <HAL_TIM_IC_CaptureCallback>
 8006c78:	e005      	b.n	8006c86 <HAL_TIM_IRQHandler+0x5e>
 8006c7a:	6878      	ldr	r0, [r7, #4]
 8006c7c:	f000 fa1e 	bl	80070bc <HAL_TIM_OC_DelayElapsedCallback>
 8006c80:	6878      	ldr	r0, [r7, #4]
 8006c82:	f000 fa2f 	bl	80070e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	2200      	movs	r2, #0
 8006c8a:	771a      	strb	r2, [r3, #28]
 8006c8c:	68bb      	ldr	r3, [r7, #8]
 8006c8e:	f003 0304 	and.w	r3, r3, #4
 8006c92:	2b00      	cmp	r3, #0
 8006c94:	d020      	beq.n	8006cd8 <HAL_TIM_IRQHandler+0xb0>
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	f003 0304 	and.w	r3, r3, #4
 8006c9c:	2b00      	cmp	r3, #0
 8006c9e:	d01b      	beq.n	8006cd8 <HAL_TIM_IRQHandler+0xb0>
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	f06f 0204 	mvn.w	r2, #4
 8006ca8:	611a      	str	r2, [r3, #16]
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	2202      	movs	r2, #2
 8006cae:	771a      	strb	r2, [r3, #28]
 8006cb0:	687b      	ldr	r3, [r7, #4]
 8006cb2:	681b      	ldr	r3, [r3, #0]
 8006cb4:	699b      	ldr	r3, [r3, #24]
 8006cb6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006cba:	2b00      	cmp	r3, #0
 8006cbc:	d003      	beq.n	8006cc6 <HAL_TIM_IRQHandler+0x9e>
 8006cbe:	6878      	ldr	r0, [r7, #4]
 8006cc0:	f000 fa06 	bl	80070d0 <HAL_TIM_IC_CaptureCallback>
 8006cc4:	e005      	b.n	8006cd2 <HAL_TIM_IRQHandler+0xaa>
 8006cc6:	6878      	ldr	r0, [r7, #4]
 8006cc8:	f000 f9f8 	bl	80070bc <HAL_TIM_OC_DelayElapsedCallback>
 8006ccc:	6878      	ldr	r0, [r7, #4]
 8006cce:	f000 fa09 	bl	80070e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	2200      	movs	r2, #0
 8006cd6:	771a      	strb	r2, [r3, #28]
 8006cd8:	68bb      	ldr	r3, [r7, #8]
 8006cda:	f003 0308 	and.w	r3, r3, #8
 8006cde:	2b00      	cmp	r3, #0
 8006ce0:	d020      	beq.n	8006d24 <HAL_TIM_IRQHandler+0xfc>
 8006ce2:	68fb      	ldr	r3, [r7, #12]
 8006ce4:	f003 0308 	and.w	r3, r3, #8
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	d01b      	beq.n	8006d24 <HAL_TIM_IRQHandler+0xfc>
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	f06f 0208 	mvn.w	r2, #8
 8006cf4:	611a      	str	r2, [r3, #16]
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	2204      	movs	r2, #4
 8006cfa:	771a      	strb	r2, [r3, #28]
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	69db      	ldr	r3, [r3, #28]
 8006d02:	f003 0303 	and.w	r3, r3, #3
 8006d06:	2b00      	cmp	r3, #0
 8006d08:	d003      	beq.n	8006d12 <HAL_TIM_IRQHandler+0xea>
 8006d0a:	6878      	ldr	r0, [r7, #4]
 8006d0c:	f000 f9e0 	bl	80070d0 <HAL_TIM_IC_CaptureCallback>
 8006d10:	e005      	b.n	8006d1e <HAL_TIM_IRQHandler+0xf6>
 8006d12:	6878      	ldr	r0, [r7, #4]
 8006d14:	f000 f9d2 	bl	80070bc <HAL_TIM_OC_DelayElapsedCallback>
 8006d18:	6878      	ldr	r0, [r7, #4]
 8006d1a:	f000 f9e3 	bl	80070e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	2200      	movs	r2, #0
 8006d22:	771a      	strb	r2, [r3, #28]
 8006d24:	68bb      	ldr	r3, [r7, #8]
 8006d26:	f003 0310 	and.w	r3, r3, #16
 8006d2a:	2b00      	cmp	r3, #0
 8006d2c:	d020      	beq.n	8006d70 <HAL_TIM_IRQHandler+0x148>
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	f003 0310 	and.w	r3, r3, #16
 8006d34:	2b00      	cmp	r3, #0
 8006d36:	d01b      	beq.n	8006d70 <HAL_TIM_IRQHandler+0x148>
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	f06f 0210 	mvn.w	r2, #16
 8006d40:	611a      	str	r2, [r3, #16]
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2208      	movs	r2, #8
 8006d46:	771a      	strb	r2, [r3, #28]
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	681b      	ldr	r3, [r3, #0]
 8006d4c:	69db      	ldr	r3, [r3, #28]
 8006d4e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d003      	beq.n	8006d5e <HAL_TIM_IRQHandler+0x136>
 8006d56:	6878      	ldr	r0, [r7, #4]
 8006d58:	f000 f9ba 	bl	80070d0 <HAL_TIM_IC_CaptureCallback>
 8006d5c:	e005      	b.n	8006d6a <HAL_TIM_IRQHandler+0x142>
 8006d5e:	6878      	ldr	r0, [r7, #4]
 8006d60:	f000 f9ac 	bl	80070bc <HAL_TIM_OC_DelayElapsedCallback>
 8006d64:	6878      	ldr	r0, [r7, #4]
 8006d66:	f000 f9bd 	bl	80070e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	2200      	movs	r2, #0
 8006d6e:	771a      	strb	r2, [r3, #28]
 8006d70:	68bb      	ldr	r3, [r7, #8]
 8006d72:	f003 0301 	and.w	r3, r3, #1
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	d00c      	beq.n	8006d94 <HAL_TIM_IRQHandler+0x16c>
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	f003 0301 	and.w	r3, r3, #1
 8006d80:	2b00      	cmp	r3, #0
 8006d82:	d007      	beq.n	8006d94 <HAL_TIM_IRQHandler+0x16c>
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	f06f 0201 	mvn.w	r2, #1
 8006d8c:	611a      	str	r2, [r3, #16]
 8006d8e:	6878      	ldr	r0, [r7, #4]
 8006d90:	f7fb fe28 	bl	80029e4 <HAL_TIM_PeriodElapsedCallback>
 8006d94:	68bb      	ldr	r3, [r7, #8]
 8006d96:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d104      	bne.n	8006da8 <HAL_TIM_IRQHandler+0x180>
 8006d9e:	68bb      	ldr	r3, [r7, #8]
 8006da0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d00c      	beq.n	8006dc2 <HAL_TIM_IRQHandler+0x19a>
 8006da8:	68fb      	ldr	r3, [r7, #12]
 8006daa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006dae:	2b00      	cmp	r3, #0
 8006db0:	d007      	beq.n	8006dc2 <HAL_TIM_IRQHandler+0x19a>
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8006dba:	611a      	str	r2, [r3, #16]
 8006dbc:	6878      	ldr	r0, [r7, #4]
 8006dbe:	f000 fb69 	bl	8007494 <HAL_TIMEx_BreakCallback>
 8006dc2:	68bb      	ldr	r3, [r7, #8]
 8006dc4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d00c      	beq.n	8006de6 <HAL_TIM_IRQHandler+0x1be>
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	d007      	beq.n	8006de6 <HAL_TIM_IRQHandler+0x1be>
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8006dde:	611a      	str	r2, [r3, #16]
 8006de0:	6878      	ldr	r0, [r7, #4]
 8006de2:	f000 fb61 	bl	80074a8 <HAL_TIMEx_Break2Callback>
 8006de6:	68bb      	ldr	r3, [r7, #8]
 8006de8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006dec:	2b00      	cmp	r3, #0
 8006dee:	d00c      	beq.n	8006e0a <HAL_TIM_IRQHandler+0x1e2>
 8006df0:	68fb      	ldr	r3, [r7, #12]
 8006df2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d007      	beq.n	8006e0a <HAL_TIM_IRQHandler+0x1e2>
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006e02:	611a      	str	r2, [r3, #16]
 8006e04:	6878      	ldr	r0, [r7, #4]
 8006e06:	f000 f977 	bl	80070f8 <HAL_TIM_TriggerCallback>
 8006e0a:	68bb      	ldr	r3, [r7, #8]
 8006e0c:	f003 0320 	and.w	r3, r3, #32
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d00c      	beq.n	8006e2e <HAL_TIM_IRQHandler+0x206>
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	f003 0320 	and.w	r3, r3, #32
 8006e1a:	2b00      	cmp	r3, #0
 8006e1c:	d007      	beq.n	8006e2e <HAL_TIM_IRQHandler+0x206>
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	681b      	ldr	r3, [r3, #0]
 8006e22:	f06f 0220 	mvn.w	r2, #32
 8006e26:	611a      	str	r2, [r3, #16]
 8006e28:	6878      	ldr	r0, [r7, #4]
 8006e2a:	f000 fb29 	bl	8007480 <HAL_TIMEx_CommutCallback>
 8006e2e:	68bb      	ldr	r3, [r7, #8]
 8006e30:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006e34:	2b00      	cmp	r3, #0
 8006e36:	d00c      	beq.n	8006e52 <HAL_TIM_IRQHandler+0x22a>
 8006e38:	68fb      	ldr	r3, [r7, #12]
 8006e3a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006e3e:	2b00      	cmp	r3, #0
 8006e40:	d007      	beq.n	8006e52 <HAL_TIM_IRQHandler+0x22a>
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8006e4a:	611a      	str	r2, [r3, #16]
 8006e4c:	6878      	ldr	r0, [r7, #4]
 8006e4e:	f000 fb35 	bl	80074bc <HAL_TIMEx_EncoderIndexCallback>
 8006e52:	68bb      	ldr	r3, [r7, #8]
 8006e54:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006e58:	2b00      	cmp	r3, #0
 8006e5a:	d00c      	beq.n	8006e76 <HAL_TIM_IRQHandler+0x24e>
 8006e5c:	68fb      	ldr	r3, [r7, #12]
 8006e5e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d007      	beq.n	8006e76 <HAL_TIM_IRQHandler+0x24e>
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	681b      	ldr	r3, [r3, #0]
 8006e6a:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8006e6e:	611a      	str	r2, [r3, #16]
 8006e70:	6878      	ldr	r0, [r7, #4]
 8006e72:	f000 fb2d 	bl	80074d0 <HAL_TIMEx_DirectionChangeCallback>
 8006e76:	68bb      	ldr	r3, [r7, #8]
 8006e78:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006e7c:	2b00      	cmp	r3, #0
 8006e7e:	d00c      	beq.n	8006e9a <HAL_TIM_IRQHandler+0x272>
 8006e80:	68fb      	ldr	r3, [r7, #12]
 8006e82:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006e86:	2b00      	cmp	r3, #0
 8006e88:	d007      	beq.n	8006e9a <HAL_TIM_IRQHandler+0x272>
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8006e92:	611a      	str	r2, [r3, #16]
 8006e94:	6878      	ldr	r0, [r7, #4]
 8006e96:	f000 fb25 	bl	80074e4 <HAL_TIMEx_IndexErrorCallback>
 8006e9a:	68bb      	ldr	r3, [r7, #8]
 8006e9c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006ea0:	2b00      	cmp	r3, #0
 8006ea2:	d00c      	beq.n	8006ebe <HAL_TIM_IRQHandler+0x296>
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d007      	beq.n	8006ebe <HAL_TIM_IRQHandler+0x296>
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	681b      	ldr	r3, [r3, #0]
 8006eb2:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8006eb6:	611a      	str	r2, [r3, #16]
 8006eb8:	6878      	ldr	r0, [r7, #4]
 8006eba:	f000 fb1d 	bl	80074f8 <HAL_TIMEx_TransitionErrorCallback>
 8006ebe:	bf00      	nop
 8006ec0:	3710      	adds	r7, #16
 8006ec2:	46bd      	mov	sp, r7
 8006ec4:	bd80      	pop	{r7, pc}
	...

08006ec8 <HAL_TIM_ConfigClockSource>:
 8006ec8:	b580      	push	{r7, lr}
 8006eca:	b084      	sub	sp, #16
 8006ecc:	af00      	add	r7, sp, #0
 8006ece:	6078      	str	r0, [r7, #4]
 8006ed0:	6039      	str	r1, [r7, #0]
 8006ed2:	2300      	movs	r3, #0
 8006ed4:	73fb      	strb	r3, [r7, #15]
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006edc:	2b01      	cmp	r3, #1
 8006ede:	d101      	bne.n	8006ee4 <HAL_TIM_ConfigClockSource+0x1c>
 8006ee0:	2302      	movs	r3, #2
 8006ee2:	e0de      	b.n	80070a2 <HAL_TIM_ConfigClockSource+0x1da>
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	2201      	movs	r2, #1
 8006ee8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	2202      	movs	r2, #2
 8006ef0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	689b      	ldr	r3, [r3, #8]
 8006efa:	60bb      	str	r3, [r7, #8]
 8006efc:	68bb      	ldr	r3, [r7, #8]
 8006efe:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 8006f02:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8006f06:	60bb      	str	r3, [r7, #8]
 8006f08:	68bb      	ldr	r3, [r7, #8]
 8006f0a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006f0e:	60bb      	str	r3, [r7, #8]
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	68ba      	ldr	r2, [r7, #8]
 8006f16:	609a      	str	r2, [r3, #8]
 8006f18:	683b      	ldr	r3, [r7, #0]
 8006f1a:	681b      	ldr	r3, [r3, #0]
 8006f1c:	4a63      	ldr	r2, [pc, #396]	@ (80070ac <HAL_TIM_ConfigClockSource+0x1e4>)
 8006f1e:	4293      	cmp	r3, r2
 8006f20:	f000 80a9 	beq.w	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006f24:	4a61      	ldr	r2, [pc, #388]	@ (80070ac <HAL_TIM_ConfigClockSource+0x1e4>)
 8006f26:	4293      	cmp	r3, r2
 8006f28:	f200 80ae 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f2c:	4a60      	ldr	r2, [pc, #384]	@ (80070b0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8006f2e:	4293      	cmp	r3, r2
 8006f30:	f000 80a1 	beq.w	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006f34:	4a5e      	ldr	r2, [pc, #376]	@ (80070b0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8006f36:	4293      	cmp	r3, r2
 8006f38:	f200 80a6 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f3c:	4a5d      	ldr	r2, [pc, #372]	@ (80070b4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8006f3e:	4293      	cmp	r3, r2
 8006f40:	f000 8099 	beq.w	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006f44:	4a5b      	ldr	r2, [pc, #364]	@ (80070b4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8006f46:	4293      	cmp	r3, r2
 8006f48:	f200 809e 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f4c:	4a5a      	ldr	r2, [pc, #360]	@ (80070b8 <HAL_TIM_ConfigClockSource+0x1f0>)
 8006f4e:	4293      	cmp	r3, r2
 8006f50:	f000 8091 	beq.w	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006f54:	4a58      	ldr	r2, [pc, #352]	@ (80070b8 <HAL_TIM_ConfigClockSource+0x1f0>)
 8006f56:	4293      	cmp	r3, r2
 8006f58:	f200 8096 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f5c:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006f60:	f000 8089 	beq.w	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006f64:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8006f68:	f200 808e 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f6c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006f70:	d03e      	beq.n	8006ff0 <HAL_TIM_ConfigClockSource+0x128>
 8006f72:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006f76:	f200 8087 	bhi.w	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f7a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006f7e:	f000 8086 	beq.w	800708e <HAL_TIM_ConfigClockSource+0x1c6>
 8006f82:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006f86:	d87f      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f88:	2b70      	cmp	r3, #112	@ 0x70
 8006f8a:	d01a      	beq.n	8006fc2 <HAL_TIM_ConfigClockSource+0xfa>
 8006f8c:	2b70      	cmp	r3, #112	@ 0x70
 8006f8e:	d87b      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f90:	2b60      	cmp	r3, #96	@ 0x60
 8006f92:	d050      	beq.n	8007036 <HAL_TIM_ConfigClockSource+0x16e>
 8006f94:	2b60      	cmp	r3, #96	@ 0x60
 8006f96:	d877      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006f98:	2b50      	cmp	r3, #80	@ 0x50
 8006f9a:	d03c      	beq.n	8007016 <HAL_TIM_ConfigClockSource+0x14e>
 8006f9c:	2b50      	cmp	r3, #80	@ 0x50
 8006f9e:	d873      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006fa0:	2b40      	cmp	r3, #64	@ 0x40
 8006fa2:	d058      	beq.n	8007056 <HAL_TIM_ConfigClockSource+0x18e>
 8006fa4:	2b40      	cmp	r3, #64	@ 0x40
 8006fa6:	d86f      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006fa8:	2b30      	cmp	r3, #48	@ 0x30
 8006faa:	d064      	beq.n	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006fac:	2b30      	cmp	r3, #48	@ 0x30
 8006fae:	d86b      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006fb0:	2b20      	cmp	r3, #32
 8006fb2:	d060      	beq.n	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006fb4:	2b20      	cmp	r3, #32
 8006fb6:	d867      	bhi.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d05c      	beq.n	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006fbc:	2b10      	cmp	r3, #16
 8006fbe:	d05a      	beq.n	8007076 <HAL_TIM_ConfigClockSource+0x1ae>
 8006fc0:	e062      	b.n	8007088 <HAL_TIM_ConfigClockSource+0x1c0>
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	6818      	ldr	r0, [r3, #0]
 8006fc6:	683b      	ldr	r3, [r7, #0]
 8006fc8:	6899      	ldr	r1, [r3, #8]
 8006fca:	683b      	ldr	r3, [r7, #0]
 8006fcc:	685a      	ldr	r2, [r3, #4]
 8006fce:	683b      	ldr	r3, [r7, #0]
 8006fd0:	68db      	ldr	r3, [r3, #12]
 8006fd2:	f000 f9b3 	bl	800733c <TIM_ETR_SetConfig>
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	689b      	ldr	r3, [r3, #8]
 8006fdc:	60bb      	str	r3, [r7, #8]
 8006fde:	68bb      	ldr	r3, [r7, #8]
 8006fe0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8006fe4:	60bb      	str	r3, [r7, #8]
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	68ba      	ldr	r2, [r7, #8]
 8006fec:	609a      	str	r2, [r3, #8]
 8006fee:	e04f      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	6818      	ldr	r0, [r3, #0]
 8006ff4:	683b      	ldr	r3, [r7, #0]
 8006ff6:	6899      	ldr	r1, [r3, #8]
 8006ff8:	683b      	ldr	r3, [r7, #0]
 8006ffa:	685a      	ldr	r2, [r3, #4]
 8006ffc:	683b      	ldr	r3, [r7, #0]
 8006ffe:	68db      	ldr	r3, [r3, #12]
 8007000:	f000 f99c 	bl	800733c <TIM_ETR_SetConfig>
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	689a      	ldr	r2, [r3, #8]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	681b      	ldr	r3, [r3, #0]
 800700e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007012:	609a      	str	r2, [r3, #8]
 8007014:	e03c      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	6818      	ldr	r0, [r3, #0]
 800701a:	683b      	ldr	r3, [r7, #0]
 800701c:	6859      	ldr	r1, [r3, #4]
 800701e:	683b      	ldr	r3, [r7, #0]
 8007020:	68db      	ldr	r3, [r3, #12]
 8007022:	461a      	mov	r2, r3
 8007024:	f000 f90e 	bl	8007244 <TIM_TI1_ConfigInputStage>
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	2150      	movs	r1, #80	@ 0x50
 800702e:	4618      	mov	r0, r3
 8007030:	f000 f967 	bl	8007302 <TIM_ITRx_SetConfig>
 8007034:	e02c      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	6818      	ldr	r0, [r3, #0]
 800703a:	683b      	ldr	r3, [r7, #0]
 800703c:	6859      	ldr	r1, [r3, #4]
 800703e:	683b      	ldr	r3, [r7, #0]
 8007040:	68db      	ldr	r3, [r3, #12]
 8007042:	461a      	mov	r2, r3
 8007044:	f000 f92d 	bl	80072a2 <TIM_TI2_ConfigInputStage>
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	2160      	movs	r1, #96	@ 0x60
 800704e:	4618      	mov	r0, r3
 8007050:	f000 f957 	bl	8007302 <TIM_ITRx_SetConfig>
 8007054:	e01c      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	6818      	ldr	r0, [r3, #0]
 800705a:	683b      	ldr	r3, [r7, #0]
 800705c:	6859      	ldr	r1, [r3, #4]
 800705e:	683b      	ldr	r3, [r7, #0]
 8007060:	68db      	ldr	r3, [r3, #12]
 8007062:	461a      	mov	r2, r3
 8007064:	f000 f8ee 	bl	8007244 <TIM_TI1_ConfigInputStage>
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	2140      	movs	r1, #64	@ 0x40
 800706e:	4618      	mov	r0, r3
 8007070:	f000 f947 	bl	8007302 <TIM_ITRx_SetConfig>
 8007074:	e00c      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	681a      	ldr	r2, [r3, #0]
 800707a:	683b      	ldr	r3, [r7, #0]
 800707c:	681b      	ldr	r3, [r3, #0]
 800707e:	4619      	mov	r1, r3
 8007080:	4610      	mov	r0, r2
 8007082:	f000 f93e 	bl	8007302 <TIM_ITRx_SetConfig>
 8007086:	e003      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 8007088:	2301      	movs	r3, #1
 800708a:	73fb      	strb	r3, [r7, #15]
 800708c:	e000      	b.n	8007090 <HAL_TIM_ConfigClockSource+0x1c8>
 800708e:	bf00      	nop
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	2201      	movs	r2, #1
 8007094:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	2200      	movs	r2, #0
 800709c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80070a0:	7bfb      	ldrb	r3, [r7, #15]
 80070a2:	4618      	mov	r0, r3
 80070a4:	3710      	adds	r7, #16
 80070a6:	46bd      	mov	sp, r7
 80070a8:	bd80      	pop	{r7, pc}
 80070aa:	bf00      	nop
 80070ac:	00100070 	.word	0x00100070
 80070b0:	00100040 	.word	0x00100040
 80070b4:	00100030 	.word	0x00100030
 80070b8:	00100020 	.word	0x00100020

080070bc <HAL_TIM_OC_DelayElapsedCallback>:
 80070bc:	b480      	push	{r7}
 80070be:	b083      	sub	sp, #12
 80070c0:	af00      	add	r7, sp, #0
 80070c2:	6078      	str	r0, [r7, #4]
 80070c4:	bf00      	nop
 80070c6:	370c      	adds	r7, #12
 80070c8:	46bd      	mov	sp, r7
 80070ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ce:	4770      	bx	lr

080070d0 <HAL_TIM_IC_CaptureCallback>:
 80070d0:	b480      	push	{r7}
 80070d2:	b083      	sub	sp, #12
 80070d4:	af00      	add	r7, sp, #0
 80070d6:	6078      	str	r0, [r7, #4]
 80070d8:	bf00      	nop
 80070da:	370c      	adds	r7, #12
 80070dc:	46bd      	mov	sp, r7
 80070de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070e2:	4770      	bx	lr

080070e4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80070e4:	b480      	push	{r7}
 80070e6:	b083      	sub	sp, #12
 80070e8:	af00      	add	r7, sp, #0
 80070ea:	6078      	str	r0, [r7, #4]
 80070ec:	bf00      	nop
 80070ee:	370c      	adds	r7, #12
 80070f0:	46bd      	mov	sp, r7
 80070f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070f6:	4770      	bx	lr

080070f8 <HAL_TIM_TriggerCallback>:
 80070f8:	b480      	push	{r7}
 80070fa:	b083      	sub	sp, #12
 80070fc:	af00      	add	r7, sp, #0
 80070fe:	6078      	str	r0, [r7, #4]
 8007100:	bf00      	nop
 8007102:	370c      	adds	r7, #12
 8007104:	46bd      	mov	sp, r7
 8007106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800710a:	4770      	bx	lr

0800710c <TIM_Base_SetConfig>:
 800710c:	b480      	push	{r7}
 800710e:	b085      	sub	sp, #20
 8007110:	af00      	add	r7, sp, #0
 8007112:	6078      	str	r0, [r7, #4]
 8007114:	6039      	str	r1, [r7, #0]
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	60fb      	str	r3, [r7, #12]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	4a42      	ldr	r2, [pc, #264]	@ (8007228 <TIM_Base_SetConfig+0x11c>)
 8007120:	4293      	cmp	r3, r2
 8007122:	d00f      	beq.n	8007144 <TIM_Base_SetConfig+0x38>
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800712a:	d00b      	beq.n	8007144 <TIM_Base_SetConfig+0x38>
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	4a3f      	ldr	r2, [pc, #252]	@ (800722c <TIM_Base_SetConfig+0x120>)
 8007130:	4293      	cmp	r3, r2
 8007132:	d007      	beq.n	8007144 <TIM_Base_SetConfig+0x38>
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	4a3e      	ldr	r2, [pc, #248]	@ (8007230 <TIM_Base_SetConfig+0x124>)
 8007138:	4293      	cmp	r3, r2
 800713a:	d003      	beq.n	8007144 <TIM_Base_SetConfig+0x38>
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	4a3d      	ldr	r2, [pc, #244]	@ (8007234 <TIM_Base_SetConfig+0x128>)
 8007140:	4293      	cmp	r3, r2
 8007142:	d108      	bne.n	8007156 <TIM_Base_SetConfig+0x4a>
 8007144:	68fb      	ldr	r3, [r7, #12]
 8007146:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800714a:	60fb      	str	r3, [r7, #12]
 800714c:	683b      	ldr	r3, [r7, #0]
 800714e:	685b      	ldr	r3, [r3, #4]
 8007150:	68fa      	ldr	r2, [r7, #12]
 8007152:	4313      	orrs	r3, r2
 8007154:	60fb      	str	r3, [r7, #12]
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	4a33      	ldr	r2, [pc, #204]	@ (8007228 <TIM_Base_SetConfig+0x11c>)
 800715a:	4293      	cmp	r3, r2
 800715c:	d01b      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007164:	d017      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	4a30      	ldr	r2, [pc, #192]	@ (800722c <TIM_Base_SetConfig+0x120>)
 800716a:	4293      	cmp	r3, r2
 800716c:	d013      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	4a2f      	ldr	r2, [pc, #188]	@ (8007230 <TIM_Base_SetConfig+0x124>)
 8007172:	4293      	cmp	r3, r2
 8007174:	d00f      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	4a2e      	ldr	r2, [pc, #184]	@ (8007234 <TIM_Base_SetConfig+0x128>)
 800717a:	4293      	cmp	r3, r2
 800717c:	d00b      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	4a2d      	ldr	r2, [pc, #180]	@ (8007238 <TIM_Base_SetConfig+0x12c>)
 8007182:	4293      	cmp	r3, r2
 8007184:	d007      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	4a2c      	ldr	r2, [pc, #176]	@ (800723c <TIM_Base_SetConfig+0x130>)
 800718a:	4293      	cmp	r3, r2
 800718c:	d003      	beq.n	8007196 <TIM_Base_SetConfig+0x8a>
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	4a2b      	ldr	r2, [pc, #172]	@ (8007240 <TIM_Base_SetConfig+0x134>)
 8007192:	4293      	cmp	r3, r2
 8007194:	d108      	bne.n	80071a8 <TIM_Base_SetConfig+0x9c>
 8007196:	68fb      	ldr	r3, [r7, #12]
 8007198:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800719c:	60fb      	str	r3, [r7, #12]
 800719e:	683b      	ldr	r3, [r7, #0]
 80071a0:	68db      	ldr	r3, [r3, #12]
 80071a2:	68fa      	ldr	r2, [r7, #12]
 80071a4:	4313      	orrs	r3, r2
 80071a6:	60fb      	str	r3, [r7, #12]
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80071ae:	683b      	ldr	r3, [r7, #0]
 80071b0:	695b      	ldr	r3, [r3, #20]
 80071b2:	4313      	orrs	r3, r2
 80071b4:	60fb      	str	r3, [r7, #12]
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	68fa      	ldr	r2, [r7, #12]
 80071ba:	601a      	str	r2, [r3, #0]
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	689a      	ldr	r2, [r3, #8]
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80071c4:	683b      	ldr	r3, [r7, #0]
 80071c6:	681a      	ldr	r2, [r3, #0]
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	629a      	str	r2, [r3, #40]	@ 0x28
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	4a16      	ldr	r2, [pc, #88]	@ (8007228 <TIM_Base_SetConfig+0x11c>)
 80071d0:	4293      	cmp	r3, r2
 80071d2:	d00f      	beq.n	80071f4 <TIM_Base_SetConfig+0xe8>
 80071d4:	687b      	ldr	r3, [r7, #4]
 80071d6:	4a17      	ldr	r2, [pc, #92]	@ (8007234 <TIM_Base_SetConfig+0x128>)
 80071d8:	4293      	cmp	r3, r2
 80071da:	d00b      	beq.n	80071f4 <TIM_Base_SetConfig+0xe8>
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	4a16      	ldr	r2, [pc, #88]	@ (8007238 <TIM_Base_SetConfig+0x12c>)
 80071e0:	4293      	cmp	r3, r2
 80071e2:	d007      	beq.n	80071f4 <TIM_Base_SetConfig+0xe8>
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	4a15      	ldr	r2, [pc, #84]	@ (800723c <TIM_Base_SetConfig+0x130>)
 80071e8:	4293      	cmp	r3, r2
 80071ea:	d003      	beq.n	80071f4 <TIM_Base_SetConfig+0xe8>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	4a14      	ldr	r2, [pc, #80]	@ (8007240 <TIM_Base_SetConfig+0x134>)
 80071f0:	4293      	cmp	r3, r2
 80071f2:	d103      	bne.n	80071fc <TIM_Base_SetConfig+0xf0>
 80071f4:	683b      	ldr	r3, [r7, #0]
 80071f6:	691a      	ldr	r2, [r3, #16]
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	2201      	movs	r2, #1
 8007200:	615a      	str	r2, [r3, #20]
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	691b      	ldr	r3, [r3, #16]
 8007206:	f003 0301 	and.w	r3, r3, #1
 800720a:	2b01      	cmp	r3, #1
 800720c:	d105      	bne.n	800721a <TIM_Base_SetConfig+0x10e>
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	691b      	ldr	r3, [r3, #16]
 8007212:	f023 0201 	bic.w	r2, r3, #1
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	611a      	str	r2, [r3, #16]
 800721a:	bf00      	nop
 800721c:	3714      	adds	r7, #20
 800721e:	46bd      	mov	sp, r7
 8007220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007224:	4770      	bx	lr
 8007226:	bf00      	nop
 8007228:	40012c00 	.word	0x40012c00
 800722c:	40000400 	.word	0x40000400
 8007230:	40000800 	.word	0x40000800
 8007234:	40013400 	.word	0x40013400
 8007238:	40014000 	.word	0x40014000
 800723c:	40014400 	.word	0x40014400
 8007240:	40014800 	.word	0x40014800

08007244 <TIM_TI1_ConfigInputStage>:
 8007244:	b480      	push	{r7}
 8007246:	b087      	sub	sp, #28
 8007248:	af00      	add	r7, sp, #0
 800724a:	60f8      	str	r0, [r7, #12]
 800724c:	60b9      	str	r1, [r7, #8]
 800724e:	607a      	str	r2, [r7, #4]
 8007250:	68fb      	ldr	r3, [r7, #12]
 8007252:	6a1b      	ldr	r3, [r3, #32]
 8007254:	617b      	str	r3, [r7, #20]
 8007256:	68fb      	ldr	r3, [r7, #12]
 8007258:	6a1b      	ldr	r3, [r3, #32]
 800725a:	f023 0201 	bic.w	r2, r3, #1
 800725e:	68fb      	ldr	r3, [r7, #12]
 8007260:	621a      	str	r2, [r3, #32]
 8007262:	68fb      	ldr	r3, [r7, #12]
 8007264:	699b      	ldr	r3, [r3, #24]
 8007266:	613b      	str	r3, [r7, #16]
 8007268:	693b      	ldr	r3, [r7, #16]
 800726a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800726e:	613b      	str	r3, [r7, #16]
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	011b      	lsls	r3, r3, #4
 8007274:	693a      	ldr	r2, [r7, #16]
 8007276:	4313      	orrs	r3, r2
 8007278:	613b      	str	r3, [r7, #16]
 800727a:	697b      	ldr	r3, [r7, #20]
 800727c:	f023 030a 	bic.w	r3, r3, #10
 8007280:	617b      	str	r3, [r7, #20]
 8007282:	697a      	ldr	r2, [r7, #20]
 8007284:	68bb      	ldr	r3, [r7, #8]
 8007286:	4313      	orrs	r3, r2
 8007288:	617b      	str	r3, [r7, #20]
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	693a      	ldr	r2, [r7, #16]
 800728e:	619a      	str	r2, [r3, #24]
 8007290:	68fb      	ldr	r3, [r7, #12]
 8007292:	697a      	ldr	r2, [r7, #20]
 8007294:	621a      	str	r2, [r3, #32]
 8007296:	bf00      	nop
 8007298:	371c      	adds	r7, #28
 800729a:	46bd      	mov	sp, r7
 800729c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072a0:	4770      	bx	lr

080072a2 <TIM_TI2_ConfigInputStage>:
 80072a2:	b480      	push	{r7}
 80072a4:	b087      	sub	sp, #28
 80072a6:	af00      	add	r7, sp, #0
 80072a8:	60f8      	str	r0, [r7, #12]
 80072aa:	60b9      	str	r1, [r7, #8]
 80072ac:	607a      	str	r2, [r7, #4]
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	6a1b      	ldr	r3, [r3, #32]
 80072b2:	617b      	str	r3, [r7, #20]
 80072b4:	68fb      	ldr	r3, [r7, #12]
 80072b6:	6a1b      	ldr	r3, [r3, #32]
 80072b8:	f023 0210 	bic.w	r2, r3, #16
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	621a      	str	r2, [r3, #32]
 80072c0:	68fb      	ldr	r3, [r7, #12]
 80072c2:	699b      	ldr	r3, [r3, #24]
 80072c4:	613b      	str	r3, [r7, #16]
 80072c6:	693b      	ldr	r3, [r7, #16]
 80072c8:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80072cc:	613b      	str	r3, [r7, #16]
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	031b      	lsls	r3, r3, #12
 80072d2:	693a      	ldr	r2, [r7, #16]
 80072d4:	4313      	orrs	r3, r2
 80072d6:	613b      	str	r3, [r7, #16]
 80072d8:	697b      	ldr	r3, [r7, #20]
 80072da:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80072de:	617b      	str	r3, [r7, #20]
 80072e0:	68bb      	ldr	r3, [r7, #8]
 80072e2:	011b      	lsls	r3, r3, #4
 80072e4:	697a      	ldr	r2, [r7, #20]
 80072e6:	4313      	orrs	r3, r2
 80072e8:	617b      	str	r3, [r7, #20]
 80072ea:	68fb      	ldr	r3, [r7, #12]
 80072ec:	693a      	ldr	r2, [r7, #16]
 80072ee:	619a      	str	r2, [r3, #24]
 80072f0:	68fb      	ldr	r3, [r7, #12]
 80072f2:	697a      	ldr	r2, [r7, #20]
 80072f4:	621a      	str	r2, [r3, #32]
 80072f6:	bf00      	nop
 80072f8:	371c      	adds	r7, #28
 80072fa:	46bd      	mov	sp, r7
 80072fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007300:	4770      	bx	lr

08007302 <TIM_ITRx_SetConfig>:
 8007302:	b480      	push	{r7}
 8007304:	b085      	sub	sp, #20
 8007306:	af00      	add	r7, sp, #0
 8007308:	6078      	str	r0, [r7, #4]
 800730a:	6039      	str	r1, [r7, #0]
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	689b      	ldr	r3, [r3, #8]
 8007310:	60fb      	str	r3, [r7, #12]
 8007312:	68fb      	ldr	r3, [r7, #12]
 8007314:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007318:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800731c:	60fb      	str	r3, [r7, #12]
 800731e:	683a      	ldr	r2, [r7, #0]
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	4313      	orrs	r3, r2
 8007324:	f043 0307 	orr.w	r3, r3, #7
 8007328:	60fb      	str	r3, [r7, #12]
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	68fa      	ldr	r2, [r7, #12]
 800732e:	609a      	str	r2, [r3, #8]
 8007330:	bf00      	nop
 8007332:	3714      	adds	r7, #20
 8007334:	46bd      	mov	sp, r7
 8007336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800733a:	4770      	bx	lr

0800733c <TIM_ETR_SetConfig>:
 800733c:	b480      	push	{r7}
 800733e:	b087      	sub	sp, #28
 8007340:	af00      	add	r7, sp, #0
 8007342:	60f8      	str	r0, [r7, #12]
 8007344:	60b9      	str	r1, [r7, #8]
 8007346:	607a      	str	r2, [r7, #4]
 8007348:	603b      	str	r3, [r7, #0]
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	689b      	ldr	r3, [r3, #8]
 800734e:	617b      	str	r3, [r7, #20]
 8007350:	697b      	ldr	r3, [r7, #20]
 8007352:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007356:	617b      	str	r3, [r7, #20]
 8007358:	683b      	ldr	r3, [r7, #0]
 800735a:	021a      	lsls	r2, r3, #8
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	431a      	orrs	r2, r3
 8007360:	68bb      	ldr	r3, [r7, #8]
 8007362:	4313      	orrs	r3, r2
 8007364:	697a      	ldr	r2, [r7, #20]
 8007366:	4313      	orrs	r3, r2
 8007368:	617b      	str	r3, [r7, #20]
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	697a      	ldr	r2, [r7, #20]
 800736e:	609a      	str	r2, [r3, #8]
 8007370:	bf00      	nop
 8007372:	371c      	adds	r7, #28
 8007374:	46bd      	mov	sp, r7
 8007376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800737a:	4770      	bx	lr

0800737c <HAL_TIMEx_MasterConfigSynchronization>:
 800737c:	b480      	push	{r7}
 800737e:	b085      	sub	sp, #20
 8007380:	af00      	add	r7, sp, #0
 8007382:	6078      	str	r0, [r7, #4]
 8007384:	6039      	str	r1, [r7, #0]
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800738c:	2b01      	cmp	r3, #1
 800738e:	d101      	bne.n	8007394 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007390:	2302      	movs	r3, #2
 8007392:	e065      	b.n	8007460 <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	2201      	movs	r2, #1
 8007398:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	2202      	movs	r2, #2
 80073a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	685b      	ldr	r3, [r3, #4]
 80073aa:	60fb      	str	r3, [r7, #12]
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	681b      	ldr	r3, [r3, #0]
 80073b0:	689b      	ldr	r3, [r3, #8]
 80073b2:	60bb      	str	r3, [r7, #8]
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	4a2c      	ldr	r2, [pc, #176]	@ (800746c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80073ba:	4293      	cmp	r3, r2
 80073bc:	d004      	beq.n	80073c8 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	4a2b      	ldr	r2, [pc, #172]	@ (8007470 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80073c4:	4293      	cmp	r3, r2
 80073c6:	d108      	bne.n	80073da <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80073ce:	60fb      	str	r3, [r7, #12]
 80073d0:	683b      	ldr	r3, [r7, #0]
 80073d2:	685b      	ldr	r3, [r3, #4]
 80073d4:	68fa      	ldr	r2, [r7, #12]
 80073d6:	4313      	orrs	r3, r2
 80073d8:	60fb      	str	r3, [r7, #12]
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80073e0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80073e4:	60fb      	str	r3, [r7, #12]
 80073e6:	683b      	ldr	r3, [r7, #0]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	68fa      	ldr	r2, [r7, #12]
 80073ec:	4313      	orrs	r3, r2
 80073ee:	60fb      	str	r3, [r7, #12]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	68fa      	ldr	r2, [r7, #12]
 80073f6:	605a      	str	r2, [r3, #4]
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	4a1b      	ldr	r2, [pc, #108]	@ (800746c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80073fe:	4293      	cmp	r3, r2
 8007400:	d018      	beq.n	8007434 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	681b      	ldr	r3, [r3, #0]
 8007406:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800740a:	d013      	beq.n	8007434 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	4a18      	ldr	r2, [pc, #96]	@ (8007474 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8007412:	4293      	cmp	r3, r2
 8007414:	d00e      	beq.n	8007434 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	681b      	ldr	r3, [r3, #0]
 800741a:	4a17      	ldr	r2, [pc, #92]	@ (8007478 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800741c:	4293      	cmp	r3, r2
 800741e:	d009      	beq.n	8007434 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	4a12      	ldr	r2, [pc, #72]	@ (8007470 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007426:	4293      	cmp	r3, r2
 8007428:	d004      	beq.n	8007434 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	4a13      	ldr	r2, [pc, #76]	@ (800747c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007430:	4293      	cmp	r3, r2
 8007432:	d10c      	bne.n	800744e <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8007434:	68bb      	ldr	r3, [r7, #8]
 8007436:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800743a:	60bb      	str	r3, [r7, #8]
 800743c:	683b      	ldr	r3, [r7, #0]
 800743e:	689b      	ldr	r3, [r3, #8]
 8007440:	68ba      	ldr	r2, [r7, #8]
 8007442:	4313      	orrs	r3, r2
 8007444:	60bb      	str	r3, [r7, #8]
 8007446:	687b      	ldr	r3, [r7, #4]
 8007448:	681b      	ldr	r3, [r3, #0]
 800744a:	68ba      	ldr	r2, [r7, #8]
 800744c:	609a      	str	r2, [r3, #8]
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	2201      	movs	r2, #1
 8007452:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	2200      	movs	r2, #0
 800745a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800745e:	2300      	movs	r3, #0
 8007460:	4618      	mov	r0, r3
 8007462:	3714      	adds	r7, #20
 8007464:	46bd      	mov	sp, r7
 8007466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800746a:	4770      	bx	lr
 800746c:	40012c00 	.word	0x40012c00
 8007470:	40013400 	.word	0x40013400
 8007474:	40000400 	.word	0x40000400
 8007478:	40000800 	.word	0x40000800
 800747c:	40014000 	.word	0x40014000

08007480 <HAL_TIMEx_CommutCallback>:
 8007480:	b480      	push	{r7}
 8007482:	b083      	sub	sp, #12
 8007484:	af00      	add	r7, sp, #0
 8007486:	6078      	str	r0, [r7, #4]
 8007488:	bf00      	nop
 800748a:	370c      	adds	r7, #12
 800748c:	46bd      	mov	sp, r7
 800748e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007492:	4770      	bx	lr

08007494 <HAL_TIMEx_BreakCallback>:
 8007494:	b480      	push	{r7}
 8007496:	b083      	sub	sp, #12
 8007498:	af00      	add	r7, sp, #0
 800749a:	6078      	str	r0, [r7, #4]
 800749c:	bf00      	nop
 800749e:	370c      	adds	r7, #12
 80074a0:	46bd      	mov	sp, r7
 80074a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a6:	4770      	bx	lr

080074a8 <HAL_TIMEx_Break2Callback>:
 80074a8:	b480      	push	{r7}
 80074aa:	b083      	sub	sp, #12
 80074ac:	af00      	add	r7, sp, #0
 80074ae:	6078      	str	r0, [r7, #4]
 80074b0:	bf00      	nop
 80074b2:	370c      	adds	r7, #12
 80074b4:	46bd      	mov	sp, r7
 80074b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ba:	4770      	bx	lr

080074bc <HAL_TIMEx_EncoderIndexCallback>:
 80074bc:	b480      	push	{r7}
 80074be:	b083      	sub	sp, #12
 80074c0:	af00      	add	r7, sp, #0
 80074c2:	6078      	str	r0, [r7, #4]
 80074c4:	bf00      	nop
 80074c6:	370c      	adds	r7, #12
 80074c8:	46bd      	mov	sp, r7
 80074ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ce:	4770      	bx	lr

080074d0 <HAL_TIMEx_DirectionChangeCallback>:
 80074d0:	b480      	push	{r7}
 80074d2:	b083      	sub	sp, #12
 80074d4:	af00      	add	r7, sp, #0
 80074d6:	6078      	str	r0, [r7, #4]
 80074d8:	bf00      	nop
 80074da:	370c      	adds	r7, #12
 80074dc:	46bd      	mov	sp, r7
 80074de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e2:	4770      	bx	lr

080074e4 <HAL_TIMEx_IndexErrorCallback>:
 80074e4:	b480      	push	{r7}
 80074e6:	b083      	sub	sp, #12
 80074e8:	af00      	add	r7, sp, #0
 80074ea:	6078      	str	r0, [r7, #4]
 80074ec:	bf00      	nop
 80074ee:	370c      	adds	r7, #12
 80074f0:	46bd      	mov	sp, r7
 80074f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f6:	4770      	bx	lr

080074f8 <HAL_TIMEx_TransitionErrorCallback>:
 80074f8:	b480      	push	{r7}
 80074fa:	b083      	sub	sp, #12
 80074fc:	af00      	add	r7, sp, #0
 80074fe:	6078      	str	r0, [r7, #4]
 8007500:	bf00      	nop
 8007502:	370c      	adds	r7, #12
 8007504:	46bd      	mov	sp, r7
 8007506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800750a:	4770      	bx	lr

0800750c <HAL_UART_Init>:
 800750c:	b580      	push	{r7, lr}
 800750e:	b082      	sub	sp, #8
 8007510:	af00      	add	r7, sp, #0
 8007512:	6078      	str	r0, [r7, #4]
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	2b00      	cmp	r3, #0
 8007518:	d101      	bne.n	800751e <HAL_UART_Init+0x12>
 800751a:	2301      	movs	r3, #1
 800751c:	e042      	b.n	80075a4 <HAL_UART_Init+0x98>
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007524:	2b00      	cmp	r3, #0
 8007526:	d106      	bne.n	8007536 <HAL_UART_Init+0x2a>
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	2200      	movs	r2, #0
 800752c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8007530:	6878      	ldr	r0, [r7, #4]
 8007532:	f7fb fcb7 	bl	8002ea4 <HAL_UART_MspInit>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	2224      	movs	r2, #36	@ 0x24
 800753a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	681b      	ldr	r3, [r3, #0]
 8007542:	681a      	ldr	r2, [r3, #0]
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	f022 0201 	bic.w	r2, r2, #1
 800754c:	601a      	str	r2, [r3, #0]
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007552:	2b00      	cmp	r3, #0
 8007554:	d002      	beq.n	800755c <HAL_UART_Init+0x50>
 8007556:	6878      	ldr	r0, [r7, #4]
 8007558:	f000 ff30 	bl	80083bc <UART_AdvFeatureConfig>
 800755c:	6878      	ldr	r0, [r7, #4]
 800755e:	f000 fc61 	bl	8007e24 <UART_SetConfig>
 8007562:	4603      	mov	r3, r0
 8007564:	2b01      	cmp	r3, #1
 8007566:	d101      	bne.n	800756c <HAL_UART_Init+0x60>
 8007568:	2301      	movs	r3, #1
 800756a:	e01b      	b.n	80075a4 <HAL_UART_Init+0x98>
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	685a      	ldr	r2, [r3, #4]
 8007572:	687b      	ldr	r3, [r7, #4]
 8007574:	681b      	ldr	r3, [r3, #0]
 8007576:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800757a:	605a      	str	r2, [r3, #4]
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	681b      	ldr	r3, [r3, #0]
 8007580:	689a      	ldr	r2, [r3, #8]
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	681b      	ldr	r3, [r3, #0]
 8007586:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800758a:	609a      	str	r2, [r3, #8]
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	681a      	ldr	r2, [r3, #0]
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	f042 0201 	orr.w	r2, r2, #1
 800759a:	601a      	str	r2, [r3, #0]
 800759c:	6878      	ldr	r0, [r7, #4]
 800759e:	f000 ffaf 	bl	8008500 <UART_CheckIdleState>
 80075a2:	4603      	mov	r3, r0
 80075a4:	4618      	mov	r0, r3
 80075a6:	3708      	adds	r7, #8
 80075a8:	46bd      	mov	sp, r7
 80075aa:	bd80      	pop	{r7, pc}

080075ac <HAL_UART_Transmit>:
 80075ac:	b580      	push	{r7, lr}
 80075ae:	b08a      	sub	sp, #40	@ 0x28
 80075b0:	af02      	add	r7, sp, #8
 80075b2:	60f8      	str	r0, [r7, #12]
 80075b4:	60b9      	str	r1, [r7, #8]
 80075b6:	603b      	str	r3, [r7, #0]
 80075b8:	4613      	mov	r3, r2
 80075ba:	80fb      	strh	r3, [r7, #6]
 80075bc:	68fb      	ldr	r3, [r7, #12]
 80075be:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80075c2:	2b20      	cmp	r3, #32
 80075c4:	d17b      	bne.n	80076be <HAL_UART_Transmit+0x112>
 80075c6:	68bb      	ldr	r3, [r7, #8]
 80075c8:	2b00      	cmp	r3, #0
 80075ca:	d002      	beq.n	80075d2 <HAL_UART_Transmit+0x26>
 80075cc:	88fb      	ldrh	r3, [r7, #6]
 80075ce:	2b00      	cmp	r3, #0
 80075d0:	d101      	bne.n	80075d6 <HAL_UART_Transmit+0x2a>
 80075d2:	2301      	movs	r3, #1
 80075d4:	e074      	b.n	80076c0 <HAL_UART_Transmit+0x114>
 80075d6:	68fb      	ldr	r3, [r7, #12]
 80075d8:	2200      	movs	r2, #0
 80075da:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80075de:	68fb      	ldr	r3, [r7, #12]
 80075e0:	2221      	movs	r2, #33	@ 0x21
 80075e2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80075e6:	f7fb fea3 	bl	8003330 <HAL_GetTick>
 80075ea:	6178      	str	r0, [r7, #20]
 80075ec:	68fb      	ldr	r3, [r7, #12]
 80075ee:	88fa      	ldrh	r2, [r7, #6]
 80075f0:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	88fa      	ldrh	r2, [r7, #6]
 80075f8:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 80075fc:	68fb      	ldr	r3, [r7, #12]
 80075fe:	689b      	ldr	r3, [r3, #8]
 8007600:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007604:	d108      	bne.n	8007618 <HAL_UART_Transmit+0x6c>
 8007606:	68fb      	ldr	r3, [r7, #12]
 8007608:	691b      	ldr	r3, [r3, #16]
 800760a:	2b00      	cmp	r3, #0
 800760c:	d104      	bne.n	8007618 <HAL_UART_Transmit+0x6c>
 800760e:	2300      	movs	r3, #0
 8007610:	61fb      	str	r3, [r7, #28]
 8007612:	68bb      	ldr	r3, [r7, #8]
 8007614:	61bb      	str	r3, [r7, #24]
 8007616:	e003      	b.n	8007620 <HAL_UART_Transmit+0x74>
 8007618:	68bb      	ldr	r3, [r7, #8]
 800761a:	61fb      	str	r3, [r7, #28]
 800761c:	2300      	movs	r3, #0
 800761e:	61bb      	str	r3, [r7, #24]
 8007620:	e030      	b.n	8007684 <HAL_UART_Transmit+0xd8>
 8007622:	683b      	ldr	r3, [r7, #0]
 8007624:	9300      	str	r3, [sp, #0]
 8007626:	697b      	ldr	r3, [r7, #20]
 8007628:	2200      	movs	r2, #0
 800762a:	2180      	movs	r1, #128	@ 0x80
 800762c:	68f8      	ldr	r0, [r7, #12]
 800762e:	f001 f811 	bl	8008654 <UART_WaitOnFlagUntilTimeout>
 8007632:	4603      	mov	r3, r0
 8007634:	2b00      	cmp	r3, #0
 8007636:	d005      	beq.n	8007644 <HAL_UART_Transmit+0x98>
 8007638:	68fb      	ldr	r3, [r7, #12]
 800763a:	2220      	movs	r2, #32
 800763c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8007640:	2303      	movs	r3, #3
 8007642:	e03d      	b.n	80076c0 <HAL_UART_Transmit+0x114>
 8007644:	69fb      	ldr	r3, [r7, #28]
 8007646:	2b00      	cmp	r3, #0
 8007648:	d10b      	bne.n	8007662 <HAL_UART_Transmit+0xb6>
 800764a:	69bb      	ldr	r3, [r7, #24]
 800764c:	881b      	ldrh	r3, [r3, #0]
 800764e:	461a      	mov	r2, r3
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007658:	629a      	str	r2, [r3, #40]	@ 0x28
 800765a:	69bb      	ldr	r3, [r7, #24]
 800765c:	3302      	adds	r3, #2
 800765e:	61bb      	str	r3, [r7, #24]
 8007660:	e007      	b.n	8007672 <HAL_UART_Transmit+0xc6>
 8007662:	69fb      	ldr	r3, [r7, #28]
 8007664:	781a      	ldrb	r2, [r3, #0]
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	629a      	str	r2, [r3, #40]	@ 0x28
 800766c:	69fb      	ldr	r3, [r7, #28]
 800766e:	3301      	adds	r3, #1
 8007670:	61fb      	str	r3, [r7, #28]
 8007672:	68fb      	ldr	r3, [r7, #12]
 8007674:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 8007678:	b29b      	uxth	r3, r3
 800767a:	3b01      	subs	r3, #1
 800767c:	b29a      	uxth	r2, r3
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8007684:	68fb      	ldr	r3, [r7, #12]
 8007686:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 800768a:	b29b      	uxth	r3, r3
 800768c:	2b00      	cmp	r3, #0
 800768e:	d1c8      	bne.n	8007622 <HAL_UART_Transmit+0x76>
 8007690:	683b      	ldr	r3, [r7, #0]
 8007692:	9300      	str	r3, [sp, #0]
 8007694:	697b      	ldr	r3, [r7, #20]
 8007696:	2200      	movs	r2, #0
 8007698:	2140      	movs	r1, #64	@ 0x40
 800769a:	68f8      	ldr	r0, [r7, #12]
 800769c:	f000 ffda 	bl	8008654 <UART_WaitOnFlagUntilTimeout>
 80076a0:	4603      	mov	r3, r0
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	d005      	beq.n	80076b2 <HAL_UART_Transmit+0x106>
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	2220      	movs	r2, #32
 80076aa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80076ae:	2303      	movs	r3, #3
 80076b0:	e006      	b.n	80076c0 <HAL_UART_Transmit+0x114>
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	2220      	movs	r2, #32
 80076b6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80076ba:	2300      	movs	r3, #0
 80076bc:	e000      	b.n	80076c0 <HAL_UART_Transmit+0x114>
 80076be:	2302      	movs	r3, #2
 80076c0:	4618      	mov	r0, r3
 80076c2:	3720      	adds	r7, #32
 80076c4:	46bd      	mov	sp, r7
 80076c6:	bd80      	pop	{r7, pc}

080076c8 <HAL_UART_Receive_IT>:
 80076c8:	b580      	push	{r7, lr}
 80076ca:	b08a      	sub	sp, #40	@ 0x28
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	60f8      	str	r0, [r7, #12]
 80076d0:	60b9      	str	r1, [r7, #8]
 80076d2:	4613      	mov	r3, r2
 80076d4:	80fb      	strh	r3, [r7, #6]
 80076d6:	68fb      	ldr	r3, [r7, #12]
 80076d8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80076dc:	2b20      	cmp	r3, #32
 80076de:	d137      	bne.n	8007750 <HAL_UART_Receive_IT+0x88>
 80076e0:	68bb      	ldr	r3, [r7, #8]
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d002      	beq.n	80076ec <HAL_UART_Receive_IT+0x24>
 80076e6:	88fb      	ldrh	r3, [r7, #6]
 80076e8:	2b00      	cmp	r3, #0
 80076ea:	d101      	bne.n	80076f0 <HAL_UART_Receive_IT+0x28>
 80076ec:	2301      	movs	r3, #1
 80076ee:	e030      	b.n	8007752 <HAL_UART_Receive_IT+0x8a>
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	2200      	movs	r2, #0
 80076f4:	66da      	str	r2, [r3, #108]	@ 0x6c
 80076f6:	68fb      	ldr	r3, [r7, #12]
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	4a18      	ldr	r2, [pc, #96]	@ (800775c <HAL_UART_Receive_IT+0x94>)
 80076fc:	4293      	cmp	r3, r2
 80076fe:	d01f      	beq.n	8007740 <HAL_UART_Receive_IT+0x78>
 8007700:	68fb      	ldr	r3, [r7, #12]
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	685b      	ldr	r3, [r3, #4]
 8007706:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800770a:	2b00      	cmp	r3, #0
 800770c:	d018      	beq.n	8007740 <HAL_UART_Receive_IT+0x78>
 800770e:	68fb      	ldr	r3, [r7, #12]
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	617b      	str	r3, [r7, #20]
 8007714:	697b      	ldr	r3, [r7, #20]
 8007716:	e853 3f00 	ldrex	r3, [r3]
 800771a:	613b      	str	r3, [r7, #16]
 800771c:	693b      	ldr	r3, [r7, #16]
 800771e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007722:	627b      	str	r3, [r7, #36]	@ 0x24
 8007724:	68fb      	ldr	r3, [r7, #12]
 8007726:	681b      	ldr	r3, [r3, #0]
 8007728:	461a      	mov	r2, r3
 800772a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800772c:	623b      	str	r3, [r7, #32]
 800772e:	61fa      	str	r2, [r7, #28]
 8007730:	69f9      	ldr	r1, [r7, #28]
 8007732:	6a3a      	ldr	r2, [r7, #32]
 8007734:	e841 2300 	strex	r3, r2, [r1]
 8007738:	61bb      	str	r3, [r7, #24]
 800773a:	69bb      	ldr	r3, [r7, #24]
 800773c:	2b00      	cmp	r3, #0
 800773e:	d1e6      	bne.n	800770e <HAL_UART_Receive_IT+0x46>
 8007740:	88fb      	ldrh	r3, [r7, #6]
 8007742:	461a      	mov	r2, r3
 8007744:	68b9      	ldr	r1, [r7, #8]
 8007746:	68f8      	ldr	r0, [r7, #12]
 8007748:	f000 fff2 	bl	8008730 <UART_Start_Receive_IT>
 800774c:	4603      	mov	r3, r0
 800774e:	e000      	b.n	8007752 <HAL_UART_Receive_IT+0x8a>
 8007750:	2302      	movs	r3, #2
 8007752:	4618      	mov	r0, r3
 8007754:	3728      	adds	r7, #40	@ 0x28
 8007756:	46bd      	mov	sp, r7
 8007758:	bd80      	pop	{r7, pc}
 800775a:	bf00      	nop
 800775c:	40008000 	.word	0x40008000

08007760 <HAL_UART_IRQHandler>:
 8007760:	b580      	push	{r7, lr}
 8007762:	b0ba      	sub	sp, #232	@ 0xe8
 8007764:	af00      	add	r7, sp, #0
 8007766:	6078      	str	r0, [r7, #4]
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	69db      	ldr	r3, [r3, #28]
 800776e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	681b      	ldr	r3, [r3, #0]
 8007776:	681b      	ldr	r3, [r3, #0]
 8007778:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	689b      	ldr	r3, [r3, #8]
 8007782:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8007786:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 800778a:	f640 030f 	movw	r3, #2063	@ 0x80f
 800778e:	4013      	ands	r3, r2
 8007790:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007794:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8007798:	2b00      	cmp	r3, #0
 800779a:	d11b      	bne.n	80077d4 <HAL_UART_IRQHandler+0x74>
 800779c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80077a0:	f003 0320 	and.w	r3, r3, #32
 80077a4:	2b00      	cmp	r3, #0
 80077a6:	d015      	beq.n	80077d4 <HAL_UART_IRQHandler+0x74>
 80077a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80077ac:	f003 0320 	and.w	r3, r3, #32
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d105      	bne.n	80077c0 <HAL_UART_IRQHandler+0x60>
 80077b4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80077b8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80077bc:	2b00      	cmp	r3, #0
 80077be:	d009      	beq.n	80077d4 <HAL_UART_IRQHandler+0x74>
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80077c4:	2b00      	cmp	r3, #0
 80077c6:	f000 8300 	beq.w	8007dca <HAL_UART_IRQHandler+0x66a>
 80077ca:	687b      	ldr	r3, [r7, #4]
 80077cc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80077ce:	6878      	ldr	r0, [r7, #4]
 80077d0:	4798      	blx	r3
 80077d2:	e2fa      	b.n	8007dca <HAL_UART_IRQHandler+0x66a>
 80077d4:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80077d8:	2b00      	cmp	r3, #0
 80077da:	f000 8123 	beq.w	8007a24 <HAL_UART_IRQHandler+0x2c4>
 80077de:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 80077e2:	4b8d      	ldr	r3, [pc, #564]	@ (8007a18 <HAL_UART_IRQHandler+0x2b8>)
 80077e4:	4013      	ands	r3, r2
 80077e6:	2b00      	cmp	r3, #0
 80077e8:	d106      	bne.n	80077f8 <HAL_UART_IRQHandler+0x98>
 80077ea:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 80077ee:	4b8b      	ldr	r3, [pc, #556]	@ (8007a1c <HAL_UART_IRQHandler+0x2bc>)
 80077f0:	4013      	ands	r3, r2
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	f000 8116 	beq.w	8007a24 <HAL_UART_IRQHandler+0x2c4>
 80077f8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80077fc:	f003 0301 	and.w	r3, r3, #1
 8007800:	2b00      	cmp	r3, #0
 8007802:	d011      	beq.n	8007828 <HAL_UART_IRQHandler+0xc8>
 8007804:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007808:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800780c:	2b00      	cmp	r3, #0
 800780e:	d00b      	beq.n	8007828 <HAL_UART_IRQHandler+0xc8>
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	2201      	movs	r2, #1
 8007816:	621a      	str	r2, [r3, #32]
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800781e:	f043 0201 	orr.w	r2, r3, #1
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8007828:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800782c:	f003 0302 	and.w	r3, r3, #2
 8007830:	2b00      	cmp	r3, #0
 8007832:	d011      	beq.n	8007858 <HAL_UART_IRQHandler+0xf8>
 8007834:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007838:	f003 0301 	and.w	r3, r3, #1
 800783c:	2b00      	cmp	r3, #0
 800783e:	d00b      	beq.n	8007858 <HAL_UART_IRQHandler+0xf8>
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	2202      	movs	r2, #2
 8007846:	621a      	str	r2, [r3, #32]
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800784e:	f043 0204 	orr.w	r2, r3, #4
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8007858:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800785c:	f003 0304 	and.w	r3, r3, #4
 8007860:	2b00      	cmp	r3, #0
 8007862:	d011      	beq.n	8007888 <HAL_UART_IRQHandler+0x128>
 8007864:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007868:	f003 0301 	and.w	r3, r3, #1
 800786c:	2b00      	cmp	r3, #0
 800786e:	d00b      	beq.n	8007888 <HAL_UART_IRQHandler+0x128>
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	2204      	movs	r2, #4
 8007876:	621a      	str	r2, [r3, #32]
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800787e:	f043 0202 	orr.w	r2, r3, #2
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8007888:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800788c:	f003 0308 	and.w	r3, r3, #8
 8007890:	2b00      	cmp	r3, #0
 8007892:	d017      	beq.n	80078c4 <HAL_UART_IRQHandler+0x164>
 8007894:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007898:	f003 0320 	and.w	r3, r3, #32
 800789c:	2b00      	cmp	r3, #0
 800789e:	d105      	bne.n	80078ac <HAL_UART_IRQHandler+0x14c>
 80078a0:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 80078a4:	4b5c      	ldr	r3, [pc, #368]	@ (8007a18 <HAL_UART_IRQHandler+0x2b8>)
 80078a6:	4013      	ands	r3, r2
 80078a8:	2b00      	cmp	r3, #0
 80078aa:	d00b      	beq.n	80078c4 <HAL_UART_IRQHandler+0x164>
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	2208      	movs	r2, #8
 80078b2:	621a      	str	r2, [r3, #32]
 80078b4:	687b      	ldr	r3, [r7, #4]
 80078b6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80078ba:	f043 0208 	orr.w	r2, r3, #8
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80078c4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80078c8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80078cc:	2b00      	cmp	r3, #0
 80078ce:	d012      	beq.n	80078f6 <HAL_UART_IRQHandler+0x196>
 80078d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80078d4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80078d8:	2b00      	cmp	r3, #0
 80078da:	d00c      	beq.n	80078f6 <HAL_UART_IRQHandler+0x196>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80078e4:	621a      	str	r2, [r3, #32]
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80078ec:	f043 0220 	orr.w	r2, r3, #32
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80078fc:	2b00      	cmp	r3, #0
 80078fe:	f000 8266 	beq.w	8007dce <HAL_UART_IRQHandler+0x66e>
 8007902:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007906:	f003 0320 	and.w	r3, r3, #32
 800790a:	2b00      	cmp	r3, #0
 800790c:	d013      	beq.n	8007936 <HAL_UART_IRQHandler+0x1d6>
 800790e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007912:	f003 0320 	and.w	r3, r3, #32
 8007916:	2b00      	cmp	r3, #0
 8007918:	d105      	bne.n	8007926 <HAL_UART_IRQHandler+0x1c6>
 800791a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800791e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007922:	2b00      	cmp	r3, #0
 8007924:	d007      	beq.n	8007936 <HAL_UART_IRQHandler+0x1d6>
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800792a:	2b00      	cmp	r3, #0
 800792c:	d003      	beq.n	8007936 <HAL_UART_IRQHandler+0x1d6>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8007932:	6878      	ldr	r0, [r7, #4]
 8007934:	4798      	blx	r3
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800793c:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	689b      	ldr	r3, [r3, #8]
 8007946:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800794a:	2b40      	cmp	r3, #64	@ 0x40
 800794c:	d005      	beq.n	800795a <HAL_UART_IRQHandler+0x1fa>
 800794e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8007952:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8007956:	2b00      	cmp	r3, #0
 8007958:	d054      	beq.n	8007a04 <HAL_UART_IRQHandler+0x2a4>
 800795a:	6878      	ldr	r0, [r7, #4]
 800795c:	f001 f80a 	bl	8008974 <UART_EndRxTransfer>
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	681b      	ldr	r3, [r3, #0]
 8007964:	689b      	ldr	r3, [r3, #8]
 8007966:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800796a:	2b40      	cmp	r3, #64	@ 0x40
 800796c:	d146      	bne.n	80079fc <HAL_UART_IRQHandler+0x29c>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	3308      	adds	r3, #8
 8007974:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007978:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800797c:	e853 3f00 	ldrex	r3, [r3]
 8007980:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007984:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8007988:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800798c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	3308      	adds	r3, #8
 8007996:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800799a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800799e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80079a2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80079a6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80079aa:	e841 2300 	strex	r3, r2, [r1]
 80079ae:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80079b2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d1d9      	bne.n	800796e <HAL_UART_IRQHandler+0x20e>
 80079ba:	687b      	ldr	r3, [r7, #4]
 80079bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	d017      	beq.n	80079f4 <HAL_UART_IRQHandler+0x294>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80079ca:	4a15      	ldr	r2, [pc, #84]	@ (8007a20 <HAL_UART_IRQHandler+0x2c0>)
 80079cc:	639a      	str	r2, [r3, #56]	@ 0x38
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80079d4:	4618      	mov	r0, r3
 80079d6:	f7fd fd76 	bl	80054c6 <HAL_DMA_Abort_IT>
 80079da:	4603      	mov	r3, r0
 80079dc:	2b00      	cmp	r3, #0
 80079de:	d019      	beq.n	8007a14 <HAL_UART_IRQHandler+0x2b4>
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80079e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80079e8:	687a      	ldr	r2, [r7, #4]
 80079ea:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 80079ee:	4610      	mov	r0, r2
 80079f0:	4798      	blx	r3
 80079f2:	e00f      	b.n	8007a14 <HAL_UART_IRQHandler+0x2b4>
 80079f4:	6878      	ldr	r0, [r7, #4]
 80079f6:	f000 f9ff 	bl	8007df8 <HAL_UART_ErrorCallback>
 80079fa:	e00b      	b.n	8007a14 <HAL_UART_IRQHandler+0x2b4>
 80079fc:	6878      	ldr	r0, [r7, #4]
 80079fe:	f000 f9fb 	bl	8007df8 <HAL_UART_ErrorCallback>
 8007a02:	e007      	b.n	8007a14 <HAL_UART_IRQHandler+0x2b4>
 8007a04:	6878      	ldr	r0, [r7, #4]
 8007a06:	f000 f9f7 	bl	8007df8 <HAL_UART_ErrorCallback>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	2200      	movs	r2, #0
 8007a0e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8007a12:	e1dc      	b.n	8007dce <HAL_UART_IRQHandler+0x66e>
 8007a14:	bf00      	nop
 8007a16:	e1da      	b.n	8007dce <HAL_UART_IRQHandler+0x66e>
 8007a18:	10000001 	.word	0x10000001
 8007a1c:	04000120 	.word	0x04000120
 8007a20:	08008a41 	.word	0x08008a41
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007a28:	2b01      	cmp	r3, #1
 8007a2a:	f040 8170 	bne.w	8007d0e <HAL_UART_IRQHandler+0x5ae>
 8007a2e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007a32:	f003 0310 	and.w	r3, r3, #16
 8007a36:	2b00      	cmp	r3, #0
 8007a38:	f000 8169 	beq.w	8007d0e <HAL_UART_IRQHandler+0x5ae>
 8007a3c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007a40:	f003 0310 	and.w	r3, r3, #16
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	f000 8162 	beq.w	8007d0e <HAL_UART_IRQHandler+0x5ae>
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	2210      	movs	r2, #16
 8007a50:	621a      	str	r2, [r3, #32]
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	681b      	ldr	r3, [r3, #0]
 8007a56:	689b      	ldr	r3, [r3, #8]
 8007a58:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007a5c:	2b40      	cmp	r3, #64	@ 0x40
 8007a5e:	f040 80d8 	bne.w	8007c12 <HAL_UART_IRQHandler+0x4b2>
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007a68:	681b      	ldr	r3, [r3, #0]
 8007a6a:	685b      	ldr	r3, [r3, #4]
 8007a6c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8007a70:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	f000 80af 	beq.w	8007bd8 <HAL_UART_IRQHandler+0x478>
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8007a80:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8007a84:	429a      	cmp	r2, r3
 8007a86:	f080 80a7 	bcs.w	8007bd8 <HAL_UART_IRQHandler+0x478>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8007a90:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	f003 0320 	and.w	r3, r3, #32
 8007aa2:	2b00      	cmp	r3, #0
 8007aa4:	f040 8087 	bne.w	8007bb6 <HAL_UART_IRQHandler+0x456>
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	681b      	ldr	r3, [r3, #0]
 8007aac:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007ab0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8007ab4:	e853 3f00 	ldrex	r3, [r3]
 8007ab8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007abc:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8007ac0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007ac4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007ac8:	687b      	ldr	r3, [r7, #4]
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	461a      	mov	r2, r3
 8007ace:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8007ad2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8007ad6:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8007ada:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8007ade:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8007ae2:	e841 2300 	strex	r3, r2, [r1]
 8007ae6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8007aea:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8007aee:	2b00      	cmp	r3, #0
 8007af0:	d1da      	bne.n	8007aa8 <HAL_UART_IRQHandler+0x348>
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	3308      	adds	r3, #8
 8007af8:	677b      	str	r3, [r7, #116]	@ 0x74
 8007afa:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8007afc:	e853 3f00 	ldrex	r3, [r3]
 8007b00:	673b      	str	r3, [r7, #112]	@ 0x70
 8007b02:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007b04:	f023 0301 	bic.w	r3, r3, #1
 8007b08:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	3308      	adds	r3, #8
 8007b12:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8007b16:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8007b1a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8007b1c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8007b1e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8007b22:	e841 2300 	strex	r3, r2, [r1]
 8007b26:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007b28:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d1e1      	bne.n	8007af2 <HAL_UART_IRQHandler+0x392>
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	3308      	adds	r3, #8
 8007b34:	663b      	str	r3, [r7, #96]	@ 0x60
 8007b36:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8007b38:	e853 3f00 	ldrex	r3, [r3]
 8007b3c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8007b3e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007b40:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007b44:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	3308      	adds	r3, #8
 8007b4e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8007b52:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8007b54:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007b56:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8007b58:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8007b5a:	e841 2300 	strex	r3, r2, [r1]
 8007b5e:	667b      	str	r3, [r7, #100]	@ 0x64
 8007b60:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8007b62:	2b00      	cmp	r3, #0
 8007b64:	d1e3      	bne.n	8007b2e <HAL_UART_IRQHandler+0x3ce>
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	2220      	movs	r2, #32
 8007b6a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	2200      	movs	r2, #0
 8007b72:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007b7a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007b7c:	e853 3f00 	ldrex	r3, [r3]
 8007b80:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007b82:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007b84:	f023 0310 	bic.w	r3, r3, #16
 8007b88:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	461a      	mov	r2, r3
 8007b92:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8007b96:	65bb      	str	r3, [r7, #88]	@ 0x58
 8007b98:	657a      	str	r2, [r7, #84]	@ 0x54
 8007b9a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8007b9c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8007b9e:	e841 2300 	strex	r3, r2, [r1]
 8007ba2:	653b      	str	r3, [r7, #80]	@ 0x50
 8007ba4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d1e4      	bne.n	8007b74 <HAL_UART_IRQHandler+0x414>
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007bb0:	4618      	mov	r0, r3
 8007bb2:	f7fd fc2f 	bl	8005414 <HAL_DMA_Abort>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	2202      	movs	r2, #2
 8007bba:	671a      	str	r2, [r3, #112]	@ 0x70
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8007bc8:	b29b      	uxth	r3, r3
 8007bca:	1ad3      	subs	r3, r2, r3
 8007bcc:	b29b      	uxth	r3, r3
 8007bce:	4619      	mov	r1, r3
 8007bd0:	6878      	ldr	r0, [r7, #4]
 8007bd2:	f000 f91b 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8007bd6:	e0fc      	b.n	8007dd2 <HAL_UART_IRQHandler+0x672>
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8007bde:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8007be2:	429a      	cmp	r2, r3
 8007be4:	f040 80f5 	bne.w	8007dd2 <HAL_UART_IRQHandler+0x672>
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007bee:	681b      	ldr	r3, [r3, #0]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	f003 0320 	and.w	r3, r3, #32
 8007bf6:	2b20      	cmp	r3, #32
 8007bf8:	f040 80eb 	bne.w	8007dd2 <HAL_UART_IRQHandler+0x672>
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	2202      	movs	r2, #2
 8007c00:	671a      	str	r2, [r3, #112]	@ 0x70
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8007c08:	4619      	mov	r1, r3
 8007c0a:	6878      	ldr	r0, [r7, #4]
 8007c0c:	f000 f8fe 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8007c10:	e0df      	b.n	8007dd2 <HAL_UART_IRQHandler+0x672>
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8007c1e:	b29b      	uxth	r3, r3
 8007c20:	1ad3      	subs	r3, r2, r3
 8007c22:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8007c2c:	b29b      	uxth	r3, r3
 8007c2e:	2b00      	cmp	r3, #0
 8007c30:	f000 80d1 	beq.w	8007dd6 <HAL_UART_IRQHandler+0x676>
 8007c34:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	f000 80cc 	beq.w	8007dd6 <HAL_UART_IRQHandler+0x676>
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007c44:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007c46:	e853 3f00 	ldrex	r3, [r3]
 8007c4a:	637b      	str	r3, [r7, #52]	@ 0x34
 8007c4c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007c4e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007c52:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	681b      	ldr	r3, [r3, #0]
 8007c5a:	461a      	mov	r2, r3
 8007c5c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8007c60:	647b      	str	r3, [r7, #68]	@ 0x44
 8007c62:	643a      	str	r2, [r7, #64]	@ 0x40
 8007c64:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007c66:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007c68:	e841 2300 	strex	r3, r2, [r1]
 8007c6c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007c6e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007c70:	2b00      	cmp	r3, #0
 8007c72:	d1e4      	bne.n	8007c3e <HAL_UART_IRQHandler+0x4de>
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	3308      	adds	r3, #8
 8007c7a:	627b      	str	r3, [r7, #36]	@ 0x24
 8007c7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007c7e:	e853 3f00 	ldrex	r3, [r3]
 8007c82:	623b      	str	r3, [r7, #32]
 8007c84:	6a3b      	ldr	r3, [r7, #32]
 8007c86:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007c8a:	f023 0301 	bic.w	r3, r3, #1
 8007c8e:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8007c92:	687b      	ldr	r3, [r7, #4]
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	3308      	adds	r3, #8
 8007c98:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8007c9c:	633a      	str	r2, [r7, #48]	@ 0x30
 8007c9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007ca0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007ca2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007ca4:	e841 2300 	strex	r3, r2, [r1]
 8007ca8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007caa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007cac:	2b00      	cmp	r3, #0
 8007cae:	d1e1      	bne.n	8007c74 <HAL_UART_IRQHandler+0x514>
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	2220      	movs	r2, #32
 8007cb4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	2200      	movs	r2, #0
 8007cbc:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	2200      	movs	r2, #0
 8007cc2:	675a      	str	r2, [r3, #116]	@ 0x74
 8007cc4:	687b      	ldr	r3, [r7, #4]
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	613b      	str	r3, [r7, #16]
 8007cca:	693b      	ldr	r3, [r7, #16]
 8007ccc:	e853 3f00 	ldrex	r3, [r3]
 8007cd0:	60fb      	str	r3, [r7, #12]
 8007cd2:	68fb      	ldr	r3, [r7, #12]
 8007cd4:	f023 0310 	bic.w	r3, r3, #16
 8007cd8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	461a      	mov	r2, r3
 8007ce2:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8007ce6:	61fb      	str	r3, [r7, #28]
 8007ce8:	61ba      	str	r2, [r7, #24]
 8007cea:	69b9      	ldr	r1, [r7, #24]
 8007cec:	69fa      	ldr	r2, [r7, #28]
 8007cee:	e841 2300 	strex	r3, r2, [r1]
 8007cf2:	617b      	str	r3, [r7, #20]
 8007cf4:	697b      	ldr	r3, [r7, #20]
 8007cf6:	2b00      	cmp	r3, #0
 8007cf8:	d1e4      	bne.n	8007cc4 <HAL_UART_IRQHandler+0x564>
 8007cfa:	687b      	ldr	r3, [r7, #4]
 8007cfc:	2202      	movs	r2, #2
 8007cfe:	671a      	str	r2, [r3, #112]	@ 0x70
 8007d00:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007d04:	4619      	mov	r1, r3
 8007d06:	6878      	ldr	r0, [r7, #4]
 8007d08:	f000 f880 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8007d0c:	e063      	b.n	8007dd6 <HAL_UART_IRQHandler+0x676>
 8007d0e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007d12:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007d16:	2b00      	cmp	r3, #0
 8007d18:	d00e      	beq.n	8007d38 <HAL_UART_IRQHandler+0x5d8>
 8007d1a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007d1e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007d22:	2b00      	cmp	r3, #0
 8007d24:	d008      	beq.n	8007d38 <HAL_UART_IRQHandler+0x5d8>
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8007d2e:	621a      	str	r2, [r3, #32]
 8007d30:	6878      	ldr	r0, [r7, #4]
 8007d32:	f001 fbe3 	bl	80094fc <HAL_UARTEx_WakeupCallback>
 8007d36:	e051      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007d38:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007d3c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	d014      	beq.n	8007d6e <HAL_UART_IRQHandler+0x60e>
 8007d44:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007d48:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007d4c:	2b00      	cmp	r3, #0
 8007d4e:	d105      	bne.n	8007d5c <HAL_UART_IRQHandler+0x5fc>
 8007d50:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007d54:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007d58:	2b00      	cmp	r3, #0
 8007d5a:	d008      	beq.n	8007d6e <HAL_UART_IRQHandler+0x60e>
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8007d60:	2b00      	cmp	r3, #0
 8007d62:	d03a      	beq.n	8007dda <HAL_UART_IRQHandler+0x67a>
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8007d68:	6878      	ldr	r0, [r7, #4]
 8007d6a:	4798      	blx	r3
 8007d6c:	e035      	b.n	8007dda <HAL_UART_IRQHandler+0x67a>
 8007d6e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007d72:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	d009      	beq.n	8007d8e <HAL_UART_IRQHandler+0x62e>
 8007d7a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007d7e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007d82:	2b00      	cmp	r3, #0
 8007d84:	d003      	beq.n	8007d8e <HAL_UART_IRQHandler+0x62e>
 8007d86:	6878      	ldr	r0, [r7, #4]
 8007d88:	f000 fe6c 	bl	8008a64 <UART_EndTransmit_IT>
 8007d8c:	e026      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007d8e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007d92:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007d96:	2b00      	cmp	r3, #0
 8007d98:	d009      	beq.n	8007dae <HAL_UART_IRQHandler+0x64e>
 8007d9a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007d9e:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8007da2:	2b00      	cmp	r3, #0
 8007da4:	d003      	beq.n	8007dae <HAL_UART_IRQHandler+0x64e>
 8007da6:	6878      	ldr	r0, [r7, #4]
 8007da8:	f001 fbbc 	bl	8009524 <HAL_UARTEx_TxFifoEmptyCallback>
 8007dac:	e016      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007db2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	d010      	beq.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dba:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007dbe:	2b00      	cmp	r3, #0
 8007dc0:	da0c      	bge.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dc2:	6878      	ldr	r0, [r7, #4]
 8007dc4:	f001 fba4 	bl	8009510 <HAL_UARTEx_RxFifoFullCallback>
 8007dc8:	e008      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dca:	bf00      	nop
 8007dcc:	e006      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dce:	bf00      	nop
 8007dd0:	e004      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dd2:	bf00      	nop
 8007dd4:	e002      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dd6:	bf00      	nop
 8007dd8:	e000      	b.n	8007ddc <HAL_UART_IRQHandler+0x67c>
 8007dda:	bf00      	nop
 8007ddc:	37e8      	adds	r7, #232	@ 0xe8
 8007dde:	46bd      	mov	sp, r7
 8007de0:	bd80      	pop	{r7, pc}
 8007de2:	bf00      	nop

08007de4 <HAL_UART_TxCpltCallback>:
 8007de4:	b480      	push	{r7}
 8007de6:	b083      	sub	sp, #12
 8007de8:	af00      	add	r7, sp, #0
 8007dea:	6078      	str	r0, [r7, #4]
 8007dec:	bf00      	nop
 8007dee:	370c      	adds	r7, #12
 8007df0:	46bd      	mov	sp, r7
 8007df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007df6:	4770      	bx	lr

08007df8 <HAL_UART_ErrorCallback>:
 8007df8:	b480      	push	{r7}
 8007dfa:	b083      	sub	sp, #12
 8007dfc:	af00      	add	r7, sp, #0
 8007dfe:	6078      	str	r0, [r7, #4]
 8007e00:	bf00      	nop
 8007e02:	370c      	adds	r7, #12
 8007e04:	46bd      	mov	sp, r7
 8007e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e0a:	4770      	bx	lr

08007e0c <HAL_UARTEx_RxEventCallback>:
 8007e0c:	b480      	push	{r7}
 8007e0e:	b083      	sub	sp, #12
 8007e10:	af00      	add	r7, sp, #0
 8007e12:	6078      	str	r0, [r7, #4]
 8007e14:	460b      	mov	r3, r1
 8007e16:	807b      	strh	r3, [r7, #2]
 8007e18:	bf00      	nop
 8007e1a:	370c      	adds	r7, #12
 8007e1c:	46bd      	mov	sp, r7
 8007e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e22:	4770      	bx	lr

08007e24 <UART_SetConfig>:
 8007e24:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007e28:	b08c      	sub	sp, #48	@ 0x30
 8007e2a:	af00      	add	r7, sp, #0
 8007e2c:	6178      	str	r0, [r7, #20]
 8007e2e:	2300      	movs	r3, #0
 8007e30:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8007e34:	697b      	ldr	r3, [r7, #20]
 8007e36:	689a      	ldr	r2, [r3, #8]
 8007e38:	697b      	ldr	r3, [r7, #20]
 8007e3a:	691b      	ldr	r3, [r3, #16]
 8007e3c:	431a      	orrs	r2, r3
 8007e3e:	697b      	ldr	r3, [r7, #20]
 8007e40:	695b      	ldr	r3, [r3, #20]
 8007e42:	431a      	orrs	r2, r3
 8007e44:	697b      	ldr	r3, [r7, #20]
 8007e46:	69db      	ldr	r3, [r3, #28]
 8007e48:	4313      	orrs	r3, r2
 8007e4a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007e4c:	697b      	ldr	r3, [r7, #20]
 8007e4e:	681b      	ldr	r3, [r3, #0]
 8007e50:	681a      	ldr	r2, [r3, #0]
 8007e52:	4bab      	ldr	r3, [pc, #684]	@ (8008100 <UART_SetConfig+0x2dc>)
 8007e54:	4013      	ands	r3, r2
 8007e56:	697a      	ldr	r2, [r7, #20]
 8007e58:	6812      	ldr	r2, [r2, #0]
 8007e5a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007e5c:	430b      	orrs	r3, r1
 8007e5e:	6013      	str	r3, [r2, #0]
 8007e60:	697b      	ldr	r3, [r7, #20]
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	685b      	ldr	r3, [r3, #4]
 8007e66:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8007e6a:	697b      	ldr	r3, [r7, #20]
 8007e6c:	68da      	ldr	r2, [r3, #12]
 8007e6e:	697b      	ldr	r3, [r7, #20]
 8007e70:	681b      	ldr	r3, [r3, #0]
 8007e72:	430a      	orrs	r2, r1
 8007e74:	605a      	str	r2, [r3, #4]
 8007e76:	697b      	ldr	r3, [r7, #20]
 8007e78:	699b      	ldr	r3, [r3, #24]
 8007e7a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007e7c:	697b      	ldr	r3, [r7, #20]
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	4aa0      	ldr	r2, [pc, #640]	@ (8008104 <UART_SetConfig+0x2e0>)
 8007e82:	4293      	cmp	r3, r2
 8007e84:	d004      	beq.n	8007e90 <UART_SetConfig+0x6c>
 8007e86:	697b      	ldr	r3, [r7, #20]
 8007e88:	6a1b      	ldr	r3, [r3, #32]
 8007e8a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007e8c:	4313      	orrs	r3, r2
 8007e8e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007e90:	697b      	ldr	r3, [r7, #20]
 8007e92:	681b      	ldr	r3, [r3, #0]
 8007e94:	689b      	ldr	r3, [r3, #8]
 8007e96:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 8007e9a:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 8007e9e:	697a      	ldr	r2, [r7, #20]
 8007ea0:	6812      	ldr	r2, [r2, #0]
 8007ea2:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007ea4:	430b      	orrs	r3, r1
 8007ea6:	6093      	str	r3, [r2, #8]
 8007ea8:	697b      	ldr	r3, [r7, #20]
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007eae:	f023 010f 	bic.w	r1, r3, #15
 8007eb2:	697b      	ldr	r3, [r7, #20]
 8007eb4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8007eb6:	697b      	ldr	r3, [r7, #20]
 8007eb8:	681b      	ldr	r3, [r3, #0]
 8007eba:	430a      	orrs	r2, r1
 8007ebc:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007ebe:	697b      	ldr	r3, [r7, #20]
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	4a91      	ldr	r2, [pc, #580]	@ (8008108 <UART_SetConfig+0x2e4>)
 8007ec4:	4293      	cmp	r3, r2
 8007ec6:	d125      	bne.n	8007f14 <UART_SetConfig+0xf0>
 8007ec8:	4b90      	ldr	r3, [pc, #576]	@ (800810c <UART_SetConfig+0x2e8>)
 8007eca:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007ece:	f003 0303 	and.w	r3, r3, #3
 8007ed2:	2b03      	cmp	r3, #3
 8007ed4:	d81a      	bhi.n	8007f0c <UART_SetConfig+0xe8>
 8007ed6:	a201      	add	r2, pc, #4	@ (adr r2, 8007edc <UART_SetConfig+0xb8>)
 8007ed8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007edc:	08007eed 	.word	0x08007eed
 8007ee0:	08007efd 	.word	0x08007efd
 8007ee4:	08007ef5 	.word	0x08007ef5
 8007ee8:	08007f05 	.word	0x08007f05
 8007eec:	2301      	movs	r3, #1
 8007eee:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007ef2:	e0d6      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007ef4:	2302      	movs	r3, #2
 8007ef6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007efa:	e0d2      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007efc:	2304      	movs	r3, #4
 8007efe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f02:	e0ce      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f04:	2308      	movs	r3, #8
 8007f06:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f0a:	e0ca      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f0c:	2310      	movs	r3, #16
 8007f0e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f12:	e0c6      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f14:	697b      	ldr	r3, [r7, #20]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	4a7d      	ldr	r2, [pc, #500]	@ (8008110 <UART_SetConfig+0x2ec>)
 8007f1a:	4293      	cmp	r3, r2
 8007f1c:	d138      	bne.n	8007f90 <UART_SetConfig+0x16c>
 8007f1e:	4b7b      	ldr	r3, [pc, #492]	@ (800810c <UART_SetConfig+0x2e8>)
 8007f20:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007f24:	f003 030c 	and.w	r3, r3, #12
 8007f28:	2b0c      	cmp	r3, #12
 8007f2a:	d82d      	bhi.n	8007f88 <UART_SetConfig+0x164>
 8007f2c:	a201      	add	r2, pc, #4	@ (adr r2, 8007f34 <UART_SetConfig+0x110>)
 8007f2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007f32:	bf00      	nop
 8007f34:	08007f69 	.word	0x08007f69
 8007f38:	08007f89 	.word	0x08007f89
 8007f3c:	08007f89 	.word	0x08007f89
 8007f40:	08007f89 	.word	0x08007f89
 8007f44:	08007f79 	.word	0x08007f79
 8007f48:	08007f89 	.word	0x08007f89
 8007f4c:	08007f89 	.word	0x08007f89
 8007f50:	08007f89 	.word	0x08007f89
 8007f54:	08007f71 	.word	0x08007f71
 8007f58:	08007f89 	.word	0x08007f89
 8007f5c:	08007f89 	.word	0x08007f89
 8007f60:	08007f89 	.word	0x08007f89
 8007f64:	08007f81 	.word	0x08007f81
 8007f68:	2300      	movs	r3, #0
 8007f6a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f6e:	e098      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f70:	2302      	movs	r3, #2
 8007f72:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f76:	e094      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f78:	2304      	movs	r3, #4
 8007f7a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f7e:	e090      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f80:	2308      	movs	r3, #8
 8007f82:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f86:	e08c      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f88:	2310      	movs	r3, #16
 8007f8a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007f8e:	e088      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007f90:	697b      	ldr	r3, [r7, #20]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	4a5f      	ldr	r2, [pc, #380]	@ (8008114 <UART_SetConfig+0x2f0>)
 8007f96:	4293      	cmp	r3, r2
 8007f98:	d125      	bne.n	8007fe6 <UART_SetConfig+0x1c2>
 8007f9a:	4b5c      	ldr	r3, [pc, #368]	@ (800810c <UART_SetConfig+0x2e8>)
 8007f9c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007fa0:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8007fa4:	2b30      	cmp	r3, #48	@ 0x30
 8007fa6:	d016      	beq.n	8007fd6 <UART_SetConfig+0x1b2>
 8007fa8:	2b30      	cmp	r3, #48	@ 0x30
 8007faa:	d818      	bhi.n	8007fde <UART_SetConfig+0x1ba>
 8007fac:	2b20      	cmp	r3, #32
 8007fae:	d00a      	beq.n	8007fc6 <UART_SetConfig+0x1a2>
 8007fb0:	2b20      	cmp	r3, #32
 8007fb2:	d814      	bhi.n	8007fde <UART_SetConfig+0x1ba>
 8007fb4:	2b00      	cmp	r3, #0
 8007fb6:	d002      	beq.n	8007fbe <UART_SetConfig+0x19a>
 8007fb8:	2b10      	cmp	r3, #16
 8007fba:	d008      	beq.n	8007fce <UART_SetConfig+0x1aa>
 8007fbc:	e00f      	b.n	8007fde <UART_SetConfig+0x1ba>
 8007fbe:	2300      	movs	r3, #0
 8007fc0:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007fc4:	e06d      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007fc6:	2302      	movs	r3, #2
 8007fc8:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007fcc:	e069      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007fce:	2304      	movs	r3, #4
 8007fd0:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007fd4:	e065      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007fd6:	2308      	movs	r3, #8
 8007fd8:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007fdc:	e061      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007fde:	2310      	movs	r3, #16
 8007fe0:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007fe4:	e05d      	b.n	80080a2 <UART_SetConfig+0x27e>
 8007fe6:	697b      	ldr	r3, [r7, #20]
 8007fe8:	681b      	ldr	r3, [r3, #0]
 8007fea:	4a4b      	ldr	r2, [pc, #300]	@ (8008118 <UART_SetConfig+0x2f4>)
 8007fec:	4293      	cmp	r3, r2
 8007fee:	d125      	bne.n	800803c <UART_SetConfig+0x218>
 8007ff0:	4b46      	ldr	r3, [pc, #280]	@ (800810c <UART_SetConfig+0x2e8>)
 8007ff2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007ff6:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8007ffa:	2bc0      	cmp	r3, #192	@ 0xc0
 8007ffc:	d016      	beq.n	800802c <UART_SetConfig+0x208>
 8007ffe:	2bc0      	cmp	r3, #192	@ 0xc0
 8008000:	d818      	bhi.n	8008034 <UART_SetConfig+0x210>
 8008002:	2b80      	cmp	r3, #128	@ 0x80
 8008004:	d00a      	beq.n	800801c <UART_SetConfig+0x1f8>
 8008006:	2b80      	cmp	r3, #128	@ 0x80
 8008008:	d814      	bhi.n	8008034 <UART_SetConfig+0x210>
 800800a:	2b00      	cmp	r3, #0
 800800c:	d002      	beq.n	8008014 <UART_SetConfig+0x1f0>
 800800e:	2b40      	cmp	r3, #64	@ 0x40
 8008010:	d008      	beq.n	8008024 <UART_SetConfig+0x200>
 8008012:	e00f      	b.n	8008034 <UART_SetConfig+0x210>
 8008014:	2300      	movs	r3, #0
 8008016:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800801a:	e042      	b.n	80080a2 <UART_SetConfig+0x27e>
 800801c:	2302      	movs	r3, #2
 800801e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008022:	e03e      	b.n	80080a2 <UART_SetConfig+0x27e>
 8008024:	2304      	movs	r3, #4
 8008026:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800802a:	e03a      	b.n	80080a2 <UART_SetConfig+0x27e>
 800802c:	2308      	movs	r3, #8
 800802e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008032:	e036      	b.n	80080a2 <UART_SetConfig+0x27e>
 8008034:	2310      	movs	r3, #16
 8008036:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800803a:	e032      	b.n	80080a2 <UART_SetConfig+0x27e>
 800803c:	697b      	ldr	r3, [r7, #20]
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	4a30      	ldr	r2, [pc, #192]	@ (8008104 <UART_SetConfig+0x2e0>)
 8008042:	4293      	cmp	r3, r2
 8008044:	d12a      	bne.n	800809c <UART_SetConfig+0x278>
 8008046:	4b31      	ldr	r3, [pc, #196]	@ (800810c <UART_SetConfig+0x2e8>)
 8008048:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800804c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8008050:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8008054:	d01a      	beq.n	800808c <UART_SetConfig+0x268>
 8008056:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800805a:	d81b      	bhi.n	8008094 <UART_SetConfig+0x270>
 800805c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008060:	d00c      	beq.n	800807c <UART_SetConfig+0x258>
 8008062:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8008066:	d815      	bhi.n	8008094 <UART_SetConfig+0x270>
 8008068:	2b00      	cmp	r3, #0
 800806a:	d003      	beq.n	8008074 <UART_SetConfig+0x250>
 800806c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008070:	d008      	beq.n	8008084 <UART_SetConfig+0x260>
 8008072:	e00f      	b.n	8008094 <UART_SetConfig+0x270>
 8008074:	2300      	movs	r3, #0
 8008076:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800807a:	e012      	b.n	80080a2 <UART_SetConfig+0x27e>
 800807c:	2302      	movs	r3, #2
 800807e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008082:	e00e      	b.n	80080a2 <UART_SetConfig+0x27e>
 8008084:	2304      	movs	r3, #4
 8008086:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800808a:	e00a      	b.n	80080a2 <UART_SetConfig+0x27e>
 800808c:	2308      	movs	r3, #8
 800808e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008092:	e006      	b.n	80080a2 <UART_SetConfig+0x27e>
 8008094:	2310      	movs	r3, #16
 8008096:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800809a:	e002      	b.n	80080a2 <UART_SetConfig+0x27e>
 800809c:	2310      	movs	r3, #16
 800809e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80080a2:	697b      	ldr	r3, [r7, #20]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	4a17      	ldr	r2, [pc, #92]	@ (8008104 <UART_SetConfig+0x2e0>)
 80080a8:	4293      	cmp	r3, r2
 80080aa:	f040 80a8 	bne.w	80081fe <UART_SetConfig+0x3da>
 80080ae:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80080b2:	2b08      	cmp	r3, #8
 80080b4:	d834      	bhi.n	8008120 <UART_SetConfig+0x2fc>
 80080b6:	a201      	add	r2, pc, #4	@ (adr r2, 80080bc <UART_SetConfig+0x298>)
 80080b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80080bc:	080080e1 	.word	0x080080e1
 80080c0:	08008121 	.word	0x08008121
 80080c4:	080080e9 	.word	0x080080e9
 80080c8:	08008121 	.word	0x08008121
 80080cc:	080080ef 	.word	0x080080ef
 80080d0:	08008121 	.word	0x08008121
 80080d4:	08008121 	.word	0x08008121
 80080d8:	08008121 	.word	0x08008121
 80080dc:	080080f7 	.word	0x080080f7
 80080e0:	f7fe fa7e 	bl	80065e0 <HAL_RCC_GetPCLK1Freq>
 80080e4:	6278      	str	r0, [r7, #36]	@ 0x24
 80080e6:	e021      	b.n	800812c <UART_SetConfig+0x308>
 80080e8:	4b0c      	ldr	r3, [pc, #48]	@ (800811c <UART_SetConfig+0x2f8>)
 80080ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80080ec:	e01e      	b.n	800812c <UART_SetConfig+0x308>
 80080ee:	f7fe fa09 	bl	8006504 <HAL_RCC_GetSysClockFreq>
 80080f2:	6278      	str	r0, [r7, #36]	@ 0x24
 80080f4:	e01a      	b.n	800812c <UART_SetConfig+0x308>
 80080f6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80080fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80080fc:	e016      	b.n	800812c <UART_SetConfig+0x308>
 80080fe:	bf00      	nop
 8008100:	cfff69f3 	.word	0xcfff69f3
 8008104:	40008000 	.word	0x40008000
 8008108:	40013800 	.word	0x40013800
 800810c:	40021000 	.word	0x40021000
 8008110:	40004400 	.word	0x40004400
 8008114:	40004800 	.word	0x40004800
 8008118:	40004c00 	.word	0x40004c00
 800811c:	00f42400 	.word	0x00f42400
 8008120:	2300      	movs	r3, #0
 8008122:	627b      	str	r3, [r7, #36]	@ 0x24
 8008124:	2301      	movs	r3, #1
 8008126:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800812a:	bf00      	nop
 800812c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800812e:	2b00      	cmp	r3, #0
 8008130:	f000 812a 	beq.w	8008388 <UART_SetConfig+0x564>
 8008134:	697b      	ldr	r3, [r7, #20]
 8008136:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008138:	4a9e      	ldr	r2, [pc, #632]	@ (80083b4 <UART_SetConfig+0x590>)
 800813a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800813e:	461a      	mov	r2, r3
 8008140:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008142:	fbb3 f3f2 	udiv	r3, r3, r2
 8008146:	61bb      	str	r3, [r7, #24]
 8008148:	697b      	ldr	r3, [r7, #20]
 800814a:	685a      	ldr	r2, [r3, #4]
 800814c:	4613      	mov	r3, r2
 800814e:	005b      	lsls	r3, r3, #1
 8008150:	4413      	add	r3, r2
 8008152:	69ba      	ldr	r2, [r7, #24]
 8008154:	429a      	cmp	r2, r3
 8008156:	d305      	bcc.n	8008164 <UART_SetConfig+0x340>
 8008158:	697b      	ldr	r3, [r7, #20]
 800815a:	685b      	ldr	r3, [r3, #4]
 800815c:	031b      	lsls	r3, r3, #12
 800815e:	69ba      	ldr	r2, [r7, #24]
 8008160:	429a      	cmp	r2, r3
 8008162:	d903      	bls.n	800816c <UART_SetConfig+0x348>
 8008164:	2301      	movs	r3, #1
 8008166:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800816a:	e10d      	b.n	8008388 <UART_SetConfig+0x564>
 800816c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800816e:	2200      	movs	r2, #0
 8008170:	60bb      	str	r3, [r7, #8]
 8008172:	60fa      	str	r2, [r7, #12]
 8008174:	697b      	ldr	r3, [r7, #20]
 8008176:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008178:	4a8e      	ldr	r2, [pc, #568]	@ (80083b4 <UART_SetConfig+0x590>)
 800817a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800817e:	b29b      	uxth	r3, r3
 8008180:	2200      	movs	r2, #0
 8008182:	603b      	str	r3, [r7, #0]
 8008184:	607a      	str	r2, [r7, #4]
 8008186:	e9d7 2300 	ldrd	r2, r3, [r7]
 800818a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800818e:	f7f8 fd65 	bl	8000c5c <__aeabi_uldivmod>
 8008192:	4602      	mov	r2, r0
 8008194:	460b      	mov	r3, r1
 8008196:	4610      	mov	r0, r2
 8008198:	4619      	mov	r1, r3
 800819a:	f04f 0200 	mov.w	r2, #0
 800819e:	f04f 0300 	mov.w	r3, #0
 80081a2:	020b      	lsls	r3, r1, #8
 80081a4:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80081a8:	0202      	lsls	r2, r0, #8
 80081aa:	6979      	ldr	r1, [r7, #20]
 80081ac:	6849      	ldr	r1, [r1, #4]
 80081ae:	0849      	lsrs	r1, r1, #1
 80081b0:	2000      	movs	r0, #0
 80081b2:	460c      	mov	r4, r1
 80081b4:	4605      	mov	r5, r0
 80081b6:	eb12 0804 	adds.w	r8, r2, r4
 80081ba:	eb43 0905 	adc.w	r9, r3, r5
 80081be:	697b      	ldr	r3, [r7, #20]
 80081c0:	685b      	ldr	r3, [r3, #4]
 80081c2:	2200      	movs	r2, #0
 80081c4:	469a      	mov	sl, r3
 80081c6:	4693      	mov	fp, r2
 80081c8:	4652      	mov	r2, sl
 80081ca:	465b      	mov	r3, fp
 80081cc:	4640      	mov	r0, r8
 80081ce:	4649      	mov	r1, r9
 80081d0:	f7f8 fd44 	bl	8000c5c <__aeabi_uldivmod>
 80081d4:	4602      	mov	r2, r0
 80081d6:	460b      	mov	r3, r1
 80081d8:	4613      	mov	r3, r2
 80081da:	623b      	str	r3, [r7, #32]
 80081dc:	6a3b      	ldr	r3, [r7, #32]
 80081de:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80081e2:	d308      	bcc.n	80081f6 <UART_SetConfig+0x3d2>
 80081e4:	6a3b      	ldr	r3, [r7, #32]
 80081e6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80081ea:	d204      	bcs.n	80081f6 <UART_SetConfig+0x3d2>
 80081ec:	697b      	ldr	r3, [r7, #20]
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	6a3a      	ldr	r2, [r7, #32]
 80081f2:	60da      	str	r2, [r3, #12]
 80081f4:	e0c8      	b.n	8008388 <UART_SetConfig+0x564>
 80081f6:	2301      	movs	r3, #1
 80081f8:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80081fc:	e0c4      	b.n	8008388 <UART_SetConfig+0x564>
 80081fe:	697b      	ldr	r3, [r7, #20]
 8008200:	69db      	ldr	r3, [r3, #28]
 8008202:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008206:	d167      	bne.n	80082d8 <UART_SetConfig+0x4b4>
 8008208:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800820c:	2b08      	cmp	r3, #8
 800820e:	d828      	bhi.n	8008262 <UART_SetConfig+0x43e>
 8008210:	a201      	add	r2, pc, #4	@ (adr r2, 8008218 <UART_SetConfig+0x3f4>)
 8008212:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008216:	bf00      	nop
 8008218:	0800823d 	.word	0x0800823d
 800821c:	08008245 	.word	0x08008245
 8008220:	0800824d 	.word	0x0800824d
 8008224:	08008263 	.word	0x08008263
 8008228:	08008253 	.word	0x08008253
 800822c:	08008263 	.word	0x08008263
 8008230:	08008263 	.word	0x08008263
 8008234:	08008263 	.word	0x08008263
 8008238:	0800825b 	.word	0x0800825b
 800823c:	f7fe f9d0 	bl	80065e0 <HAL_RCC_GetPCLK1Freq>
 8008240:	6278      	str	r0, [r7, #36]	@ 0x24
 8008242:	e014      	b.n	800826e <UART_SetConfig+0x44a>
 8008244:	f7fe f9e2 	bl	800660c <HAL_RCC_GetPCLK2Freq>
 8008248:	6278      	str	r0, [r7, #36]	@ 0x24
 800824a:	e010      	b.n	800826e <UART_SetConfig+0x44a>
 800824c:	4b5a      	ldr	r3, [pc, #360]	@ (80083b8 <UART_SetConfig+0x594>)
 800824e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008250:	e00d      	b.n	800826e <UART_SetConfig+0x44a>
 8008252:	f7fe f957 	bl	8006504 <HAL_RCC_GetSysClockFreq>
 8008256:	6278      	str	r0, [r7, #36]	@ 0x24
 8008258:	e009      	b.n	800826e <UART_SetConfig+0x44a>
 800825a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800825e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008260:	e005      	b.n	800826e <UART_SetConfig+0x44a>
 8008262:	2300      	movs	r3, #0
 8008264:	627b      	str	r3, [r7, #36]	@ 0x24
 8008266:	2301      	movs	r3, #1
 8008268:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800826c:	bf00      	nop
 800826e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008270:	2b00      	cmp	r3, #0
 8008272:	f000 8089 	beq.w	8008388 <UART_SetConfig+0x564>
 8008276:	697b      	ldr	r3, [r7, #20]
 8008278:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800827a:	4a4e      	ldr	r2, [pc, #312]	@ (80083b4 <UART_SetConfig+0x590>)
 800827c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008280:	461a      	mov	r2, r3
 8008282:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008284:	fbb3 f3f2 	udiv	r3, r3, r2
 8008288:	005a      	lsls	r2, r3, #1
 800828a:	697b      	ldr	r3, [r7, #20]
 800828c:	685b      	ldr	r3, [r3, #4]
 800828e:	085b      	lsrs	r3, r3, #1
 8008290:	441a      	add	r2, r3
 8008292:	697b      	ldr	r3, [r7, #20]
 8008294:	685b      	ldr	r3, [r3, #4]
 8008296:	fbb2 f3f3 	udiv	r3, r2, r3
 800829a:	623b      	str	r3, [r7, #32]
 800829c:	6a3b      	ldr	r3, [r7, #32]
 800829e:	2b0f      	cmp	r3, #15
 80082a0:	d916      	bls.n	80082d0 <UART_SetConfig+0x4ac>
 80082a2:	6a3b      	ldr	r3, [r7, #32]
 80082a4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80082a8:	d212      	bcs.n	80082d0 <UART_SetConfig+0x4ac>
 80082aa:	6a3b      	ldr	r3, [r7, #32]
 80082ac:	b29b      	uxth	r3, r3
 80082ae:	f023 030f 	bic.w	r3, r3, #15
 80082b2:	83fb      	strh	r3, [r7, #30]
 80082b4:	6a3b      	ldr	r3, [r7, #32]
 80082b6:	085b      	lsrs	r3, r3, #1
 80082b8:	b29b      	uxth	r3, r3
 80082ba:	f003 0307 	and.w	r3, r3, #7
 80082be:	b29a      	uxth	r2, r3
 80082c0:	8bfb      	ldrh	r3, [r7, #30]
 80082c2:	4313      	orrs	r3, r2
 80082c4:	83fb      	strh	r3, [r7, #30]
 80082c6:	697b      	ldr	r3, [r7, #20]
 80082c8:	681b      	ldr	r3, [r3, #0]
 80082ca:	8bfa      	ldrh	r2, [r7, #30]
 80082cc:	60da      	str	r2, [r3, #12]
 80082ce:	e05b      	b.n	8008388 <UART_SetConfig+0x564>
 80082d0:	2301      	movs	r3, #1
 80082d2:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80082d6:	e057      	b.n	8008388 <UART_SetConfig+0x564>
 80082d8:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80082dc:	2b08      	cmp	r3, #8
 80082de:	d828      	bhi.n	8008332 <UART_SetConfig+0x50e>
 80082e0:	a201      	add	r2, pc, #4	@ (adr r2, 80082e8 <UART_SetConfig+0x4c4>)
 80082e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80082e6:	bf00      	nop
 80082e8:	0800830d 	.word	0x0800830d
 80082ec:	08008315 	.word	0x08008315
 80082f0:	0800831d 	.word	0x0800831d
 80082f4:	08008333 	.word	0x08008333
 80082f8:	08008323 	.word	0x08008323
 80082fc:	08008333 	.word	0x08008333
 8008300:	08008333 	.word	0x08008333
 8008304:	08008333 	.word	0x08008333
 8008308:	0800832b 	.word	0x0800832b
 800830c:	f7fe f968 	bl	80065e0 <HAL_RCC_GetPCLK1Freq>
 8008310:	6278      	str	r0, [r7, #36]	@ 0x24
 8008312:	e014      	b.n	800833e <UART_SetConfig+0x51a>
 8008314:	f7fe f97a 	bl	800660c <HAL_RCC_GetPCLK2Freq>
 8008318:	6278      	str	r0, [r7, #36]	@ 0x24
 800831a:	e010      	b.n	800833e <UART_SetConfig+0x51a>
 800831c:	4b26      	ldr	r3, [pc, #152]	@ (80083b8 <UART_SetConfig+0x594>)
 800831e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008320:	e00d      	b.n	800833e <UART_SetConfig+0x51a>
 8008322:	f7fe f8ef 	bl	8006504 <HAL_RCC_GetSysClockFreq>
 8008326:	6278      	str	r0, [r7, #36]	@ 0x24
 8008328:	e009      	b.n	800833e <UART_SetConfig+0x51a>
 800832a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800832e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008330:	e005      	b.n	800833e <UART_SetConfig+0x51a>
 8008332:	2300      	movs	r3, #0
 8008334:	627b      	str	r3, [r7, #36]	@ 0x24
 8008336:	2301      	movs	r3, #1
 8008338:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800833c:	bf00      	nop
 800833e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008340:	2b00      	cmp	r3, #0
 8008342:	d021      	beq.n	8008388 <UART_SetConfig+0x564>
 8008344:	697b      	ldr	r3, [r7, #20]
 8008346:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008348:	4a1a      	ldr	r2, [pc, #104]	@ (80083b4 <UART_SetConfig+0x590>)
 800834a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800834e:	461a      	mov	r2, r3
 8008350:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008352:	fbb3 f2f2 	udiv	r2, r3, r2
 8008356:	697b      	ldr	r3, [r7, #20]
 8008358:	685b      	ldr	r3, [r3, #4]
 800835a:	085b      	lsrs	r3, r3, #1
 800835c:	441a      	add	r2, r3
 800835e:	697b      	ldr	r3, [r7, #20]
 8008360:	685b      	ldr	r3, [r3, #4]
 8008362:	fbb2 f3f3 	udiv	r3, r2, r3
 8008366:	623b      	str	r3, [r7, #32]
 8008368:	6a3b      	ldr	r3, [r7, #32]
 800836a:	2b0f      	cmp	r3, #15
 800836c:	d909      	bls.n	8008382 <UART_SetConfig+0x55e>
 800836e:	6a3b      	ldr	r3, [r7, #32]
 8008370:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008374:	d205      	bcs.n	8008382 <UART_SetConfig+0x55e>
 8008376:	6a3b      	ldr	r3, [r7, #32]
 8008378:	b29a      	uxth	r2, r3
 800837a:	697b      	ldr	r3, [r7, #20]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	60da      	str	r2, [r3, #12]
 8008380:	e002      	b.n	8008388 <UART_SetConfig+0x564>
 8008382:	2301      	movs	r3, #1
 8008384:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008388:	697b      	ldr	r3, [r7, #20]
 800838a:	2201      	movs	r2, #1
 800838c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8008390:	697b      	ldr	r3, [r7, #20]
 8008392:	2201      	movs	r2, #1
 8008394:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8008398:	697b      	ldr	r3, [r7, #20]
 800839a:	2200      	movs	r2, #0
 800839c:	675a      	str	r2, [r3, #116]	@ 0x74
 800839e:	697b      	ldr	r3, [r7, #20]
 80083a0:	2200      	movs	r2, #0
 80083a2:	679a      	str	r2, [r3, #120]	@ 0x78
 80083a4:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 80083a8:	4618      	mov	r0, r3
 80083aa:	3730      	adds	r7, #48	@ 0x30
 80083ac:	46bd      	mov	sp, r7
 80083ae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80083b2:	bf00      	nop
 80083b4:	0800c9cc 	.word	0x0800c9cc
 80083b8:	00f42400 	.word	0x00f42400

080083bc <UART_AdvFeatureConfig>:
 80083bc:	b480      	push	{r7}
 80083be:	b083      	sub	sp, #12
 80083c0:	af00      	add	r7, sp, #0
 80083c2:	6078      	str	r0, [r7, #4]
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80083c8:	f003 0308 	and.w	r3, r3, #8
 80083cc:	2b00      	cmp	r3, #0
 80083ce:	d00a      	beq.n	80083e6 <UART_AdvFeatureConfig+0x2a>
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	685b      	ldr	r3, [r3, #4]
 80083d6:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	430a      	orrs	r2, r1
 80083e4:	605a      	str	r2, [r3, #4]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80083ea:	f003 0301 	and.w	r3, r3, #1
 80083ee:	2b00      	cmp	r3, #0
 80083f0:	d00a      	beq.n	8008408 <UART_AdvFeatureConfig+0x4c>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	685b      	ldr	r3, [r3, #4]
 80083f8:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80083fc:	687b      	ldr	r3, [r7, #4]
 80083fe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	430a      	orrs	r2, r1
 8008406:	605a      	str	r2, [r3, #4]
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800840c:	f003 0302 	and.w	r3, r3, #2
 8008410:	2b00      	cmp	r3, #0
 8008412:	d00a      	beq.n	800842a <UART_AdvFeatureConfig+0x6e>
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	681b      	ldr	r3, [r3, #0]
 8008418:	685b      	ldr	r3, [r3, #4]
 800841a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	430a      	orrs	r2, r1
 8008428:	605a      	str	r2, [r3, #4]
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800842e:	f003 0304 	and.w	r3, r3, #4
 8008432:	2b00      	cmp	r3, #0
 8008434:	d00a      	beq.n	800844c <UART_AdvFeatureConfig+0x90>
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	681b      	ldr	r3, [r3, #0]
 800843a:	685b      	ldr	r3, [r3, #4]
 800843c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8008440:	687b      	ldr	r3, [r7, #4]
 8008442:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	430a      	orrs	r2, r1
 800844a:	605a      	str	r2, [r3, #4]
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008450:	f003 0310 	and.w	r3, r3, #16
 8008454:	2b00      	cmp	r3, #0
 8008456:	d00a      	beq.n	800846e <UART_AdvFeatureConfig+0xb2>
 8008458:	687b      	ldr	r3, [r7, #4]
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	689b      	ldr	r3, [r3, #8]
 800845e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	430a      	orrs	r2, r1
 800846c:	609a      	str	r2, [r3, #8]
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008472:	f003 0320 	and.w	r3, r3, #32
 8008476:	2b00      	cmp	r3, #0
 8008478:	d00a      	beq.n	8008490 <UART_AdvFeatureConfig+0xd4>
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	681b      	ldr	r3, [r3, #0]
 800847e:	689b      	ldr	r3, [r3, #8]
 8008480:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	681b      	ldr	r3, [r3, #0]
 800848c:	430a      	orrs	r2, r1
 800848e:	609a      	str	r2, [r3, #8]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008494:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008498:	2b00      	cmp	r3, #0
 800849a:	d01a      	beq.n	80084d2 <UART_AdvFeatureConfig+0x116>
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	685b      	ldr	r3, [r3, #4]
 80084a2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	430a      	orrs	r2, r1
 80084b0:	605a      	str	r2, [r3, #4]
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80084b6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80084ba:	d10a      	bne.n	80084d2 <UART_AdvFeatureConfig+0x116>
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	685b      	ldr	r3, [r3, #4]
 80084c2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	430a      	orrs	r2, r1
 80084d0:	605a      	str	r2, [r3, #4]
 80084d2:	687b      	ldr	r3, [r7, #4]
 80084d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80084d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d00a      	beq.n	80084f4 <UART_AdvFeatureConfig+0x138>
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	681b      	ldr	r3, [r3, #0]
 80084e2:	685b      	ldr	r3, [r3, #4]
 80084e4:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 80084e8:	687b      	ldr	r3, [r7, #4]
 80084ea:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	681b      	ldr	r3, [r3, #0]
 80084f0:	430a      	orrs	r2, r1
 80084f2:	605a      	str	r2, [r3, #4]
 80084f4:	bf00      	nop
 80084f6:	370c      	adds	r7, #12
 80084f8:	46bd      	mov	sp, r7
 80084fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fe:	4770      	bx	lr

08008500 <UART_CheckIdleState>:
 8008500:	b580      	push	{r7, lr}
 8008502:	b098      	sub	sp, #96	@ 0x60
 8008504:	af02      	add	r7, sp, #8
 8008506:	6078      	str	r0, [r7, #4]
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	2200      	movs	r2, #0
 800850c:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008510:	f7fa ff0e 	bl	8003330 <HAL_GetTick>
 8008514:	6578      	str	r0, [r7, #84]	@ 0x54
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	681b      	ldr	r3, [r3, #0]
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	f003 0308 	and.w	r3, r3, #8
 8008520:	2b08      	cmp	r3, #8
 8008522:	d12f      	bne.n	8008584 <UART_CheckIdleState+0x84>
 8008524:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008528:	9300      	str	r3, [sp, #0]
 800852a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800852c:	2200      	movs	r2, #0
 800852e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8008532:	6878      	ldr	r0, [r7, #4]
 8008534:	f000 f88e 	bl	8008654 <UART_WaitOnFlagUntilTimeout>
 8008538:	4603      	mov	r3, r0
 800853a:	2b00      	cmp	r3, #0
 800853c:	d022      	beq.n	8008584 <UART_CheckIdleState+0x84>
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008544:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008546:	e853 3f00 	ldrex	r3, [r3]
 800854a:	637b      	str	r3, [r7, #52]	@ 0x34
 800854c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800854e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008552:	653b      	str	r3, [r7, #80]	@ 0x50
 8008554:	687b      	ldr	r3, [r7, #4]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	461a      	mov	r2, r3
 800855a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800855c:	647b      	str	r3, [r7, #68]	@ 0x44
 800855e:	643a      	str	r2, [r7, #64]	@ 0x40
 8008560:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8008562:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008564:	e841 2300 	strex	r3, r2, [r1]
 8008568:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800856a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800856c:	2b00      	cmp	r3, #0
 800856e:	d1e6      	bne.n	800853e <UART_CheckIdleState+0x3e>
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	2220      	movs	r2, #32
 8008574:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	2200      	movs	r2, #0
 800857c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8008580:	2303      	movs	r3, #3
 8008582:	e063      	b.n	800864c <UART_CheckIdleState+0x14c>
 8008584:	687b      	ldr	r3, [r7, #4]
 8008586:	681b      	ldr	r3, [r3, #0]
 8008588:	681b      	ldr	r3, [r3, #0]
 800858a:	f003 0304 	and.w	r3, r3, #4
 800858e:	2b04      	cmp	r3, #4
 8008590:	d149      	bne.n	8008626 <UART_CheckIdleState+0x126>
 8008592:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008596:	9300      	str	r3, [sp, #0]
 8008598:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800859a:	2200      	movs	r2, #0
 800859c:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80085a0:	6878      	ldr	r0, [r7, #4]
 80085a2:	f000 f857 	bl	8008654 <UART_WaitOnFlagUntilTimeout>
 80085a6:	4603      	mov	r3, r0
 80085a8:	2b00      	cmp	r3, #0
 80085aa:	d03c      	beq.n	8008626 <UART_CheckIdleState+0x126>
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	681b      	ldr	r3, [r3, #0]
 80085b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80085b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80085b4:	e853 3f00 	ldrex	r3, [r3]
 80085b8:	623b      	str	r3, [r7, #32]
 80085ba:	6a3b      	ldr	r3, [r7, #32]
 80085bc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80085c0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	461a      	mov	r2, r3
 80085c8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80085ca:	633b      	str	r3, [r7, #48]	@ 0x30
 80085cc:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80085ce:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80085d0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80085d2:	e841 2300 	strex	r3, r2, [r1]
 80085d6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80085d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80085da:	2b00      	cmp	r3, #0
 80085dc:	d1e6      	bne.n	80085ac <UART_CheckIdleState+0xac>
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	681b      	ldr	r3, [r3, #0]
 80085e2:	3308      	adds	r3, #8
 80085e4:	613b      	str	r3, [r7, #16]
 80085e6:	693b      	ldr	r3, [r7, #16]
 80085e8:	e853 3f00 	ldrex	r3, [r3]
 80085ec:	60fb      	str	r3, [r7, #12]
 80085ee:	68fb      	ldr	r3, [r7, #12]
 80085f0:	f023 0301 	bic.w	r3, r3, #1
 80085f4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80085f6:	687b      	ldr	r3, [r7, #4]
 80085f8:	681b      	ldr	r3, [r3, #0]
 80085fa:	3308      	adds	r3, #8
 80085fc:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80085fe:	61fa      	str	r2, [r7, #28]
 8008600:	61bb      	str	r3, [r7, #24]
 8008602:	69b9      	ldr	r1, [r7, #24]
 8008604:	69fa      	ldr	r2, [r7, #28]
 8008606:	e841 2300 	strex	r3, r2, [r1]
 800860a:	617b      	str	r3, [r7, #20]
 800860c:	697b      	ldr	r3, [r7, #20]
 800860e:	2b00      	cmp	r3, #0
 8008610:	d1e5      	bne.n	80085de <UART_CheckIdleState+0xde>
 8008612:	687b      	ldr	r3, [r7, #4]
 8008614:	2220      	movs	r2, #32
 8008616:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	2200      	movs	r2, #0
 800861e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8008622:	2303      	movs	r3, #3
 8008624:	e012      	b.n	800864c <UART_CheckIdleState+0x14c>
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	2220      	movs	r2, #32
 800862a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800862e:	687b      	ldr	r3, [r7, #4]
 8008630:	2220      	movs	r2, #32
 8008632:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	2200      	movs	r2, #0
 800863a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	2200      	movs	r2, #0
 8008640:	671a      	str	r2, [r3, #112]	@ 0x70
 8008642:	687b      	ldr	r3, [r7, #4]
 8008644:	2200      	movs	r2, #0
 8008646:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800864a:	2300      	movs	r3, #0
 800864c:	4618      	mov	r0, r3
 800864e:	3758      	adds	r7, #88	@ 0x58
 8008650:	46bd      	mov	sp, r7
 8008652:	bd80      	pop	{r7, pc}

08008654 <UART_WaitOnFlagUntilTimeout>:
 8008654:	b580      	push	{r7, lr}
 8008656:	b084      	sub	sp, #16
 8008658:	af00      	add	r7, sp, #0
 800865a:	60f8      	str	r0, [r7, #12]
 800865c:	60b9      	str	r1, [r7, #8]
 800865e:	603b      	str	r3, [r7, #0]
 8008660:	4613      	mov	r3, r2
 8008662:	71fb      	strb	r3, [r7, #7]
 8008664:	e04f      	b.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008666:	69bb      	ldr	r3, [r7, #24]
 8008668:	f1b3 3fff 	cmp.w	r3, #4294967295
 800866c:	d04b      	beq.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 800866e:	f7fa fe5f 	bl	8003330 <HAL_GetTick>
 8008672:	4602      	mov	r2, r0
 8008674:	683b      	ldr	r3, [r7, #0]
 8008676:	1ad3      	subs	r3, r2, r3
 8008678:	69ba      	ldr	r2, [r7, #24]
 800867a:	429a      	cmp	r2, r3
 800867c:	d302      	bcc.n	8008684 <UART_WaitOnFlagUntilTimeout+0x30>
 800867e:	69bb      	ldr	r3, [r7, #24]
 8008680:	2b00      	cmp	r3, #0
 8008682:	d101      	bne.n	8008688 <UART_WaitOnFlagUntilTimeout+0x34>
 8008684:	2303      	movs	r3, #3
 8008686:	e04e      	b.n	8008726 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008688:	68fb      	ldr	r3, [r7, #12]
 800868a:	681b      	ldr	r3, [r3, #0]
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	f003 0304 	and.w	r3, r3, #4
 8008692:	2b00      	cmp	r3, #0
 8008694:	d037      	beq.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008696:	68bb      	ldr	r3, [r7, #8]
 8008698:	2b80      	cmp	r3, #128	@ 0x80
 800869a:	d034      	beq.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 800869c:	68bb      	ldr	r3, [r7, #8]
 800869e:	2b40      	cmp	r3, #64	@ 0x40
 80086a0:	d031      	beq.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 80086a2:	68fb      	ldr	r3, [r7, #12]
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	69db      	ldr	r3, [r3, #28]
 80086a8:	f003 0308 	and.w	r3, r3, #8
 80086ac:	2b08      	cmp	r3, #8
 80086ae:	d110      	bne.n	80086d2 <UART_WaitOnFlagUntilTimeout+0x7e>
 80086b0:	68fb      	ldr	r3, [r7, #12]
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	2208      	movs	r2, #8
 80086b6:	621a      	str	r2, [r3, #32]
 80086b8:	68f8      	ldr	r0, [r7, #12]
 80086ba:	f000 f95b 	bl	8008974 <UART_EndRxTransfer>
 80086be:	68fb      	ldr	r3, [r7, #12]
 80086c0:	2208      	movs	r2, #8
 80086c2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80086c6:	68fb      	ldr	r3, [r7, #12]
 80086c8:	2200      	movs	r2, #0
 80086ca:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80086ce:	2301      	movs	r3, #1
 80086d0:	e029      	b.n	8008726 <UART_WaitOnFlagUntilTimeout+0xd2>
 80086d2:	68fb      	ldr	r3, [r7, #12]
 80086d4:	681b      	ldr	r3, [r3, #0]
 80086d6:	69db      	ldr	r3, [r3, #28]
 80086d8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80086dc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80086e0:	d111      	bne.n	8008706 <UART_WaitOnFlagUntilTimeout+0xb2>
 80086e2:	68fb      	ldr	r3, [r7, #12]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80086ea:	621a      	str	r2, [r3, #32]
 80086ec:	68f8      	ldr	r0, [r7, #12]
 80086ee:	f000 f941 	bl	8008974 <UART_EndRxTransfer>
 80086f2:	68fb      	ldr	r3, [r7, #12]
 80086f4:	2220      	movs	r2, #32
 80086f6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80086fa:	68fb      	ldr	r3, [r7, #12]
 80086fc:	2200      	movs	r2, #0
 80086fe:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8008702:	2303      	movs	r3, #3
 8008704:	e00f      	b.n	8008726 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	69da      	ldr	r2, [r3, #28]
 800870c:	68bb      	ldr	r3, [r7, #8]
 800870e:	4013      	ands	r3, r2
 8008710:	68ba      	ldr	r2, [r7, #8]
 8008712:	429a      	cmp	r2, r3
 8008714:	bf0c      	ite	eq
 8008716:	2301      	moveq	r3, #1
 8008718:	2300      	movne	r3, #0
 800871a:	b2db      	uxtb	r3, r3
 800871c:	461a      	mov	r2, r3
 800871e:	79fb      	ldrb	r3, [r7, #7]
 8008720:	429a      	cmp	r2, r3
 8008722:	d0a0      	beq.n	8008666 <UART_WaitOnFlagUntilTimeout+0x12>
 8008724:	2300      	movs	r3, #0
 8008726:	4618      	mov	r0, r3
 8008728:	3710      	adds	r7, #16
 800872a:	46bd      	mov	sp, r7
 800872c:	bd80      	pop	{r7, pc}
	...

08008730 <UART_Start_Receive_IT>:
 8008730:	b480      	push	{r7}
 8008732:	b0a3      	sub	sp, #140	@ 0x8c
 8008734:	af00      	add	r7, sp, #0
 8008736:	60f8      	str	r0, [r7, #12]
 8008738:	60b9      	str	r1, [r7, #8]
 800873a:	4613      	mov	r3, r2
 800873c:	80fb      	strh	r3, [r7, #6]
 800873e:	68fb      	ldr	r3, [r7, #12]
 8008740:	68ba      	ldr	r2, [r7, #8]
 8008742:	659a      	str	r2, [r3, #88]	@ 0x58
 8008744:	68fb      	ldr	r3, [r7, #12]
 8008746:	88fa      	ldrh	r2, [r7, #6]
 8008748:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800874c:	68fb      	ldr	r3, [r7, #12]
 800874e:	88fa      	ldrh	r2, [r7, #6]
 8008750:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	2200      	movs	r2, #0
 8008758:	675a      	str	r2, [r3, #116]	@ 0x74
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	689b      	ldr	r3, [r3, #8]
 800875e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008762:	d10e      	bne.n	8008782 <UART_Start_Receive_IT+0x52>
 8008764:	68fb      	ldr	r3, [r7, #12]
 8008766:	691b      	ldr	r3, [r3, #16]
 8008768:	2b00      	cmp	r3, #0
 800876a:	d105      	bne.n	8008778 <UART_Start_Receive_IT+0x48>
 800876c:	68fb      	ldr	r3, [r7, #12]
 800876e:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8008772:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8008776:	e02d      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 8008778:	68fb      	ldr	r3, [r7, #12]
 800877a:	22ff      	movs	r2, #255	@ 0xff
 800877c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8008780:	e028      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 8008782:	68fb      	ldr	r3, [r7, #12]
 8008784:	689b      	ldr	r3, [r3, #8]
 8008786:	2b00      	cmp	r3, #0
 8008788:	d10d      	bne.n	80087a6 <UART_Start_Receive_IT+0x76>
 800878a:	68fb      	ldr	r3, [r7, #12]
 800878c:	691b      	ldr	r3, [r3, #16]
 800878e:	2b00      	cmp	r3, #0
 8008790:	d104      	bne.n	800879c <UART_Start_Receive_IT+0x6c>
 8008792:	68fb      	ldr	r3, [r7, #12]
 8008794:	22ff      	movs	r2, #255	@ 0xff
 8008796:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800879a:	e01b      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 800879c:	68fb      	ldr	r3, [r7, #12]
 800879e:	227f      	movs	r2, #127	@ 0x7f
 80087a0:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 80087a4:	e016      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 80087a6:	68fb      	ldr	r3, [r7, #12]
 80087a8:	689b      	ldr	r3, [r3, #8]
 80087aa:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80087ae:	d10d      	bne.n	80087cc <UART_Start_Receive_IT+0x9c>
 80087b0:	68fb      	ldr	r3, [r7, #12]
 80087b2:	691b      	ldr	r3, [r3, #16]
 80087b4:	2b00      	cmp	r3, #0
 80087b6:	d104      	bne.n	80087c2 <UART_Start_Receive_IT+0x92>
 80087b8:	68fb      	ldr	r3, [r7, #12]
 80087ba:	227f      	movs	r2, #127	@ 0x7f
 80087bc:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 80087c0:	e008      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 80087c2:	68fb      	ldr	r3, [r7, #12]
 80087c4:	223f      	movs	r2, #63	@ 0x3f
 80087c6:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 80087ca:	e003      	b.n	80087d4 <UART_Start_Receive_IT+0xa4>
 80087cc:	68fb      	ldr	r3, [r7, #12]
 80087ce:	2200      	movs	r2, #0
 80087d0:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 80087d4:	68fb      	ldr	r3, [r7, #12]
 80087d6:	2200      	movs	r2, #0
 80087d8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80087dc:	68fb      	ldr	r3, [r7, #12]
 80087de:	2222      	movs	r2, #34	@ 0x22
 80087e0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80087e4:	68fb      	ldr	r3, [r7, #12]
 80087e6:	681b      	ldr	r3, [r3, #0]
 80087e8:	3308      	adds	r3, #8
 80087ea:	667b      	str	r3, [r7, #100]	@ 0x64
 80087ec:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80087ee:	e853 3f00 	ldrex	r3, [r3]
 80087f2:	663b      	str	r3, [r7, #96]	@ 0x60
 80087f4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80087f6:	f043 0301 	orr.w	r3, r3, #1
 80087fa:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80087fe:	68fb      	ldr	r3, [r7, #12]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	3308      	adds	r3, #8
 8008804:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 8008808:	673a      	str	r2, [r7, #112]	@ 0x70
 800880a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800880c:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 800880e:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8008810:	e841 2300 	strex	r3, r2, [r1]
 8008814:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008816:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8008818:	2b00      	cmp	r3, #0
 800881a:	d1e3      	bne.n	80087e4 <UART_Start_Receive_IT+0xb4>
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008820:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008824:	d14f      	bne.n	80088c6 <UART_Start_Receive_IT+0x196>
 8008826:	68fb      	ldr	r3, [r7, #12]
 8008828:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800882c:	88fa      	ldrh	r2, [r7, #6]
 800882e:	429a      	cmp	r2, r3
 8008830:	d349      	bcc.n	80088c6 <UART_Start_Receive_IT+0x196>
 8008832:	68fb      	ldr	r3, [r7, #12]
 8008834:	689b      	ldr	r3, [r3, #8]
 8008836:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800883a:	d107      	bne.n	800884c <UART_Start_Receive_IT+0x11c>
 800883c:	68fb      	ldr	r3, [r7, #12]
 800883e:	691b      	ldr	r3, [r3, #16]
 8008840:	2b00      	cmp	r3, #0
 8008842:	d103      	bne.n	800884c <UART_Start_Receive_IT+0x11c>
 8008844:	68fb      	ldr	r3, [r7, #12]
 8008846:	4a47      	ldr	r2, [pc, #284]	@ (8008964 <UART_Start_Receive_IT+0x234>)
 8008848:	675a      	str	r2, [r3, #116]	@ 0x74
 800884a:	e002      	b.n	8008852 <UART_Start_Receive_IT+0x122>
 800884c:	68fb      	ldr	r3, [r7, #12]
 800884e:	4a46      	ldr	r2, [pc, #280]	@ (8008968 <UART_Start_Receive_IT+0x238>)
 8008850:	675a      	str	r2, [r3, #116]	@ 0x74
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	691b      	ldr	r3, [r3, #16]
 8008856:	2b00      	cmp	r3, #0
 8008858:	d01a      	beq.n	8008890 <UART_Start_Receive_IT+0x160>
 800885a:	68fb      	ldr	r3, [r7, #12]
 800885c:	681b      	ldr	r3, [r3, #0]
 800885e:	653b      	str	r3, [r7, #80]	@ 0x50
 8008860:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008862:	e853 3f00 	ldrex	r3, [r3]
 8008866:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008868:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800886a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800886e:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8008872:	68fb      	ldr	r3, [r7, #12]
 8008874:	681b      	ldr	r3, [r3, #0]
 8008876:	461a      	mov	r2, r3
 8008878:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800887c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800887e:	65ba      	str	r2, [r7, #88]	@ 0x58
 8008880:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 8008882:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8008884:	e841 2300 	strex	r3, r2, [r1]
 8008888:	657b      	str	r3, [r7, #84]	@ 0x54
 800888a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800888c:	2b00      	cmp	r3, #0
 800888e:	d1e4      	bne.n	800885a <UART_Start_Receive_IT+0x12a>
 8008890:	68fb      	ldr	r3, [r7, #12]
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	3308      	adds	r3, #8
 8008896:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008898:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800889a:	e853 3f00 	ldrex	r3, [r3]
 800889e:	63bb      	str	r3, [r7, #56]	@ 0x38
 80088a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80088a2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80088a6:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80088a8:	68fb      	ldr	r3, [r7, #12]
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	3308      	adds	r3, #8
 80088ae:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80088b0:	64ba      	str	r2, [r7, #72]	@ 0x48
 80088b2:	647b      	str	r3, [r7, #68]	@ 0x44
 80088b4:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80088b6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80088b8:	e841 2300 	strex	r3, r2, [r1]
 80088bc:	643b      	str	r3, [r7, #64]	@ 0x40
 80088be:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d1e5      	bne.n	8008890 <UART_Start_Receive_IT+0x160>
 80088c4:	e046      	b.n	8008954 <UART_Start_Receive_IT+0x224>
 80088c6:	68fb      	ldr	r3, [r7, #12]
 80088c8:	689b      	ldr	r3, [r3, #8]
 80088ca:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80088ce:	d107      	bne.n	80088e0 <UART_Start_Receive_IT+0x1b0>
 80088d0:	68fb      	ldr	r3, [r7, #12]
 80088d2:	691b      	ldr	r3, [r3, #16]
 80088d4:	2b00      	cmp	r3, #0
 80088d6:	d103      	bne.n	80088e0 <UART_Start_Receive_IT+0x1b0>
 80088d8:	68fb      	ldr	r3, [r7, #12]
 80088da:	4a24      	ldr	r2, [pc, #144]	@ (800896c <UART_Start_Receive_IT+0x23c>)
 80088dc:	675a      	str	r2, [r3, #116]	@ 0x74
 80088de:	e002      	b.n	80088e6 <UART_Start_Receive_IT+0x1b6>
 80088e0:	68fb      	ldr	r3, [r7, #12]
 80088e2:	4a23      	ldr	r2, [pc, #140]	@ (8008970 <UART_Start_Receive_IT+0x240>)
 80088e4:	675a      	str	r2, [r3, #116]	@ 0x74
 80088e6:	68fb      	ldr	r3, [r7, #12]
 80088e8:	691b      	ldr	r3, [r3, #16]
 80088ea:	2b00      	cmp	r3, #0
 80088ec:	d019      	beq.n	8008922 <UART_Start_Receive_IT+0x1f2>
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	681b      	ldr	r3, [r3, #0]
 80088f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80088f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80088f6:	e853 3f00 	ldrex	r3, [r3]
 80088fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80088fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80088fe:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 8008902:	677b      	str	r3, [r7, #116]	@ 0x74
 8008904:	68fb      	ldr	r3, [r7, #12]
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	461a      	mov	r2, r3
 800890a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800890c:	637b      	str	r3, [r7, #52]	@ 0x34
 800890e:	633a      	str	r2, [r7, #48]	@ 0x30
 8008910:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008912:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008914:	e841 2300 	strex	r3, r2, [r1]
 8008918:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800891a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800891c:	2b00      	cmp	r3, #0
 800891e:	d1e6      	bne.n	80088ee <UART_Start_Receive_IT+0x1be>
 8008920:	e018      	b.n	8008954 <UART_Start_Receive_IT+0x224>
 8008922:	68fb      	ldr	r3, [r7, #12]
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	617b      	str	r3, [r7, #20]
 8008928:	697b      	ldr	r3, [r7, #20]
 800892a:	e853 3f00 	ldrex	r3, [r3]
 800892e:	613b      	str	r3, [r7, #16]
 8008930:	693b      	ldr	r3, [r7, #16]
 8008932:	f043 0320 	orr.w	r3, r3, #32
 8008936:	67bb      	str	r3, [r7, #120]	@ 0x78
 8008938:	68fb      	ldr	r3, [r7, #12]
 800893a:	681b      	ldr	r3, [r3, #0]
 800893c:	461a      	mov	r2, r3
 800893e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8008940:	623b      	str	r3, [r7, #32]
 8008942:	61fa      	str	r2, [r7, #28]
 8008944:	69f9      	ldr	r1, [r7, #28]
 8008946:	6a3a      	ldr	r2, [r7, #32]
 8008948:	e841 2300 	strex	r3, r2, [r1]
 800894c:	61bb      	str	r3, [r7, #24]
 800894e:	69bb      	ldr	r3, [r7, #24]
 8008950:	2b00      	cmp	r3, #0
 8008952:	d1e6      	bne.n	8008922 <UART_Start_Receive_IT+0x1f2>
 8008954:	2300      	movs	r3, #0
 8008956:	4618      	mov	r0, r3
 8008958:	378c      	adds	r7, #140	@ 0x8c
 800895a:	46bd      	mov	sp, r7
 800895c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008960:	4770      	bx	lr
 8008962:	bf00      	nop
 8008964:	08009191 	.word	0x08009191
 8008968:	08008e2d 	.word	0x08008e2d
 800896c:	08008c75 	.word	0x08008c75
 8008970:	08008abd 	.word	0x08008abd

08008974 <UART_EndRxTransfer>:
 8008974:	b480      	push	{r7}
 8008976:	b095      	sub	sp, #84	@ 0x54
 8008978:	af00      	add	r7, sp, #0
 800897a:	6078      	str	r0, [r7, #4]
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	637b      	str	r3, [r7, #52]	@ 0x34
 8008982:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008984:	e853 3f00 	ldrex	r3, [r3]
 8008988:	633b      	str	r3, [r7, #48]	@ 0x30
 800898a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800898c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008990:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	681b      	ldr	r3, [r3, #0]
 8008996:	461a      	mov	r2, r3
 8008998:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800899a:	643b      	str	r3, [r7, #64]	@ 0x40
 800899c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800899e:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80089a0:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80089a2:	e841 2300 	strex	r3, r2, [r1]
 80089a6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80089a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089aa:	2b00      	cmp	r3, #0
 80089ac:	d1e6      	bne.n	800897c <UART_EndRxTransfer+0x8>
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	681b      	ldr	r3, [r3, #0]
 80089b2:	3308      	adds	r3, #8
 80089b4:	623b      	str	r3, [r7, #32]
 80089b6:	6a3b      	ldr	r3, [r7, #32]
 80089b8:	e853 3f00 	ldrex	r3, [r3]
 80089bc:	61fb      	str	r3, [r7, #28]
 80089be:	69fb      	ldr	r3, [r7, #28]
 80089c0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80089c4:	f023 0301 	bic.w	r3, r3, #1
 80089c8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	3308      	adds	r3, #8
 80089d0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80089d2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80089d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80089d6:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80089d8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80089da:	e841 2300 	strex	r3, r2, [r1]
 80089de:	627b      	str	r3, [r7, #36]	@ 0x24
 80089e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089e2:	2b00      	cmp	r3, #0
 80089e4:	d1e3      	bne.n	80089ae <UART_EndRxTransfer+0x3a>
 80089e6:	687b      	ldr	r3, [r7, #4]
 80089e8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80089ea:	2b01      	cmp	r3, #1
 80089ec:	d118      	bne.n	8008a20 <UART_EndRxTransfer+0xac>
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	681b      	ldr	r3, [r3, #0]
 80089f2:	60fb      	str	r3, [r7, #12]
 80089f4:	68fb      	ldr	r3, [r7, #12]
 80089f6:	e853 3f00 	ldrex	r3, [r3]
 80089fa:	60bb      	str	r3, [r7, #8]
 80089fc:	68bb      	ldr	r3, [r7, #8]
 80089fe:	f023 0310 	bic.w	r3, r3, #16
 8008a02:	647b      	str	r3, [r7, #68]	@ 0x44
 8008a04:	687b      	ldr	r3, [r7, #4]
 8008a06:	681b      	ldr	r3, [r3, #0]
 8008a08:	461a      	mov	r2, r3
 8008a0a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8008a0c:	61bb      	str	r3, [r7, #24]
 8008a0e:	617a      	str	r2, [r7, #20]
 8008a10:	6979      	ldr	r1, [r7, #20]
 8008a12:	69ba      	ldr	r2, [r7, #24]
 8008a14:	e841 2300 	strex	r3, r2, [r1]
 8008a18:	613b      	str	r3, [r7, #16]
 8008a1a:	693b      	ldr	r3, [r7, #16]
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d1e6      	bne.n	80089ee <UART_EndRxTransfer+0x7a>
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	2220      	movs	r2, #32
 8008a24:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	2200      	movs	r2, #0
 8008a2c:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	2200      	movs	r2, #0
 8008a32:	675a      	str	r2, [r3, #116]	@ 0x74
 8008a34:	bf00      	nop
 8008a36:	3754      	adds	r7, #84	@ 0x54
 8008a38:	46bd      	mov	sp, r7
 8008a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a3e:	4770      	bx	lr

08008a40 <UART_DMAAbortOnError>:
 8008a40:	b580      	push	{r7, lr}
 8008a42:	b084      	sub	sp, #16
 8008a44:	af00      	add	r7, sp, #0
 8008a46:	6078      	str	r0, [r7, #4]
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008a4c:	60fb      	str	r3, [r7, #12]
 8008a4e:	68fb      	ldr	r3, [r7, #12]
 8008a50:	2200      	movs	r2, #0
 8008a52:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8008a56:	68f8      	ldr	r0, [r7, #12]
 8008a58:	f7ff f9ce 	bl	8007df8 <HAL_UART_ErrorCallback>
 8008a5c:	bf00      	nop
 8008a5e:	3710      	adds	r7, #16
 8008a60:	46bd      	mov	sp, r7
 8008a62:	bd80      	pop	{r7, pc}

08008a64 <UART_EndTransmit_IT>:
 8008a64:	b580      	push	{r7, lr}
 8008a66:	b088      	sub	sp, #32
 8008a68:	af00      	add	r7, sp, #0
 8008a6a:	6078      	str	r0, [r7, #4]
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	60fb      	str	r3, [r7, #12]
 8008a72:	68fb      	ldr	r3, [r7, #12]
 8008a74:	e853 3f00 	ldrex	r3, [r3]
 8008a78:	60bb      	str	r3, [r7, #8]
 8008a7a:	68bb      	ldr	r3, [r7, #8]
 8008a7c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008a80:	61fb      	str	r3, [r7, #28]
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	461a      	mov	r2, r3
 8008a88:	69fb      	ldr	r3, [r7, #28]
 8008a8a:	61bb      	str	r3, [r7, #24]
 8008a8c:	617a      	str	r2, [r7, #20]
 8008a8e:	6979      	ldr	r1, [r7, #20]
 8008a90:	69ba      	ldr	r2, [r7, #24]
 8008a92:	e841 2300 	strex	r3, r2, [r1]
 8008a96:	613b      	str	r3, [r7, #16]
 8008a98:	693b      	ldr	r3, [r7, #16]
 8008a9a:	2b00      	cmp	r3, #0
 8008a9c:	d1e6      	bne.n	8008a6c <UART_EndTransmit_IT+0x8>
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	2220      	movs	r2, #32
 8008aa2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	2200      	movs	r2, #0
 8008aaa:	679a      	str	r2, [r3, #120]	@ 0x78
 8008aac:	6878      	ldr	r0, [r7, #4]
 8008aae:	f7ff f999 	bl	8007de4 <HAL_UART_TxCpltCallback>
 8008ab2:	bf00      	nop
 8008ab4:	3720      	adds	r7, #32
 8008ab6:	46bd      	mov	sp, r7
 8008ab8:	bd80      	pop	{r7, pc}
	...

08008abc <UART_RxISR_8BIT>:
 8008abc:	b580      	push	{r7, lr}
 8008abe:	b09c      	sub	sp, #112	@ 0x70
 8008ac0:	af00      	add	r7, sp, #0
 8008ac2:	6078      	str	r0, [r7, #4]
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 8008aca:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008ad4:	2b22      	cmp	r3, #34	@ 0x22
 8008ad6:	f040 80be 	bne.w	8008c56 <UART_RxISR_8BIT+0x19a>
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	681b      	ldr	r3, [r3, #0]
 8008ade:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008ae0:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8008ae4:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8008ae8:	b2d9      	uxtb	r1, r3
 8008aea:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8008aee:	b2da      	uxtb	r2, r3
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008af4:	400a      	ands	r2, r1
 8008af6:	b2d2      	uxtb	r2, r2
 8008af8:	701a      	strb	r2, [r3, #0]
 8008afa:	687b      	ldr	r3, [r7, #4]
 8008afc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008afe:	1c5a      	adds	r2, r3, #1
 8008b00:	687b      	ldr	r3, [r7, #4]
 8008b02:	659a      	str	r2, [r3, #88]	@ 0x58
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008b0a:	b29b      	uxth	r3, r3
 8008b0c:	3b01      	subs	r3, #1
 8008b0e:	b29a      	uxth	r2, r3
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008b1c:	b29b      	uxth	r3, r3
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	f040 80a1 	bne.w	8008c66 <UART_RxISR_8BIT+0x1aa>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008b2a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008b2c:	e853 3f00 	ldrex	r3, [r3]
 8008b30:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008b32:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008b34:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008b38:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	681b      	ldr	r3, [r3, #0]
 8008b3e:	461a      	mov	r2, r3
 8008b40:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8008b42:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008b44:	657a      	str	r2, [r7, #84]	@ 0x54
 8008b46:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8008b48:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8008b4a:	e841 2300 	strex	r3, r2, [r1]
 8008b4e:	653b      	str	r3, [r7, #80]	@ 0x50
 8008b50:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008b52:	2b00      	cmp	r3, #0
 8008b54:	d1e6      	bne.n	8008b24 <UART_RxISR_8BIT+0x68>
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	3308      	adds	r3, #8
 8008b5c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008b5e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008b60:	e853 3f00 	ldrex	r3, [r3]
 8008b64:	637b      	str	r3, [r7, #52]	@ 0x34
 8008b66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008b68:	f023 0301 	bic.w	r3, r3, #1
 8008b6c:	667b      	str	r3, [r7, #100]	@ 0x64
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	681b      	ldr	r3, [r3, #0]
 8008b72:	3308      	adds	r3, #8
 8008b74:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8008b76:	647a      	str	r2, [r7, #68]	@ 0x44
 8008b78:	643b      	str	r3, [r7, #64]	@ 0x40
 8008b7a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8008b7c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008b7e:	e841 2300 	strex	r3, r2, [r1]
 8008b82:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008b84:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008b86:	2b00      	cmp	r3, #0
 8008b88:	d1e5      	bne.n	8008b56 <UART_RxISR_8BIT+0x9a>
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	2220      	movs	r2, #32
 8008b8e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	2200      	movs	r2, #0
 8008b96:	675a      	str	r2, [r3, #116]	@ 0x74
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	2200      	movs	r2, #0
 8008b9c:	671a      	str	r2, [r3, #112]	@ 0x70
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	681b      	ldr	r3, [r3, #0]
 8008ba2:	4a33      	ldr	r2, [pc, #204]	@ (8008c70 <UART_RxISR_8BIT+0x1b4>)
 8008ba4:	4293      	cmp	r3, r2
 8008ba6:	d01f      	beq.n	8008be8 <UART_RxISR_8BIT+0x12c>
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	681b      	ldr	r3, [r3, #0]
 8008bac:	685b      	ldr	r3, [r3, #4]
 8008bae:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008bb2:	2b00      	cmp	r3, #0
 8008bb4:	d018      	beq.n	8008be8 <UART_RxISR_8BIT+0x12c>
 8008bb6:	687b      	ldr	r3, [r7, #4]
 8008bb8:	681b      	ldr	r3, [r3, #0]
 8008bba:	627b      	str	r3, [r7, #36]	@ 0x24
 8008bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008bbe:	e853 3f00 	ldrex	r3, [r3]
 8008bc2:	623b      	str	r3, [r7, #32]
 8008bc4:	6a3b      	ldr	r3, [r7, #32]
 8008bc6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8008bca:	663b      	str	r3, [r7, #96]	@ 0x60
 8008bcc:	687b      	ldr	r3, [r7, #4]
 8008bce:	681b      	ldr	r3, [r3, #0]
 8008bd0:	461a      	mov	r2, r3
 8008bd2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8008bd4:	633b      	str	r3, [r7, #48]	@ 0x30
 8008bd6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8008bd8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008bda:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008bdc:	e841 2300 	strex	r3, r2, [r1]
 8008be0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008be2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008be4:	2b00      	cmp	r3, #0
 8008be6:	d1e6      	bne.n	8008bb6 <UART_RxISR_8BIT+0xfa>
 8008be8:	687b      	ldr	r3, [r7, #4]
 8008bea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008bec:	2b01      	cmp	r3, #1
 8008bee:	d12e      	bne.n	8008c4e <UART_RxISR_8BIT+0x192>
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	2200      	movs	r2, #0
 8008bf4:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008bf6:	687b      	ldr	r3, [r7, #4]
 8008bf8:	681b      	ldr	r3, [r3, #0]
 8008bfa:	613b      	str	r3, [r7, #16]
 8008bfc:	693b      	ldr	r3, [r7, #16]
 8008bfe:	e853 3f00 	ldrex	r3, [r3]
 8008c02:	60fb      	str	r3, [r7, #12]
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	f023 0310 	bic.w	r3, r3, #16
 8008c0a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008c0c:	687b      	ldr	r3, [r7, #4]
 8008c0e:	681b      	ldr	r3, [r3, #0]
 8008c10:	461a      	mov	r2, r3
 8008c12:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008c14:	61fb      	str	r3, [r7, #28]
 8008c16:	61ba      	str	r2, [r7, #24]
 8008c18:	69b9      	ldr	r1, [r7, #24]
 8008c1a:	69fa      	ldr	r2, [r7, #28]
 8008c1c:	e841 2300 	strex	r3, r2, [r1]
 8008c20:	617b      	str	r3, [r7, #20]
 8008c22:	697b      	ldr	r3, [r7, #20]
 8008c24:	2b00      	cmp	r3, #0
 8008c26:	d1e6      	bne.n	8008bf6 <UART_RxISR_8BIT+0x13a>
 8008c28:	687b      	ldr	r3, [r7, #4]
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	69db      	ldr	r3, [r3, #28]
 8008c2e:	f003 0310 	and.w	r3, r3, #16
 8008c32:	2b10      	cmp	r3, #16
 8008c34:	d103      	bne.n	8008c3e <UART_RxISR_8BIT+0x182>
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	681b      	ldr	r3, [r3, #0]
 8008c3a:	2210      	movs	r2, #16
 8008c3c:	621a      	str	r2, [r3, #32]
 8008c3e:	687b      	ldr	r3, [r7, #4]
 8008c40:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8008c44:	4619      	mov	r1, r3
 8008c46:	6878      	ldr	r0, [r7, #4]
 8008c48:	f7ff f8e0 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8008c4c:	e00b      	b.n	8008c66 <UART_RxISR_8BIT+0x1aa>
 8008c4e:	6878      	ldr	r0, [r7, #4]
 8008c50:	f7f9 ffd0 	bl	8002bf4 <HAL_UART_RxCpltCallback>
 8008c54:	e007      	b.n	8008c66 <UART_RxISR_8BIT+0x1aa>
 8008c56:	687b      	ldr	r3, [r7, #4]
 8008c58:	681b      	ldr	r3, [r3, #0]
 8008c5a:	699a      	ldr	r2, [r3, #24]
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	f042 0208 	orr.w	r2, r2, #8
 8008c64:	619a      	str	r2, [r3, #24]
 8008c66:	bf00      	nop
 8008c68:	3770      	adds	r7, #112	@ 0x70
 8008c6a:	46bd      	mov	sp, r7
 8008c6c:	bd80      	pop	{r7, pc}
 8008c6e:	bf00      	nop
 8008c70:	40008000 	.word	0x40008000

08008c74 <UART_RxISR_16BIT>:
 8008c74:	b580      	push	{r7, lr}
 8008c76:	b09c      	sub	sp, #112	@ 0x70
 8008c78:	af00      	add	r7, sp, #0
 8008c7a:	6078      	str	r0, [r7, #4]
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 8008c82:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008c8c:	2b22      	cmp	r3, #34	@ 0x22
 8008c8e:	f040 80be 	bne.w	8008e0e <UART_RxISR_16BIT+0x19a>
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	681b      	ldr	r3, [r3, #0]
 8008c96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008c98:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008ca0:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008ca2:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8008ca6:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8008caa:	4013      	ands	r3, r2
 8008cac:	b29a      	uxth	r2, r3
 8008cae:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8008cb0:	801a      	strh	r2, [r3, #0]
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008cb6:	1c9a      	adds	r2, r3, #2
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	659a      	str	r2, [r3, #88]	@ 0x58
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008cc2:	b29b      	uxth	r3, r3
 8008cc4:	3b01      	subs	r3, #1
 8008cc6:	b29a      	uxth	r2, r3
 8008cc8:	687b      	ldr	r3, [r7, #4]
 8008cca:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008cd4:	b29b      	uxth	r3, r3
 8008cd6:	2b00      	cmp	r3, #0
 8008cd8:	f040 80a1 	bne.w	8008e1e <UART_RxISR_16BIT+0x1aa>
 8008cdc:	687b      	ldr	r3, [r7, #4]
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008ce2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008ce4:	e853 3f00 	ldrex	r3, [r3]
 8008ce8:	647b      	str	r3, [r7, #68]	@ 0x44
 8008cea:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8008cec:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008cf0:	667b      	str	r3, [r7, #100]	@ 0x64
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	681b      	ldr	r3, [r3, #0]
 8008cf6:	461a      	mov	r2, r3
 8008cf8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008cfa:	657b      	str	r3, [r7, #84]	@ 0x54
 8008cfc:	653a      	str	r2, [r7, #80]	@ 0x50
 8008cfe:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8008d00:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8008d02:	e841 2300 	strex	r3, r2, [r1]
 8008d06:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008d08:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008d0a:	2b00      	cmp	r3, #0
 8008d0c:	d1e6      	bne.n	8008cdc <UART_RxISR_16BIT+0x68>
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	681b      	ldr	r3, [r3, #0]
 8008d12:	3308      	adds	r3, #8
 8008d14:	637b      	str	r3, [r7, #52]	@ 0x34
 8008d16:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008d18:	e853 3f00 	ldrex	r3, [r3]
 8008d1c:	633b      	str	r3, [r7, #48]	@ 0x30
 8008d1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008d20:	f023 0301 	bic.w	r3, r3, #1
 8008d24:	663b      	str	r3, [r7, #96]	@ 0x60
 8008d26:	687b      	ldr	r3, [r7, #4]
 8008d28:	681b      	ldr	r3, [r3, #0]
 8008d2a:	3308      	adds	r3, #8
 8008d2c:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8008d2e:	643a      	str	r2, [r7, #64]	@ 0x40
 8008d30:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008d32:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8008d34:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8008d36:	e841 2300 	strex	r3, r2, [r1]
 8008d3a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008d3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d3e:	2b00      	cmp	r3, #0
 8008d40:	d1e5      	bne.n	8008d0e <UART_RxISR_16BIT+0x9a>
 8008d42:	687b      	ldr	r3, [r7, #4]
 8008d44:	2220      	movs	r2, #32
 8008d46:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	2200      	movs	r2, #0
 8008d4e:	675a      	str	r2, [r3, #116]	@ 0x74
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	2200      	movs	r2, #0
 8008d54:	671a      	str	r2, [r3, #112]	@ 0x70
 8008d56:	687b      	ldr	r3, [r7, #4]
 8008d58:	681b      	ldr	r3, [r3, #0]
 8008d5a:	4a33      	ldr	r2, [pc, #204]	@ (8008e28 <UART_RxISR_16BIT+0x1b4>)
 8008d5c:	4293      	cmp	r3, r2
 8008d5e:	d01f      	beq.n	8008da0 <UART_RxISR_16BIT+0x12c>
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	681b      	ldr	r3, [r3, #0]
 8008d64:	685b      	ldr	r3, [r3, #4]
 8008d66:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008d6a:	2b00      	cmp	r3, #0
 8008d6c:	d018      	beq.n	8008da0 <UART_RxISR_16BIT+0x12c>
 8008d6e:	687b      	ldr	r3, [r7, #4]
 8008d70:	681b      	ldr	r3, [r3, #0]
 8008d72:	623b      	str	r3, [r7, #32]
 8008d74:	6a3b      	ldr	r3, [r7, #32]
 8008d76:	e853 3f00 	ldrex	r3, [r3]
 8008d7a:	61fb      	str	r3, [r7, #28]
 8008d7c:	69fb      	ldr	r3, [r7, #28]
 8008d7e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8008d82:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	681b      	ldr	r3, [r3, #0]
 8008d88:	461a      	mov	r2, r3
 8008d8a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008d8c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008d8e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8008d90:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008d92:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008d94:	e841 2300 	strex	r3, r2, [r1]
 8008d98:	627b      	str	r3, [r7, #36]	@ 0x24
 8008d9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d9c:	2b00      	cmp	r3, #0
 8008d9e:	d1e6      	bne.n	8008d6e <UART_RxISR_16BIT+0xfa>
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008da4:	2b01      	cmp	r3, #1
 8008da6:	d12e      	bne.n	8008e06 <UART_RxISR_16BIT+0x192>
 8008da8:	687b      	ldr	r3, [r7, #4]
 8008daa:	2200      	movs	r2, #0
 8008dac:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	60fb      	str	r3, [r7, #12]
 8008db4:	68fb      	ldr	r3, [r7, #12]
 8008db6:	e853 3f00 	ldrex	r3, [r3]
 8008dba:	60bb      	str	r3, [r7, #8]
 8008dbc:	68bb      	ldr	r3, [r7, #8]
 8008dbe:	f023 0310 	bic.w	r3, r3, #16
 8008dc2:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008dc4:	687b      	ldr	r3, [r7, #4]
 8008dc6:	681b      	ldr	r3, [r3, #0]
 8008dc8:	461a      	mov	r2, r3
 8008dca:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8008dcc:	61bb      	str	r3, [r7, #24]
 8008dce:	617a      	str	r2, [r7, #20]
 8008dd0:	6979      	ldr	r1, [r7, #20]
 8008dd2:	69ba      	ldr	r2, [r7, #24]
 8008dd4:	e841 2300 	strex	r3, r2, [r1]
 8008dd8:	613b      	str	r3, [r7, #16]
 8008dda:	693b      	ldr	r3, [r7, #16]
 8008ddc:	2b00      	cmp	r3, #0
 8008dde:	d1e6      	bne.n	8008dae <UART_RxISR_16BIT+0x13a>
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	69db      	ldr	r3, [r3, #28]
 8008de6:	f003 0310 	and.w	r3, r3, #16
 8008dea:	2b10      	cmp	r3, #16
 8008dec:	d103      	bne.n	8008df6 <UART_RxISR_16BIT+0x182>
 8008dee:	687b      	ldr	r3, [r7, #4]
 8008df0:	681b      	ldr	r3, [r3, #0]
 8008df2:	2210      	movs	r2, #16
 8008df4:	621a      	str	r2, [r3, #32]
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8008dfc:	4619      	mov	r1, r3
 8008dfe:	6878      	ldr	r0, [r7, #4]
 8008e00:	f7ff f804 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8008e04:	e00b      	b.n	8008e1e <UART_RxISR_16BIT+0x1aa>
 8008e06:	6878      	ldr	r0, [r7, #4]
 8008e08:	f7f9 fef4 	bl	8002bf4 <HAL_UART_RxCpltCallback>
 8008e0c:	e007      	b.n	8008e1e <UART_RxISR_16BIT+0x1aa>
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	681b      	ldr	r3, [r3, #0]
 8008e12:	699a      	ldr	r2, [r3, #24]
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	681b      	ldr	r3, [r3, #0]
 8008e18:	f042 0208 	orr.w	r2, r2, #8
 8008e1c:	619a      	str	r2, [r3, #24]
 8008e1e:	bf00      	nop
 8008e20:	3770      	adds	r7, #112	@ 0x70
 8008e22:	46bd      	mov	sp, r7
 8008e24:	bd80      	pop	{r7, pc}
 8008e26:	bf00      	nop
 8008e28:	40008000 	.word	0x40008000

08008e2c <UART_RxISR_8BIT_FIFOEN>:
 8008e2c:	b580      	push	{r7, lr}
 8008e2e:	b0ac      	sub	sp, #176	@ 0xb0
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	6078      	str	r0, [r7, #4]
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 8008e3a:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
 8008e3e:	687b      	ldr	r3, [r7, #4]
 8008e40:	681b      	ldr	r3, [r3, #0]
 8008e42:	69db      	ldr	r3, [r3, #28]
 8008e44:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	681b      	ldr	r3, [r3, #0]
 8008e4c:	681b      	ldr	r3, [r3, #0]
 8008e4e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	689b      	ldr	r3, [r3, #8]
 8008e58:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8008e5c:	687b      	ldr	r3, [r7, #4]
 8008e5e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008e62:	2b22      	cmp	r3, #34	@ 0x22
 8008e64:	f040 8183 	bne.w	800916e <UART_RxISR_8BIT_FIFOEN+0x342>
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 8008e6e:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
 8008e72:	e126      	b.n	80090c2 <UART_RxISR_8BIT_FIFOEN+0x296>
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	681b      	ldr	r3, [r3, #0]
 8008e78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008e7a:	f8a7 309c 	strh.w	r3, [r7, #156]	@ 0x9c
 8008e7e:	f8b7 309c 	ldrh.w	r3, [r7, #156]	@ 0x9c
 8008e82:	b2d9      	uxtb	r1, r3
 8008e84:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	@ 0xaa
 8008e88:	b2da      	uxtb	r2, r3
 8008e8a:	687b      	ldr	r3, [r7, #4]
 8008e8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008e8e:	400a      	ands	r2, r1
 8008e90:	b2d2      	uxtb	r2, r2
 8008e92:	701a      	strb	r2, [r3, #0]
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008e98:	1c5a      	adds	r2, r3, #1
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	659a      	str	r2, [r3, #88]	@ 0x58
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008ea4:	b29b      	uxth	r3, r3
 8008ea6:	3b01      	subs	r3, #1
 8008ea8:	b29a      	uxth	r2, r3
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	69db      	ldr	r3, [r3, #28]
 8008eb6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8008eba:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8008ebe:	f003 0307 	and.w	r3, r3, #7
 8008ec2:	2b00      	cmp	r3, #0
 8008ec4:	d053      	beq.n	8008f6e <UART_RxISR_8BIT_FIFOEN+0x142>
 8008ec6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8008eca:	f003 0301 	and.w	r3, r3, #1
 8008ece:	2b00      	cmp	r3, #0
 8008ed0:	d011      	beq.n	8008ef6 <UART_RxISR_8BIT_FIFOEN+0xca>
 8008ed2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8008ed6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008eda:	2b00      	cmp	r3, #0
 8008edc:	d00b      	beq.n	8008ef6 <UART_RxISR_8BIT_FIFOEN+0xca>
 8008ede:	687b      	ldr	r3, [r7, #4]
 8008ee0:	681b      	ldr	r3, [r3, #0]
 8008ee2:	2201      	movs	r2, #1
 8008ee4:	621a      	str	r2, [r3, #32]
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008eec:	f043 0201 	orr.w	r2, r3, #1
 8008ef0:	687b      	ldr	r3, [r7, #4]
 8008ef2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008ef6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8008efa:	f003 0302 	and.w	r3, r3, #2
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d011      	beq.n	8008f26 <UART_RxISR_8BIT_FIFOEN+0xfa>
 8008f02:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8008f06:	f003 0301 	and.w	r3, r3, #1
 8008f0a:	2b00      	cmp	r3, #0
 8008f0c:	d00b      	beq.n	8008f26 <UART_RxISR_8BIT_FIFOEN+0xfa>
 8008f0e:	687b      	ldr	r3, [r7, #4]
 8008f10:	681b      	ldr	r3, [r3, #0]
 8008f12:	2202      	movs	r2, #2
 8008f14:	621a      	str	r2, [r3, #32]
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008f1c:	f043 0204 	orr.w	r2, r3, #4
 8008f20:	687b      	ldr	r3, [r7, #4]
 8008f22:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008f26:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8008f2a:	f003 0304 	and.w	r3, r3, #4
 8008f2e:	2b00      	cmp	r3, #0
 8008f30:	d011      	beq.n	8008f56 <UART_RxISR_8BIT_FIFOEN+0x12a>
 8008f32:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8008f36:	f003 0301 	and.w	r3, r3, #1
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d00b      	beq.n	8008f56 <UART_RxISR_8BIT_FIFOEN+0x12a>
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	2204      	movs	r2, #4
 8008f44:	621a      	str	r2, [r3, #32]
 8008f46:	687b      	ldr	r3, [r7, #4]
 8008f48:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008f4c:	f043 0202 	orr.w	r2, r3, #2
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008f5c:	2b00      	cmp	r3, #0
 8008f5e:	d006      	beq.n	8008f6e <UART_RxISR_8BIT_FIFOEN+0x142>
 8008f60:	6878      	ldr	r0, [r7, #4]
 8008f62:	f7fe ff49 	bl	8007df8 <HAL_UART_ErrorCallback>
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	2200      	movs	r2, #0
 8008f6a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008f6e:	687b      	ldr	r3, [r7, #4]
 8008f70:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008f74:	b29b      	uxth	r3, r3
 8008f76:	2b00      	cmp	r3, #0
 8008f78:	f040 80a3 	bne.w	80090c2 <UART_RxISR_8BIT_FIFOEN+0x296>
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	681b      	ldr	r3, [r3, #0]
 8008f80:	673b      	str	r3, [r7, #112]	@ 0x70
 8008f82:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8008f84:	e853 3f00 	ldrex	r3, [r3]
 8008f88:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8008f8a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008f8c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008f90:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008f94:	687b      	ldr	r3, [r7, #4]
 8008f96:	681b      	ldr	r3, [r3, #0]
 8008f98:	461a      	mov	r2, r3
 8008f9a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8008f9e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8008fa0:	67ba      	str	r2, [r7, #120]	@ 0x78
 8008fa2:	6fb9      	ldr	r1, [r7, #120]	@ 0x78
 8008fa4:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8008fa6:	e841 2300 	strex	r3, r2, [r1]
 8008faa:	677b      	str	r3, [r7, #116]	@ 0x74
 8008fac:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8008fae:	2b00      	cmp	r3, #0
 8008fb0:	d1e4      	bne.n	8008f7c <UART_RxISR_8BIT_FIFOEN+0x150>
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	3308      	adds	r3, #8
 8008fb8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008fba:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008fbc:	e853 3f00 	ldrex	r3, [r3]
 8008fc0:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008fc2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8008fc4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8008fc8:	f023 0301 	bic.w	r3, r3, #1
 8008fcc:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8008fd0:	687b      	ldr	r3, [r7, #4]
 8008fd2:	681b      	ldr	r3, [r3, #0]
 8008fd4:	3308      	adds	r3, #8
 8008fd6:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8008fda:	66ba      	str	r2, [r7, #104]	@ 0x68
 8008fdc:	667b      	str	r3, [r7, #100]	@ 0x64
 8008fde:	6e79      	ldr	r1, [r7, #100]	@ 0x64
 8008fe0:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 8008fe2:	e841 2300 	strex	r3, r2, [r1]
 8008fe6:	663b      	str	r3, [r7, #96]	@ 0x60
 8008fe8:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8008fea:	2b00      	cmp	r3, #0
 8008fec:	d1e1      	bne.n	8008fb2 <UART_RxISR_8BIT_FIFOEN+0x186>
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	2220      	movs	r2, #32
 8008ff2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	2200      	movs	r2, #0
 8008ffa:	675a      	str	r2, [r3, #116]	@ 0x74
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	2200      	movs	r2, #0
 8009000:	671a      	str	r2, [r3, #112]	@ 0x70
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	681b      	ldr	r3, [r3, #0]
 8009006:	4a60      	ldr	r2, [pc, #384]	@ (8009188 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 8009008:	4293      	cmp	r3, r2
 800900a:	d021      	beq.n	8009050 <UART_RxISR_8BIT_FIFOEN+0x224>
 800900c:	687b      	ldr	r3, [r7, #4]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	685b      	ldr	r3, [r3, #4]
 8009012:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8009016:	2b00      	cmp	r3, #0
 8009018:	d01a      	beq.n	8009050 <UART_RxISR_8BIT_FIFOEN+0x224>
 800901a:	687b      	ldr	r3, [r7, #4]
 800901c:	681b      	ldr	r3, [r3, #0]
 800901e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8009020:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8009022:	e853 3f00 	ldrex	r3, [r3]
 8009026:	647b      	str	r3, [r7, #68]	@ 0x44
 8009028:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800902a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800902e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	461a      	mov	r2, r3
 8009038:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800903c:	657b      	str	r3, [r7, #84]	@ 0x54
 800903e:	653a      	str	r2, [r7, #80]	@ 0x50
 8009040:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8009042:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8009044:	e841 2300 	strex	r3, r2, [r1]
 8009048:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800904a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800904c:	2b00      	cmp	r3, #0
 800904e:	d1e4      	bne.n	800901a <UART_RxISR_8BIT_FIFOEN+0x1ee>
 8009050:	687b      	ldr	r3, [r7, #4]
 8009052:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8009054:	2b01      	cmp	r3, #1
 8009056:	d130      	bne.n	80090ba <UART_RxISR_8BIT_FIFOEN+0x28e>
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	2200      	movs	r2, #0
 800905c:	66da      	str	r2, [r3, #108]	@ 0x6c
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	637b      	str	r3, [r7, #52]	@ 0x34
 8009064:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009066:	e853 3f00 	ldrex	r3, [r3]
 800906a:	633b      	str	r3, [r7, #48]	@ 0x30
 800906c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800906e:	f023 0310 	bic.w	r3, r3, #16
 8009072:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	681b      	ldr	r3, [r3, #0]
 800907a:	461a      	mov	r2, r3
 800907c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8009080:	643b      	str	r3, [r7, #64]	@ 0x40
 8009082:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8009084:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8009086:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8009088:	e841 2300 	strex	r3, r2, [r1]
 800908c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800908e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009090:	2b00      	cmp	r3, #0
 8009092:	d1e4      	bne.n	800905e <UART_RxISR_8BIT_FIFOEN+0x232>
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	681b      	ldr	r3, [r3, #0]
 8009098:	69db      	ldr	r3, [r3, #28]
 800909a:	f003 0310 	and.w	r3, r3, #16
 800909e:	2b10      	cmp	r3, #16
 80090a0:	d103      	bne.n	80090aa <UART_RxISR_8BIT_FIFOEN+0x27e>
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	681b      	ldr	r3, [r3, #0]
 80090a6:	2210      	movs	r2, #16
 80090a8:	621a      	str	r2, [r3, #32]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80090b0:	4619      	mov	r1, r3
 80090b2:	6878      	ldr	r0, [r7, #4]
 80090b4:	f7fe feaa 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 80090b8:	e00e      	b.n	80090d8 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 80090ba:	6878      	ldr	r0, [r7, #4]
 80090bc:	f7f9 fd9a 	bl	8002bf4 <HAL_UART_RxCpltCallback>
 80090c0:	e00a      	b.n	80090d8 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 80090c2:	f8b7 309e 	ldrh.w	r3, [r7, #158]	@ 0x9e
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d006      	beq.n	80090d8 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 80090ca:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80090ce:	f003 0320 	and.w	r3, r3, #32
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	f47f aece 	bne.w	8008e74 <UART_RxISR_8BIT_FIFOEN+0x48>
 80090d8:	687b      	ldr	r3, [r7, #4]
 80090da:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 80090de:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 80090e2:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 80090e6:	2b00      	cmp	r3, #0
 80090e8:	d049      	beq.n	800917e <UART_RxISR_8BIT_FIFOEN+0x352>
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 80090f0:	f8b7 208a 	ldrh.w	r2, [r7, #138]	@ 0x8a
 80090f4:	429a      	cmp	r2, r3
 80090f6:	d242      	bcs.n	800917e <UART_RxISR_8BIT_FIFOEN+0x352>
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	3308      	adds	r3, #8
 80090fe:	623b      	str	r3, [r7, #32]
 8009100:	6a3b      	ldr	r3, [r7, #32]
 8009102:	e853 3f00 	ldrex	r3, [r3]
 8009106:	61fb      	str	r3, [r7, #28]
 8009108:	69fb      	ldr	r3, [r7, #28]
 800910a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800910e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009112:	687b      	ldr	r3, [r7, #4]
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	3308      	adds	r3, #8
 8009118:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 800911c:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800911e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009120:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8009122:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009124:	e841 2300 	strex	r3, r2, [r1]
 8009128:	627b      	str	r3, [r7, #36]	@ 0x24
 800912a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800912c:	2b00      	cmp	r3, #0
 800912e:	d1e3      	bne.n	80090f8 <UART_RxISR_8BIT_FIFOEN+0x2cc>
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	4a16      	ldr	r2, [pc, #88]	@ (800918c <UART_RxISR_8BIT_FIFOEN+0x360>)
 8009134:	675a      	str	r2, [r3, #116]	@ 0x74
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	60fb      	str	r3, [r7, #12]
 800913c:	68fb      	ldr	r3, [r7, #12]
 800913e:	e853 3f00 	ldrex	r3, [r3]
 8009142:	60bb      	str	r3, [r7, #8]
 8009144:	68bb      	ldr	r3, [r7, #8]
 8009146:	f043 0320 	orr.w	r3, r3, #32
 800914a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	681b      	ldr	r3, [r3, #0]
 8009152:	461a      	mov	r2, r3
 8009154:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8009158:	61bb      	str	r3, [r7, #24]
 800915a:	617a      	str	r2, [r7, #20]
 800915c:	6979      	ldr	r1, [r7, #20]
 800915e:	69ba      	ldr	r2, [r7, #24]
 8009160:	e841 2300 	strex	r3, r2, [r1]
 8009164:	613b      	str	r3, [r7, #16]
 8009166:	693b      	ldr	r3, [r7, #16]
 8009168:	2b00      	cmp	r3, #0
 800916a:	d1e4      	bne.n	8009136 <UART_RxISR_8BIT_FIFOEN+0x30a>
 800916c:	e007      	b.n	800917e <UART_RxISR_8BIT_FIFOEN+0x352>
 800916e:	687b      	ldr	r3, [r7, #4]
 8009170:	681b      	ldr	r3, [r3, #0]
 8009172:	699a      	ldr	r2, [r3, #24]
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	681b      	ldr	r3, [r3, #0]
 8009178:	f042 0208 	orr.w	r2, r2, #8
 800917c:	619a      	str	r2, [r3, #24]
 800917e:	bf00      	nop
 8009180:	37b0      	adds	r7, #176	@ 0xb0
 8009182:	46bd      	mov	sp, r7
 8009184:	bd80      	pop	{r7, pc}
 8009186:	bf00      	nop
 8009188:	40008000 	.word	0x40008000
 800918c:	08008abd 	.word	0x08008abd

08009190 <UART_RxISR_16BIT_FIFOEN>:
 8009190:	b580      	push	{r7, lr}
 8009192:	b0ae      	sub	sp, #184	@ 0xb8
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800919e:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	69db      	ldr	r3, [r3, #28]
 80091a8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80091ac:	687b      	ldr	r3, [r7, #4]
 80091ae:	681b      	ldr	r3, [r3, #0]
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	681b      	ldr	r3, [r3, #0]
 80091ba:	689b      	ldr	r3, [r3, #8]
 80091bc:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80091c6:	2b22      	cmp	r3, #34	@ 0x22
 80091c8:	f040 8187 	bne.w	80094da <UART_RxISR_16BIT_FIFOEN+0x34a>
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 80091d2:	f8a7 30a6 	strh.w	r3, [r7, #166]	@ 0xa6
 80091d6:	e12a      	b.n	800942e <UART_RxISR_16BIT_FIFOEN+0x29e>
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	681b      	ldr	r3, [r3, #0]
 80091dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80091de:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80091e6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80091ea:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	@ 0xa4
 80091ee:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80091f2:	4013      	ands	r3, r2
 80091f4:	b29a      	uxth	r2, r3
 80091f6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80091fa:	801a      	strh	r2, [r3, #0]
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8009200:	1c9a      	adds	r2, r3, #2
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	659a      	str	r2, [r3, #88]	@ 0x58
 8009206:	687b      	ldr	r3, [r7, #4]
 8009208:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800920c:	b29b      	uxth	r3, r3
 800920e:	3b01      	subs	r3, #1
 8009210:	b29a      	uxth	r2, r3
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	681b      	ldr	r3, [r3, #0]
 800921c:	69db      	ldr	r3, [r3, #28]
 800921e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8009222:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8009226:	f003 0307 	and.w	r3, r3, #7
 800922a:	2b00      	cmp	r3, #0
 800922c:	d053      	beq.n	80092d6 <UART_RxISR_16BIT_FIFOEN+0x146>
 800922e:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8009232:	f003 0301 	and.w	r3, r3, #1
 8009236:	2b00      	cmp	r3, #0
 8009238:	d011      	beq.n	800925e <UART_RxISR_16BIT_FIFOEN+0xce>
 800923a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800923e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009242:	2b00      	cmp	r3, #0
 8009244:	d00b      	beq.n	800925e <UART_RxISR_16BIT_FIFOEN+0xce>
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	2201      	movs	r2, #1
 800924c:	621a      	str	r2, [r3, #32]
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009254:	f043 0201 	orr.w	r2, r3, #1
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800925e:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8009262:	f003 0302 	and.w	r3, r3, #2
 8009266:	2b00      	cmp	r3, #0
 8009268:	d011      	beq.n	800928e <UART_RxISR_16BIT_FIFOEN+0xfe>
 800926a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800926e:	f003 0301 	and.w	r3, r3, #1
 8009272:	2b00      	cmp	r3, #0
 8009274:	d00b      	beq.n	800928e <UART_RxISR_16BIT_FIFOEN+0xfe>
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	681b      	ldr	r3, [r3, #0]
 800927a:	2202      	movs	r2, #2
 800927c:	621a      	str	r2, [r3, #32]
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009284:	f043 0204 	orr.w	r2, r3, #4
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800928e:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8009292:	f003 0304 	and.w	r3, r3, #4
 8009296:	2b00      	cmp	r3, #0
 8009298:	d011      	beq.n	80092be <UART_RxISR_16BIT_FIFOEN+0x12e>
 800929a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800929e:	f003 0301 	and.w	r3, r3, #1
 80092a2:	2b00      	cmp	r3, #0
 80092a4:	d00b      	beq.n	80092be <UART_RxISR_16BIT_FIFOEN+0x12e>
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	2204      	movs	r2, #4
 80092ac:	621a      	str	r2, [r3, #32]
 80092ae:	687b      	ldr	r3, [r7, #4]
 80092b0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80092b4:	f043 0202 	orr.w	r2, r3, #2
 80092b8:	687b      	ldr	r3, [r7, #4]
 80092ba:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80092c4:	2b00      	cmp	r3, #0
 80092c6:	d006      	beq.n	80092d6 <UART_RxISR_16BIT_FIFOEN+0x146>
 80092c8:	6878      	ldr	r0, [r7, #4]
 80092ca:	f7fe fd95 	bl	8007df8 <HAL_UART_ErrorCallback>
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	2200      	movs	r2, #0
 80092d2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80092d6:	687b      	ldr	r3, [r7, #4]
 80092d8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 80092dc:	b29b      	uxth	r3, r3
 80092de:	2b00      	cmp	r3, #0
 80092e0:	f040 80a5 	bne.w	800942e <UART_RxISR_16BIT_FIFOEN+0x29e>
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	681b      	ldr	r3, [r3, #0]
 80092e8:	677b      	str	r3, [r7, #116]	@ 0x74
 80092ea:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80092ec:	e853 3f00 	ldrex	r3, [r3]
 80092f0:	673b      	str	r3, [r7, #112]	@ 0x70
 80092f2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80092f4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80092f8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	681b      	ldr	r3, [r3, #0]
 8009300:	461a      	mov	r2, r3
 8009302:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8009306:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800930a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800930c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800930e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8009312:	e841 2300 	strex	r3, r2, [r1]
 8009316:	67bb      	str	r3, [r7, #120]	@ 0x78
 8009318:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800931a:	2b00      	cmp	r3, #0
 800931c:	d1e2      	bne.n	80092e4 <UART_RxISR_16BIT_FIFOEN+0x154>
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	3308      	adds	r3, #8
 8009324:	663b      	str	r3, [r7, #96]	@ 0x60
 8009326:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8009328:	e853 3f00 	ldrex	r3, [r3]
 800932c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800932e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009330:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8009334:	f023 0301 	bic.w	r3, r3, #1
 8009338:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800933c:	687b      	ldr	r3, [r7, #4]
 800933e:	681b      	ldr	r3, [r3, #0]
 8009340:	3308      	adds	r3, #8
 8009342:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 8009346:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8009348:	66bb      	str	r3, [r7, #104]	@ 0x68
 800934a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800934c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800934e:	e841 2300 	strex	r3, r2, [r1]
 8009352:	667b      	str	r3, [r7, #100]	@ 0x64
 8009354:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009356:	2b00      	cmp	r3, #0
 8009358:	d1e1      	bne.n	800931e <UART_RxISR_16BIT_FIFOEN+0x18e>
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	2220      	movs	r2, #32
 800935e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009362:	687b      	ldr	r3, [r7, #4]
 8009364:	2200      	movs	r2, #0
 8009366:	675a      	str	r2, [r3, #116]	@ 0x74
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	2200      	movs	r2, #0
 800936c:	671a      	str	r2, [r3, #112]	@ 0x70
 800936e:	687b      	ldr	r3, [r7, #4]
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	4a60      	ldr	r2, [pc, #384]	@ (80094f4 <UART_RxISR_16BIT_FIFOEN+0x364>)
 8009374:	4293      	cmp	r3, r2
 8009376:	d021      	beq.n	80093bc <UART_RxISR_16BIT_FIFOEN+0x22c>
 8009378:	687b      	ldr	r3, [r7, #4]
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	685b      	ldr	r3, [r3, #4]
 800937e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8009382:	2b00      	cmp	r3, #0
 8009384:	d01a      	beq.n	80093bc <UART_RxISR_16BIT_FIFOEN+0x22c>
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	681b      	ldr	r3, [r3, #0]
 800938a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800938c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800938e:	e853 3f00 	ldrex	r3, [r3]
 8009392:	64bb      	str	r3, [r7, #72]	@ 0x48
 8009394:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8009396:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800939a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	461a      	mov	r2, r3
 80093a4:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 80093a8:	65bb      	str	r3, [r7, #88]	@ 0x58
 80093aa:	657a      	str	r2, [r7, #84]	@ 0x54
 80093ac:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80093ae:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80093b0:	e841 2300 	strex	r3, r2, [r1]
 80093b4:	653b      	str	r3, [r7, #80]	@ 0x50
 80093b6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80093b8:	2b00      	cmp	r3, #0
 80093ba:	d1e4      	bne.n	8009386 <UART_RxISR_16BIT_FIFOEN+0x1f6>
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80093c0:	2b01      	cmp	r3, #1
 80093c2:	d130      	bne.n	8009426 <UART_RxISR_16BIT_FIFOEN+0x296>
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	2200      	movs	r2, #0
 80093c8:	66da      	str	r2, [r3, #108]	@ 0x6c
 80093ca:	687b      	ldr	r3, [r7, #4]
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80093d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80093d2:	e853 3f00 	ldrex	r3, [r3]
 80093d6:	637b      	str	r3, [r7, #52]	@ 0x34
 80093d8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80093da:	f023 0310 	bic.w	r3, r3, #16
 80093de:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	681b      	ldr	r3, [r3, #0]
 80093e6:	461a      	mov	r2, r3
 80093e8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80093ec:	647b      	str	r3, [r7, #68]	@ 0x44
 80093ee:	643a      	str	r2, [r7, #64]	@ 0x40
 80093f0:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80093f2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80093f4:	e841 2300 	strex	r3, r2, [r1]
 80093f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80093fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80093fc:	2b00      	cmp	r3, #0
 80093fe:	d1e4      	bne.n	80093ca <UART_RxISR_16BIT_FIFOEN+0x23a>
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	69db      	ldr	r3, [r3, #28]
 8009406:	f003 0310 	and.w	r3, r3, #16
 800940a:	2b10      	cmp	r3, #16
 800940c:	d103      	bne.n	8009416 <UART_RxISR_16BIT_FIFOEN+0x286>
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	681b      	ldr	r3, [r3, #0]
 8009412:	2210      	movs	r2, #16
 8009414:	621a      	str	r2, [r3, #32]
 8009416:	687b      	ldr	r3, [r7, #4]
 8009418:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800941c:	4619      	mov	r1, r3
 800941e:	6878      	ldr	r0, [r7, #4]
 8009420:	f7fe fcf4 	bl	8007e0c <HAL_UARTEx_RxEventCallback>
 8009424:	e00e      	b.n	8009444 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 8009426:	6878      	ldr	r0, [r7, #4]
 8009428:	f7f9 fbe4 	bl	8002bf4 <HAL_UART_RxCpltCallback>
 800942c:	e00a      	b.n	8009444 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 800942e:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	@ 0xa6
 8009432:	2b00      	cmp	r3, #0
 8009434:	d006      	beq.n	8009444 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 8009436:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800943a:	f003 0320 	and.w	r3, r3, #32
 800943e:	2b00      	cmp	r3, #0
 8009440:	f47f aeca 	bne.w	80091d8 <UART_RxISR_16BIT_FIFOEN+0x48>
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800944a:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
 800944e:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 8009452:	2b00      	cmp	r3, #0
 8009454:	d049      	beq.n	80094ea <UART_RxISR_16BIT_FIFOEN+0x35a>
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800945c:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 8009460:	429a      	cmp	r2, r3
 8009462:	d242      	bcs.n	80094ea <UART_RxISR_16BIT_FIFOEN+0x35a>
 8009464:	687b      	ldr	r3, [r7, #4]
 8009466:	681b      	ldr	r3, [r3, #0]
 8009468:	3308      	adds	r3, #8
 800946a:	627b      	str	r3, [r7, #36]	@ 0x24
 800946c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800946e:	e853 3f00 	ldrex	r3, [r3]
 8009472:	623b      	str	r3, [r7, #32]
 8009474:	6a3b      	ldr	r3, [r7, #32]
 8009476:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800947a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	681b      	ldr	r3, [r3, #0]
 8009482:	3308      	adds	r3, #8
 8009484:	f8d7 2088 	ldr.w	r2, [r7, #136]	@ 0x88
 8009488:	633a      	str	r2, [r7, #48]	@ 0x30
 800948a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800948c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800948e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009490:	e841 2300 	strex	r3, r2, [r1]
 8009494:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009496:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009498:	2b00      	cmp	r3, #0
 800949a:	d1e3      	bne.n	8009464 <UART_RxISR_16BIT_FIFOEN+0x2d4>
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	4a16      	ldr	r2, [pc, #88]	@ (80094f8 <UART_RxISR_16BIT_FIFOEN+0x368>)
 80094a0:	675a      	str	r2, [r3, #116]	@ 0x74
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	613b      	str	r3, [r7, #16]
 80094a8:	693b      	ldr	r3, [r7, #16]
 80094aa:	e853 3f00 	ldrex	r3, [r3]
 80094ae:	60fb      	str	r3, [r7, #12]
 80094b0:	68fb      	ldr	r3, [r7, #12]
 80094b2:	f043 0320 	orr.w	r3, r3, #32
 80094b6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	681b      	ldr	r3, [r3, #0]
 80094be:	461a      	mov	r2, r3
 80094c0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80094c4:	61fb      	str	r3, [r7, #28]
 80094c6:	61ba      	str	r2, [r7, #24]
 80094c8:	69b9      	ldr	r1, [r7, #24]
 80094ca:	69fa      	ldr	r2, [r7, #28]
 80094cc:	e841 2300 	strex	r3, r2, [r1]
 80094d0:	617b      	str	r3, [r7, #20]
 80094d2:	697b      	ldr	r3, [r7, #20]
 80094d4:	2b00      	cmp	r3, #0
 80094d6:	d1e4      	bne.n	80094a2 <UART_RxISR_16BIT_FIFOEN+0x312>
 80094d8:	e007      	b.n	80094ea <UART_RxISR_16BIT_FIFOEN+0x35a>
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	699a      	ldr	r2, [r3, #24]
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	681b      	ldr	r3, [r3, #0]
 80094e4:	f042 0208 	orr.w	r2, r2, #8
 80094e8:	619a      	str	r2, [r3, #24]
 80094ea:	bf00      	nop
 80094ec:	37b8      	adds	r7, #184	@ 0xb8
 80094ee:	46bd      	mov	sp, r7
 80094f0:	bd80      	pop	{r7, pc}
 80094f2:	bf00      	nop
 80094f4:	40008000 	.word	0x40008000
 80094f8:	08008c75 	.word	0x08008c75

080094fc <HAL_UARTEx_WakeupCallback>:
 80094fc:	b480      	push	{r7}
 80094fe:	b083      	sub	sp, #12
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	bf00      	nop
 8009506:	370c      	adds	r7, #12
 8009508:	46bd      	mov	sp, r7
 800950a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800950e:	4770      	bx	lr

08009510 <HAL_UARTEx_RxFifoFullCallback>:
 8009510:	b480      	push	{r7}
 8009512:	b083      	sub	sp, #12
 8009514:	af00      	add	r7, sp, #0
 8009516:	6078      	str	r0, [r7, #4]
 8009518:	bf00      	nop
 800951a:	370c      	adds	r7, #12
 800951c:	46bd      	mov	sp, r7
 800951e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009522:	4770      	bx	lr

08009524 <HAL_UARTEx_TxFifoEmptyCallback>:
 8009524:	b480      	push	{r7}
 8009526:	b083      	sub	sp, #12
 8009528:	af00      	add	r7, sp, #0
 800952a:	6078      	str	r0, [r7, #4]
 800952c:	bf00      	nop
 800952e:	370c      	adds	r7, #12
 8009530:	46bd      	mov	sp, r7
 8009532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009536:	4770      	bx	lr

08009538 <HAL_UARTEx_DisableFifoMode>:
 8009538:	b480      	push	{r7}
 800953a:	b085      	sub	sp, #20
 800953c:	af00      	add	r7, sp, #0
 800953e:	6078      	str	r0, [r7, #4]
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 8009546:	2b01      	cmp	r3, #1
 8009548:	d101      	bne.n	800954e <HAL_UARTEx_DisableFifoMode+0x16>
 800954a:	2302      	movs	r3, #2
 800954c:	e027      	b.n	800959e <HAL_UARTEx_DisableFifoMode+0x66>
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	2201      	movs	r2, #1
 8009552:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	2224      	movs	r2, #36	@ 0x24
 800955a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	681b      	ldr	r3, [r3, #0]
 8009564:	60fb      	str	r3, [r7, #12]
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	681b      	ldr	r3, [r3, #0]
 800956a:	681a      	ldr	r2, [r3, #0]
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	681b      	ldr	r3, [r3, #0]
 8009570:	f022 0201 	bic.w	r2, r2, #1
 8009574:	601a      	str	r2, [r3, #0]
 8009576:	68fb      	ldr	r3, [r7, #12]
 8009578:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800957c:	60fb      	str	r3, [r7, #12]
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	2200      	movs	r2, #0
 8009582:	665a      	str	r2, [r3, #100]	@ 0x64
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	681b      	ldr	r3, [r3, #0]
 8009588:	68fa      	ldr	r2, [r7, #12]
 800958a:	601a      	str	r2, [r3, #0]
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	2220      	movs	r2, #32
 8009590:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	2200      	movs	r2, #0
 8009598:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800959c:	2300      	movs	r3, #0
 800959e:	4618      	mov	r0, r3
 80095a0:	3714      	adds	r7, #20
 80095a2:	46bd      	mov	sp, r7
 80095a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a8:	4770      	bx	lr

080095aa <HAL_UARTEx_SetTxFifoThreshold>:
 80095aa:	b580      	push	{r7, lr}
 80095ac:	b084      	sub	sp, #16
 80095ae:	af00      	add	r7, sp, #0
 80095b0:	6078      	str	r0, [r7, #4]
 80095b2:	6039      	str	r1, [r7, #0]
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 80095ba:	2b01      	cmp	r3, #1
 80095bc:	d101      	bne.n	80095c2 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 80095be:	2302      	movs	r3, #2
 80095c0:	e02d      	b.n	800961e <HAL_UARTEx_SetTxFifoThreshold+0x74>
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	2201      	movs	r2, #1
 80095c6:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	2224      	movs	r2, #36	@ 0x24
 80095ce:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	681b      	ldr	r3, [r3, #0]
 80095d8:	60fb      	str	r3, [r7, #12]
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	681b      	ldr	r3, [r3, #0]
 80095de:	681a      	ldr	r2, [r3, #0]
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	f022 0201 	bic.w	r2, r2, #1
 80095e8:	601a      	str	r2, [r3, #0]
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	689b      	ldr	r3, [r3, #8]
 80095f0:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	681b      	ldr	r3, [r3, #0]
 80095f8:	683a      	ldr	r2, [r7, #0]
 80095fa:	430a      	orrs	r2, r1
 80095fc:	609a      	str	r2, [r3, #8]
 80095fe:	6878      	ldr	r0, [r7, #4]
 8009600:	f000 f850 	bl	80096a4 <UARTEx_SetNbDataToProcess>
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	68fa      	ldr	r2, [r7, #12]
 800960a:	601a      	str	r2, [r3, #0]
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	2220      	movs	r2, #32
 8009610:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	2200      	movs	r2, #0
 8009618:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800961c:	2300      	movs	r3, #0
 800961e:	4618      	mov	r0, r3
 8009620:	3710      	adds	r7, #16
 8009622:	46bd      	mov	sp, r7
 8009624:	bd80      	pop	{r7, pc}

08009626 <HAL_UARTEx_SetRxFifoThreshold>:
 8009626:	b580      	push	{r7, lr}
 8009628:	b084      	sub	sp, #16
 800962a:	af00      	add	r7, sp, #0
 800962c:	6078      	str	r0, [r7, #4]
 800962e:	6039      	str	r1, [r7, #0]
 8009630:	687b      	ldr	r3, [r7, #4]
 8009632:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 8009636:	2b01      	cmp	r3, #1
 8009638:	d101      	bne.n	800963e <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800963a:	2302      	movs	r3, #2
 800963c:	e02d      	b.n	800969a <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800963e:	687b      	ldr	r3, [r7, #4]
 8009640:	2201      	movs	r2, #1
 8009642:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	2224      	movs	r2, #36	@ 0x24
 800964a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800964e:	687b      	ldr	r3, [r7, #4]
 8009650:	681b      	ldr	r3, [r3, #0]
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	60fb      	str	r3, [r7, #12]
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	681a      	ldr	r2, [r3, #0]
 800965c:	687b      	ldr	r3, [r7, #4]
 800965e:	681b      	ldr	r3, [r3, #0]
 8009660:	f022 0201 	bic.w	r2, r2, #1
 8009664:	601a      	str	r2, [r3, #0]
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	681b      	ldr	r3, [r3, #0]
 800966a:	689b      	ldr	r3, [r3, #8]
 800966c:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 8009670:	687b      	ldr	r3, [r7, #4]
 8009672:	681b      	ldr	r3, [r3, #0]
 8009674:	683a      	ldr	r2, [r7, #0]
 8009676:	430a      	orrs	r2, r1
 8009678:	609a      	str	r2, [r3, #8]
 800967a:	6878      	ldr	r0, [r7, #4]
 800967c:	f000 f812 	bl	80096a4 <UARTEx_SetNbDataToProcess>
 8009680:	687b      	ldr	r3, [r7, #4]
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	68fa      	ldr	r2, [r7, #12]
 8009686:	601a      	str	r2, [r3, #0]
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	2220      	movs	r2, #32
 800968c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009690:	687b      	ldr	r3, [r7, #4]
 8009692:	2200      	movs	r2, #0
 8009694:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009698:	2300      	movs	r3, #0
 800969a:	4618      	mov	r0, r3
 800969c:	3710      	adds	r7, #16
 800969e:	46bd      	mov	sp, r7
 80096a0:	bd80      	pop	{r7, pc}
	...

080096a4 <UARTEx_SetNbDataToProcess>:
 80096a4:	b480      	push	{r7}
 80096a6:	b085      	sub	sp, #20
 80096a8:	af00      	add	r7, sp, #0
 80096aa:	6078      	str	r0, [r7, #4]
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80096b0:	2b00      	cmp	r3, #0
 80096b2:	d108      	bne.n	80096c6 <UARTEx_SetNbDataToProcess+0x22>
 80096b4:	687b      	ldr	r3, [r7, #4]
 80096b6:	2201      	movs	r2, #1
 80096b8:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	2201      	movs	r2, #1
 80096c0:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 80096c4:	e031      	b.n	800972a <UARTEx_SetNbDataToProcess+0x86>
 80096c6:	2308      	movs	r3, #8
 80096c8:	73fb      	strb	r3, [r7, #15]
 80096ca:	2308      	movs	r3, #8
 80096cc:	73bb      	strb	r3, [r7, #14]
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	689b      	ldr	r3, [r3, #8]
 80096d4:	0e5b      	lsrs	r3, r3, #25
 80096d6:	b2db      	uxtb	r3, r3
 80096d8:	f003 0307 	and.w	r3, r3, #7
 80096dc:	737b      	strb	r3, [r7, #13]
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	689b      	ldr	r3, [r3, #8]
 80096e4:	0f5b      	lsrs	r3, r3, #29
 80096e6:	b2db      	uxtb	r3, r3
 80096e8:	f003 0307 	and.w	r3, r3, #7
 80096ec:	733b      	strb	r3, [r7, #12]
 80096ee:	7bbb      	ldrb	r3, [r7, #14]
 80096f0:	7b3a      	ldrb	r2, [r7, #12]
 80096f2:	4911      	ldr	r1, [pc, #68]	@ (8009738 <UARTEx_SetNbDataToProcess+0x94>)
 80096f4:	5c8a      	ldrb	r2, [r1, r2]
 80096f6:	fb02 f303 	mul.w	r3, r2, r3
 80096fa:	7b3a      	ldrb	r2, [r7, #12]
 80096fc:	490f      	ldr	r1, [pc, #60]	@ (800973c <UARTEx_SetNbDataToProcess+0x98>)
 80096fe:	5c8a      	ldrb	r2, [r1, r2]
 8009700:	fb93 f3f2 	sdiv	r3, r3, r2
 8009704:	b29a      	uxth	r2, r3
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800970c:	7bfb      	ldrb	r3, [r7, #15]
 800970e:	7b7a      	ldrb	r2, [r7, #13]
 8009710:	4909      	ldr	r1, [pc, #36]	@ (8009738 <UARTEx_SetNbDataToProcess+0x94>)
 8009712:	5c8a      	ldrb	r2, [r1, r2]
 8009714:	fb02 f303 	mul.w	r3, r2, r3
 8009718:	7b7a      	ldrb	r2, [r7, #13]
 800971a:	4908      	ldr	r1, [pc, #32]	@ (800973c <UARTEx_SetNbDataToProcess+0x98>)
 800971c:	5c8a      	ldrb	r2, [r1, r2]
 800971e:	fb93 f3f2 	sdiv	r3, r3, r2
 8009722:	b29a      	uxth	r2, r3
 8009724:	687b      	ldr	r3, [r7, #4]
 8009726:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800972a:	bf00      	nop
 800972c:	3714      	adds	r7, #20
 800972e:	46bd      	mov	sp, r7
 8009730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009734:	4770      	bx	lr
 8009736:	bf00      	nop
 8009738:	0800c9e4 	.word	0x0800c9e4
 800973c:	0800c9ec 	.word	0x0800c9ec

08009740 <atof>:
 8009740:	2100      	movs	r1, #0
 8009742:	f000 be09 	b.w	800a358 <strtod>

08009746 <atoi>:
 8009746:	220a      	movs	r2, #10
 8009748:	2100      	movs	r1, #0
 800974a:	f000 be8b 	b.w	800a464 <strtol>

0800974e <sulp>:
 800974e:	b570      	push	{r4, r5, r6, lr}
 8009750:	4604      	mov	r4, r0
 8009752:	460d      	mov	r5, r1
 8009754:	ec45 4b10 	vmov	d0, r4, r5
 8009758:	4616      	mov	r6, r2
 800975a:	f002 f85d 	bl	800b818 <__ulp>
 800975e:	ec51 0b10 	vmov	r0, r1, d0
 8009762:	b17e      	cbz	r6, 8009784 <sulp+0x36>
 8009764:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8009768:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800976c:	2b00      	cmp	r3, #0
 800976e:	dd09      	ble.n	8009784 <sulp+0x36>
 8009770:	051b      	lsls	r3, r3, #20
 8009772:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8009776:	2400      	movs	r4, #0
 8009778:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800977c:	4622      	mov	r2, r4
 800977e:	462b      	mov	r3, r5
 8009780:	f7f6 ff62 	bl	8000648 <__aeabi_dmul>
 8009784:	ec41 0b10 	vmov	d0, r0, r1
 8009788:	bd70      	pop	{r4, r5, r6, pc}
 800978a:	0000      	movs	r0, r0
 800978c:	0000      	movs	r0, r0
	...

08009790 <_strtod_l>:
 8009790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009794:	b09f      	sub	sp, #124	@ 0x7c
 8009796:	460c      	mov	r4, r1
 8009798:	9217      	str	r2, [sp, #92]	@ 0x5c
 800979a:	2200      	movs	r2, #0
 800979c:	921a      	str	r2, [sp, #104]	@ 0x68
 800979e:	9005      	str	r0, [sp, #20]
 80097a0:	f04f 0a00 	mov.w	sl, #0
 80097a4:	f04f 0b00 	mov.w	fp, #0
 80097a8:	460a      	mov	r2, r1
 80097aa:	9219      	str	r2, [sp, #100]	@ 0x64
 80097ac:	7811      	ldrb	r1, [r2, #0]
 80097ae:	292b      	cmp	r1, #43	@ 0x2b
 80097b0:	d04a      	beq.n	8009848 <_strtod_l+0xb8>
 80097b2:	d838      	bhi.n	8009826 <_strtod_l+0x96>
 80097b4:	290d      	cmp	r1, #13
 80097b6:	d832      	bhi.n	800981e <_strtod_l+0x8e>
 80097b8:	2908      	cmp	r1, #8
 80097ba:	d832      	bhi.n	8009822 <_strtod_l+0x92>
 80097bc:	2900      	cmp	r1, #0
 80097be:	d03b      	beq.n	8009838 <_strtod_l+0xa8>
 80097c0:	2200      	movs	r2, #0
 80097c2:	920e      	str	r2, [sp, #56]	@ 0x38
 80097c4:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 80097c6:	782a      	ldrb	r2, [r5, #0]
 80097c8:	2a30      	cmp	r2, #48	@ 0x30
 80097ca:	f040 80b2 	bne.w	8009932 <_strtod_l+0x1a2>
 80097ce:	786a      	ldrb	r2, [r5, #1]
 80097d0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80097d4:	2a58      	cmp	r2, #88	@ 0x58
 80097d6:	d16e      	bne.n	80098b6 <_strtod_l+0x126>
 80097d8:	9302      	str	r3, [sp, #8]
 80097da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80097dc:	9301      	str	r3, [sp, #4]
 80097de:	ab1a      	add	r3, sp, #104	@ 0x68
 80097e0:	9300      	str	r3, [sp, #0]
 80097e2:	4a8f      	ldr	r2, [pc, #572]	@ (8009a20 <_strtod_l+0x290>)
 80097e4:	9805      	ldr	r0, [sp, #20]
 80097e6:	ab1b      	add	r3, sp, #108	@ 0x6c
 80097e8:	a919      	add	r1, sp, #100	@ 0x64
 80097ea:	f001 f917 	bl	800aa1c <__gethex>
 80097ee:	f010 060f 	ands.w	r6, r0, #15
 80097f2:	4604      	mov	r4, r0
 80097f4:	d005      	beq.n	8009802 <_strtod_l+0x72>
 80097f6:	2e06      	cmp	r6, #6
 80097f8:	d128      	bne.n	800984c <_strtod_l+0xbc>
 80097fa:	3501      	adds	r5, #1
 80097fc:	2300      	movs	r3, #0
 80097fe:	9519      	str	r5, [sp, #100]	@ 0x64
 8009800:	930e      	str	r3, [sp, #56]	@ 0x38
 8009802:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009804:	2b00      	cmp	r3, #0
 8009806:	f040 858e 	bne.w	800a326 <_strtod_l+0xb96>
 800980a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800980c:	b1cb      	cbz	r3, 8009842 <_strtod_l+0xb2>
 800980e:	4652      	mov	r2, sl
 8009810:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8009814:	ec43 2b10 	vmov	d0, r2, r3
 8009818:	b01f      	add	sp, #124	@ 0x7c
 800981a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800981e:	2920      	cmp	r1, #32
 8009820:	d1ce      	bne.n	80097c0 <_strtod_l+0x30>
 8009822:	3201      	adds	r2, #1
 8009824:	e7c1      	b.n	80097aa <_strtod_l+0x1a>
 8009826:	292d      	cmp	r1, #45	@ 0x2d
 8009828:	d1ca      	bne.n	80097c0 <_strtod_l+0x30>
 800982a:	2101      	movs	r1, #1
 800982c:	910e      	str	r1, [sp, #56]	@ 0x38
 800982e:	1c51      	adds	r1, r2, #1
 8009830:	9119      	str	r1, [sp, #100]	@ 0x64
 8009832:	7852      	ldrb	r2, [r2, #1]
 8009834:	2a00      	cmp	r2, #0
 8009836:	d1c5      	bne.n	80097c4 <_strtod_l+0x34>
 8009838:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800983a:	9419      	str	r4, [sp, #100]	@ 0x64
 800983c:	2b00      	cmp	r3, #0
 800983e:	f040 8570 	bne.w	800a322 <_strtod_l+0xb92>
 8009842:	4652      	mov	r2, sl
 8009844:	465b      	mov	r3, fp
 8009846:	e7e5      	b.n	8009814 <_strtod_l+0x84>
 8009848:	2100      	movs	r1, #0
 800984a:	e7ef      	b.n	800982c <_strtod_l+0x9c>
 800984c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800984e:	b13a      	cbz	r2, 8009860 <_strtod_l+0xd0>
 8009850:	2135      	movs	r1, #53	@ 0x35
 8009852:	a81c      	add	r0, sp, #112	@ 0x70
 8009854:	f002 f8da 	bl	800ba0c <__copybits>
 8009858:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800985a:	9805      	ldr	r0, [sp, #20]
 800985c:	f001 fcb0 	bl	800b1c0 <_Bfree>
 8009860:	3e01      	subs	r6, #1
 8009862:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8009864:	2e04      	cmp	r6, #4
 8009866:	d806      	bhi.n	8009876 <_strtod_l+0xe6>
 8009868:	e8df f006 	tbb	[pc, r6]
 800986c:	201d0314 	.word	0x201d0314
 8009870:	14          	.byte	0x14
 8009871:	00          	.byte	0x00
 8009872:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8009876:	05e1      	lsls	r1, r4, #23
 8009878:	bf48      	it	mi
 800987a:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800987e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8009882:	0d1b      	lsrs	r3, r3, #20
 8009884:	051b      	lsls	r3, r3, #20
 8009886:	2b00      	cmp	r3, #0
 8009888:	d1bb      	bne.n	8009802 <_strtod_l+0x72>
 800988a:	f000 ffcf 	bl	800a82c <__errno>
 800988e:	2322      	movs	r3, #34	@ 0x22
 8009890:	6003      	str	r3, [r0, #0]
 8009892:	e7b6      	b.n	8009802 <_strtod_l+0x72>
 8009894:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8009898:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800989c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80098a0:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80098a4:	e7e7      	b.n	8009876 <_strtod_l+0xe6>
 80098a6:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8009a28 <_strtod_l+0x298>
 80098aa:	e7e4      	b.n	8009876 <_strtod_l+0xe6>
 80098ac:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 80098b0:	f04f 3aff 	mov.w	sl, #4294967295
 80098b4:	e7df      	b.n	8009876 <_strtod_l+0xe6>
 80098b6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80098b8:	1c5a      	adds	r2, r3, #1
 80098ba:	9219      	str	r2, [sp, #100]	@ 0x64
 80098bc:	785b      	ldrb	r3, [r3, #1]
 80098be:	2b30      	cmp	r3, #48	@ 0x30
 80098c0:	d0f9      	beq.n	80098b6 <_strtod_l+0x126>
 80098c2:	2b00      	cmp	r3, #0
 80098c4:	d09d      	beq.n	8009802 <_strtod_l+0x72>
 80098c6:	2301      	movs	r3, #1
 80098c8:	2700      	movs	r7, #0
 80098ca:	9308      	str	r3, [sp, #32]
 80098cc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80098ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80098d0:	970b      	str	r7, [sp, #44]	@ 0x2c
 80098d2:	46b9      	mov	r9, r7
 80098d4:	220a      	movs	r2, #10
 80098d6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80098d8:	7805      	ldrb	r5, [r0, #0]
 80098da:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 80098de:	b2d9      	uxtb	r1, r3
 80098e0:	2909      	cmp	r1, #9
 80098e2:	d928      	bls.n	8009936 <_strtod_l+0x1a6>
 80098e4:	494f      	ldr	r1, [pc, #316]	@ (8009a24 <_strtod_l+0x294>)
 80098e6:	2201      	movs	r2, #1
 80098e8:	f000 ff09 	bl	800a6fe <strncmp>
 80098ec:	2800      	cmp	r0, #0
 80098ee:	d032      	beq.n	8009956 <_strtod_l+0x1c6>
 80098f0:	2000      	movs	r0, #0
 80098f2:	462a      	mov	r2, r5
 80098f4:	900a      	str	r0, [sp, #40]	@ 0x28
 80098f6:	464d      	mov	r5, r9
 80098f8:	4603      	mov	r3, r0
 80098fa:	2a65      	cmp	r2, #101	@ 0x65
 80098fc:	d001      	beq.n	8009902 <_strtod_l+0x172>
 80098fe:	2a45      	cmp	r2, #69	@ 0x45
 8009900:	d114      	bne.n	800992c <_strtod_l+0x19c>
 8009902:	b91d      	cbnz	r5, 800990c <_strtod_l+0x17c>
 8009904:	9a08      	ldr	r2, [sp, #32]
 8009906:	4302      	orrs	r2, r0
 8009908:	d096      	beq.n	8009838 <_strtod_l+0xa8>
 800990a:	2500      	movs	r5, #0
 800990c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800990e:	1c62      	adds	r2, r4, #1
 8009910:	9219      	str	r2, [sp, #100]	@ 0x64
 8009912:	7862      	ldrb	r2, [r4, #1]
 8009914:	2a2b      	cmp	r2, #43	@ 0x2b
 8009916:	d07a      	beq.n	8009a0e <_strtod_l+0x27e>
 8009918:	2a2d      	cmp	r2, #45	@ 0x2d
 800991a:	d07e      	beq.n	8009a1a <_strtod_l+0x28a>
 800991c:	f04f 0c00 	mov.w	ip, #0
 8009920:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8009924:	2909      	cmp	r1, #9
 8009926:	f240 8085 	bls.w	8009a34 <_strtod_l+0x2a4>
 800992a:	9419      	str	r4, [sp, #100]	@ 0x64
 800992c:	f04f 0800 	mov.w	r8, #0
 8009930:	e0a5      	b.n	8009a7e <_strtod_l+0x2ee>
 8009932:	2300      	movs	r3, #0
 8009934:	e7c8      	b.n	80098c8 <_strtod_l+0x138>
 8009936:	f1b9 0f08 	cmp.w	r9, #8
 800993a:	bfd8      	it	le
 800993c:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 800993e:	f100 0001 	add.w	r0, r0, #1
 8009942:	bfda      	itte	le
 8009944:	fb02 3301 	mlale	r3, r2, r1, r3
 8009948:	930b      	strle	r3, [sp, #44]	@ 0x2c
 800994a:	fb02 3707 	mlagt	r7, r2, r7, r3
 800994e:	f109 0901 	add.w	r9, r9, #1
 8009952:	9019      	str	r0, [sp, #100]	@ 0x64
 8009954:	e7bf      	b.n	80098d6 <_strtod_l+0x146>
 8009956:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009958:	1c5a      	adds	r2, r3, #1
 800995a:	9219      	str	r2, [sp, #100]	@ 0x64
 800995c:	785a      	ldrb	r2, [r3, #1]
 800995e:	f1b9 0f00 	cmp.w	r9, #0
 8009962:	d03b      	beq.n	80099dc <_strtod_l+0x24c>
 8009964:	900a      	str	r0, [sp, #40]	@ 0x28
 8009966:	464d      	mov	r5, r9
 8009968:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800996c:	2b09      	cmp	r3, #9
 800996e:	d912      	bls.n	8009996 <_strtod_l+0x206>
 8009970:	2301      	movs	r3, #1
 8009972:	e7c2      	b.n	80098fa <_strtod_l+0x16a>
 8009974:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009976:	1c5a      	adds	r2, r3, #1
 8009978:	9219      	str	r2, [sp, #100]	@ 0x64
 800997a:	785a      	ldrb	r2, [r3, #1]
 800997c:	3001      	adds	r0, #1
 800997e:	2a30      	cmp	r2, #48	@ 0x30
 8009980:	d0f8      	beq.n	8009974 <_strtod_l+0x1e4>
 8009982:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8009986:	2b08      	cmp	r3, #8
 8009988:	f200 84d2 	bhi.w	800a330 <_strtod_l+0xba0>
 800998c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800998e:	900a      	str	r0, [sp, #40]	@ 0x28
 8009990:	2000      	movs	r0, #0
 8009992:	930c      	str	r3, [sp, #48]	@ 0x30
 8009994:	4605      	mov	r5, r0
 8009996:	3a30      	subs	r2, #48	@ 0x30
 8009998:	f100 0301 	add.w	r3, r0, #1
 800999c:	d018      	beq.n	80099d0 <_strtod_l+0x240>
 800999e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80099a0:	4419      	add	r1, r3
 80099a2:	910a      	str	r1, [sp, #40]	@ 0x28
 80099a4:	462e      	mov	r6, r5
 80099a6:	f04f 0e0a 	mov.w	lr, #10
 80099aa:	1c71      	adds	r1, r6, #1
 80099ac:	eba1 0c05 	sub.w	ip, r1, r5
 80099b0:	4563      	cmp	r3, ip
 80099b2:	dc15      	bgt.n	80099e0 <_strtod_l+0x250>
 80099b4:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80099b8:	182b      	adds	r3, r5, r0
 80099ba:	2b08      	cmp	r3, #8
 80099bc:	f105 0501 	add.w	r5, r5, #1
 80099c0:	4405      	add	r5, r0
 80099c2:	dc1a      	bgt.n	80099fa <_strtod_l+0x26a>
 80099c4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80099c6:	230a      	movs	r3, #10
 80099c8:	fb03 2301 	mla	r3, r3, r1, r2
 80099cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80099ce:	2300      	movs	r3, #0
 80099d0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80099d2:	1c51      	adds	r1, r2, #1
 80099d4:	9119      	str	r1, [sp, #100]	@ 0x64
 80099d6:	7852      	ldrb	r2, [r2, #1]
 80099d8:	4618      	mov	r0, r3
 80099da:	e7c5      	b.n	8009968 <_strtod_l+0x1d8>
 80099dc:	4648      	mov	r0, r9
 80099de:	e7ce      	b.n	800997e <_strtod_l+0x1ee>
 80099e0:	2e08      	cmp	r6, #8
 80099e2:	dc05      	bgt.n	80099f0 <_strtod_l+0x260>
 80099e4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80099e6:	fb0e f606 	mul.w	r6, lr, r6
 80099ea:	960b      	str	r6, [sp, #44]	@ 0x2c
 80099ec:	460e      	mov	r6, r1
 80099ee:	e7dc      	b.n	80099aa <_strtod_l+0x21a>
 80099f0:	2910      	cmp	r1, #16
 80099f2:	bfd8      	it	le
 80099f4:	fb0e f707 	mulle.w	r7, lr, r7
 80099f8:	e7f8      	b.n	80099ec <_strtod_l+0x25c>
 80099fa:	2b0f      	cmp	r3, #15
 80099fc:	bfdc      	itt	le
 80099fe:	230a      	movle	r3, #10
 8009a00:	fb03 2707 	mlale	r7, r3, r7, r2
 8009a04:	e7e3      	b.n	80099ce <_strtod_l+0x23e>
 8009a06:	2300      	movs	r3, #0
 8009a08:	930a      	str	r3, [sp, #40]	@ 0x28
 8009a0a:	2301      	movs	r3, #1
 8009a0c:	e77a      	b.n	8009904 <_strtod_l+0x174>
 8009a0e:	f04f 0c00 	mov.w	ip, #0
 8009a12:	1ca2      	adds	r2, r4, #2
 8009a14:	9219      	str	r2, [sp, #100]	@ 0x64
 8009a16:	78a2      	ldrb	r2, [r4, #2]
 8009a18:	e782      	b.n	8009920 <_strtod_l+0x190>
 8009a1a:	f04f 0c01 	mov.w	ip, #1
 8009a1e:	e7f8      	b.n	8009a12 <_strtod_l+0x282>
 8009a20:	0800cb70 	.word	0x0800cb70
 8009a24:	0800c9f4 	.word	0x0800c9f4
 8009a28:	7ff00000 	.word	0x7ff00000
 8009a2c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8009a2e:	1c51      	adds	r1, r2, #1
 8009a30:	9119      	str	r1, [sp, #100]	@ 0x64
 8009a32:	7852      	ldrb	r2, [r2, #1]
 8009a34:	2a30      	cmp	r2, #48	@ 0x30
 8009a36:	d0f9      	beq.n	8009a2c <_strtod_l+0x29c>
 8009a38:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8009a3c:	2908      	cmp	r1, #8
 8009a3e:	f63f af75 	bhi.w	800992c <_strtod_l+0x19c>
 8009a42:	3a30      	subs	r2, #48	@ 0x30
 8009a44:	9209      	str	r2, [sp, #36]	@ 0x24
 8009a46:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8009a48:	920f      	str	r2, [sp, #60]	@ 0x3c
 8009a4a:	f04f 080a 	mov.w	r8, #10
 8009a4e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8009a50:	1c56      	adds	r6, r2, #1
 8009a52:	9619      	str	r6, [sp, #100]	@ 0x64
 8009a54:	7852      	ldrb	r2, [r2, #1]
 8009a56:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8009a5a:	f1be 0f09 	cmp.w	lr, #9
 8009a5e:	d939      	bls.n	8009ad4 <_strtod_l+0x344>
 8009a60:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8009a62:	1a76      	subs	r6, r6, r1
 8009a64:	2e08      	cmp	r6, #8
 8009a66:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8009a6a:	dc03      	bgt.n	8009a74 <_strtod_l+0x2e4>
 8009a6c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009a6e:	4588      	cmp	r8, r1
 8009a70:	bfa8      	it	ge
 8009a72:	4688      	movge	r8, r1
 8009a74:	f1bc 0f00 	cmp.w	ip, #0
 8009a78:	d001      	beq.n	8009a7e <_strtod_l+0x2ee>
 8009a7a:	f1c8 0800 	rsb	r8, r8, #0
 8009a7e:	2d00      	cmp	r5, #0
 8009a80:	d14e      	bne.n	8009b20 <_strtod_l+0x390>
 8009a82:	9908      	ldr	r1, [sp, #32]
 8009a84:	4308      	orrs	r0, r1
 8009a86:	f47f aebc 	bne.w	8009802 <_strtod_l+0x72>
 8009a8a:	2b00      	cmp	r3, #0
 8009a8c:	f47f aed4 	bne.w	8009838 <_strtod_l+0xa8>
 8009a90:	2a69      	cmp	r2, #105	@ 0x69
 8009a92:	d028      	beq.n	8009ae6 <_strtod_l+0x356>
 8009a94:	dc25      	bgt.n	8009ae2 <_strtod_l+0x352>
 8009a96:	2a49      	cmp	r2, #73	@ 0x49
 8009a98:	d025      	beq.n	8009ae6 <_strtod_l+0x356>
 8009a9a:	2a4e      	cmp	r2, #78	@ 0x4e
 8009a9c:	f47f aecc 	bne.w	8009838 <_strtod_l+0xa8>
 8009aa0:	499a      	ldr	r1, [pc, #616]	@ (8009d0c <_strtod_l+0x57c>)
 8009aa2:	a819      	add	r0, sp, #100	@ 0x64
 8009aa4:	f001 f9dc 	bl	800ae60 <__match>
 8009aa8:	2800      	cmp	r0, #0
 8009aaa:	f43f aec5 	beq.w	8009838 <_strtod_l+0xa8>
 8009aae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009ab0:	781b      	ldrb	r3, [r3, #0]
 8009ab2:	2b28      	cmp	r3, #40	@ 0x28
 8009ab4:	d12e      	bne.n	8009b14 <_strtod_l+0x384>
 8009ab6:	4996      	ldr	r1, [pc, #600]	@ (8009d10 <_strtod_l+0x580>)
 8009ab8:	aa1c      	add	r2, sp, #112	@ 0x70
 8009aba:	a819      	add	r0, sp, #100	@ 0x64
 8009abc:	f001 f9e4 	bl	800ae88 <__hexnan>
 8009ac0:	2805      	cmp	r0, #5
 8009ac2:	d127      	bne.n	8009b14 <_strtod_l+0x384>
 8009ac4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8009ac6:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8009aca:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8009ace:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8009ad2:	e696      	b.n	8009802 <_strtod_l+0x72>
 8009ad4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009ad6:	fb08 2101 	mla	r1, r8, r1, r2
 8009ada:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8009ade:	9209      	str	r2, [sp, #36]	@ 0x24
 8009ae0:	e7b5      	b.n	8009a4e <_strtod_l+0x2be>
 8009ae2:	2a6e      	cmp	r2, #110	@ 0x6e
 8009ae4:	e7da      	b.n	8009a9c <_strtod_l+0x30c>
 8009ae6:	498b      	ldr	r1, [pc, #556]	@ (8009d14 <_strtod_l+0x584>)
 8009ae8:	a819      	add	r0, sp, #100	@ 0x64
 8009aea:	f001 f9b9 	bl	800ae60 <__match>
 8009aee:	2800      	cmp	r0, #0
 8009af0:	f43f aea2 	beq.w	8009838 <_strtod_l+0xa8>
 8009af4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009af6:	4988      	ldr	r1, [pc, #544]	@ (8009d18 <_strtod_l+0x588>)
 8009af8:	3b01      	subs	r3, #1
 8009afa:	a819      	add	r0, sp, #100	@ 0x64
 8009afc:	9319      	str	r3, [sp, #100]	@ 0x64
 8009afe:	f001 f9af 	bl	800ae60 <__match>
 8009b02:	b910      	cbnz	r0, 8009b0a <_strtod_l+0x37a>
 8009b04:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009b06:	3301      	adds	r3, #1
 8009b08:	9319      	str	r3, [sp, #100]	@ 0x64
 8009b0a:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 8009d28 <_strtod_l+0x598>
 8009b0e:	f04f 0a00 	mov.w	sl, #0
 8009b12:	e676      	b.n	8009802 <_strtod_l+0x72>
 8009b14:	4881      	ldr	r0, [pc, #516]	@ (8009d1c <_strtod_l+0x58c>)
 8009b16:	f000 fec7 	bl	800a8a8 <nan>
 8009b1a:	ec5b ab10 	vmov	sl, fp, d0
 8009b1e:	e670      	b.n	8009802 <_strtod_l+0x72>
 8009b20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009b22:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009b24:	eba8 0303 	sub.w	r3, r8, r3
 8009b28:	f1b9 0f00 	cmp.w	r9, #0
 8009b2c:	bf08      	it	eq
 8009b2e:	46a9      	moveq	r9, r5
 8009b30:	2d10      	cmp	r5, #16
 8009b32:	9309      	str	r3, [sp, #36]	@ 0x24
 8009b34:	462c      	mov	r4, r5
 8009b36:	bfa8      	it	ge
 8009b38:	2410      	movge	r4, #16
 8009b3a:	f7f6 fd0b 	bl	8000554 <__aeabi_ui2d>
 8009b3e:	2d09      	cmp	r5, #9
 8009b40:	4682      	mov	sl, r0
 8009b42:	468b      	mov	fp, r1
 8009b44:	dc13      	bgt.n	8009b6e <_strtod_l+0x3de>
 8009b46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	f43f ae5a 	beq.w	8009802 <_strtod_l+0x72>
 8009b4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009b50:	dd78      	ble.n	8009c44 <_strtod_l+0x4b4>
 8009b52:	2b16      	cmp	r3, #22
 8009b54:	dc5f      	bgt.n	8009c16 <_strtod_l+0x486>
 8009b56:	4972      	ldr	r1, [pc, #456]	@ (8009d20 <_strtod_l+0x590>)
 8009b58:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8009b5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009b60:	4652      	mov	r2, sl
 8009b62:	465b      	mov	r3, fp
 8009b64:	f7f6 fd70 	bl	8000648 <__aeabi_dmul>
 8009b68:	4682      	mov	sl, r0
 8009b6a:	468b      	mov	fp, r1
 8009b6c:	e649      	b.n	8009802 <_strtod_l+0x72>
 8009b6e:	4b6c      	ldr	r3, [pc, #432]	@ (8009d20 <_strtod_l+0x590>)
 8009b70:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8009b74:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8009b78:	f7f6 fd66 	bl	8000648 <__aeabi_dmul>
 8009b7c:	4682      	mov	sl, r0
 8009b7e:	4638      	mov	r0, r7
 8009b80:	468b      	mov	fp, r1
 8009b82:	f7f6 fce7 	bl	8000554 <__aeabi_ui2d>
 8009b86:	4602      	mov	r2, r0
 8009b88:	460b      	mov	r3, r1
 8009b8a:	4650      	mov	r0, sl
 8009b8c:	4659      	mov	r1, fp
 8009b8e:	f7f6 fba5 	bl	80002dc <__adddf3>
 8009b92:	2d0f      	cmp	r5, #15
 8009b94:	4682      	mov	sl, r0
 8009b96:	468b      	mov	fp, r1
 8009b98:	ddd5      	ble.n	8009b46 <_strtod_l+0x3b6>
 8009b9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009b9c:	1b2c      	subs	r4, r5, r4
 8009b9e:	441c      	add	r4, r3
 8009ba0:	2c00      	cmp	r4, #0
 8009ba2:	f340 8093 	ble.w	8009ccc <_strtod_l+0x53c>
 8009ba6:	f014 030f 	ands.w	r3, r4, #15
 8009baa:	d00a      	beq.n	8009bc2 <_strtod_l+0x432>
 8009bac:	495c      	ldr	r1, [pc, #368]	@ (8009d20 <_strtod_l+0x590>)
 8009bae:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8009bb2:	4652      	mov	r2, sl
 8009bb4:	465b      	mov	r3, fp
 8009bb6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009bba:	f7f6 fd45 	bl	8000648 <__aeabi_dmul>
 8009bbe:	4682      	mov	sl, r0
 8009bc0:	468b      	mov	fp, r1
 8009bc2:	f034 040f 	bics.w	r4, r4, #15
 8009bc6:	d073      	beq.n	8009cb0 <_strtod_l+0x520>
 8009bc8:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8009bcc:	dd49      	ble.n	8009c62 <_strtod_l+0x4d2>
 8009bce:	2400      	movs	r4, #0
 8009bd0:	46a0      	mov	r8, r4
 8009bd2:	940b      	str	r4, [sp, #44]	@ 0x2c
 8009bd4:	46a1      	mov	r9, r4
 8009bd6:	9a05      	ldr	r2, [sp, #20]
 8009bd8:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8009d28 <_strtod_l+0x598>
 8009bdc:	2322      	movs	r3, #34	@ 0x22
 8009bde:	6013      	str	r3, [r2, #0]
 8009be0:	f04f 0a00 	mov.w	sl, #0
 8009be4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009be6:	2b00      	cmp	r3, #0
 8009be8:	f43f ae0b 	beq.w	8009802 <_strtod_l+0x72>
 8009bec:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009bee:	9805      	ldr	r0, [sp, #20]
 8009bf0:	f001 fae6 	bl	800b1c0 <_Bfree>
 8009bf4:	9805      	ldr	r0, [sp, #20]
 8009bf6:	4649      	mov	r1, r9
 8009bf8:	f001 fae2 	bl	800b1c0 <_Bfree>
 8009bfc:	9805      	ldr	r0, [sp, #20]
 8009bfe:	4641      	mov	r1, r8
 8009c00:	f001 fade 	bl	800b1c0 <_Bfree>
 8009c04:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009c06:	9805      	ldr	r0, [sp, #20]
 8009c08:	f001 fada 	bl	800b1c0 <_Bfree>
 8009c0c:	9805      	ldr	r0, [sp, #20]
 8009c0e:	4621      	mov	r1, r4
 8009c10:	f001 fad6 	bl	800b1c0 <_Bfree>
 8009c14:	e5f5      	b.n	8009802 <_strtod_l+0x72>
 8009c16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009c18:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8009c1c:	4293      	cmp	r3, r2
 8009c1e:	dbbc      	blt.n	8009b9a <_strtod_l+0x40a>
 8009c20:	4c3f      	ldr	r4, [pc, #252]	@ (8009d20 <_strtod_l+0x590>)
 8009c22:	f1c5 050f 	rsb	r5, r5, #15
 8009c26:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8009c2a:	4652      	mov	r2, sl
 8009c2c:	465b      	mov	r3, fp
 8009c2e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009c32:	f7f6 fd09 	bl	8000648 <__aeabi_dmul>
 8009c36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009c38:	1b5d      	subs	r5, r3, r5
 8009c3a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8009c3e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8009c42:	e78f      	b.n	8009b64 <_strtod_l+0x3d4>
 8009c44:	3316      	adds	r3, #22
 8009c46:	dba8      	blt.n	8009b9a <_strtod_l+0x40a>
 8009c48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009c4a:	eba3 0808 	sub.w	r8, r3, r8
 8009c4e:	4b34      	ldr	r3, [pc, #208]	@ (8009d20 <_strtod_l+0x590>)
 8009c50:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8009c54:	e9d8 2300 	ldrd	r2, r3, [r8]
 8009c58:	4650      	mov	r0, sl
 8009c5a:	4659      	mov	r1, fp
 8009c5c:	f7f6 fe1e 	bl	800089c <__aeabi_ddiv>
 8009c60:	e782      	b.n	8009b68 <_strtod_l+0x3d8>
 8009c62:	2300      	movs	r3, #0
 8009c64:	4f2f      	ldr	r7, [pc, #188]	@ (8009d24 <_strtod_l+0x594>)
 8009c66:	1124      	asrs	r4, r4, #4
 8009c68:	4650      	mov	r0, sl
 8009c6a:	4659      	mov	r1, fp
 8009c6c:	461e      	mov	r6, r3
 8009c6e:	2c01      	cmp	r4, #1
 8009c70:	dc21      	bgt.n	8009cb6 <_strtod_l+0x526>
 8009c72:	b10b      	cbz	r3, 8009c78 <_strtod_l+0x4e8>
 8009c74:	4682      	mov	sl, r0
 8009c76:	468b      	mov	fp, r1
 8009c78:	492a      	ldr	r1, [pc, #168]	@ (8009d24 <_strtod_l+0x594>)
 8009c7a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8009c7e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8009c82:	4652      	mov	r2, sl
 8009c84:	465b      	mov	r3, fp
 8009c86:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009c8a:	f7f6 fcdd 	bl	8000648 <__aeabi_dmul>
 8009c8e:	4b26      	ldr	r3, [pc, #152]	@ (8009d28 <_strtod_l+0x598>)
 8009c90:	460a      	mov	r2, r1
 8009c92:	400b      	ands	r3, r1
 8009c94:	4925      	ldr	r1, [pc, #148]	@ (8009d2c <_strtod_l+0x59c>)
 8009c96:	428b      	cmp	r3, r1
 8009c98:	4682      	mov	sl, r0
 8009c9a:	d898      	bhi.n	8009bce <_strtod_l+0x43e>
 8009c9c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8009ca0:	428b      	cmp	r3, r1
 8009ca2:	bf86      	itte	hi
 8009ca4:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8009d30 <_strtod_l+0x5a0>
 8009ca8:	f04f 3aff 	movhi.w	sl, #4294967295
 8009cac:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8009cb0:	2300      	movs	r3, #0
 8009cb2:	9308      	str	r3, [sp, #32]
 8009cb4:	e076      	b.n	8009da4 <_strtod_l+0x614>
 8009cb6:	07e2      	lsls	r2, r4, #31
 8009cb8:	d504      	bpl.n	8009cc4 <_strtod_l+0x534>
 8009cba:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009cbe:	f7f6 fcc3 	bl	8000648 <__aeabi_dmul>
 8009cc2:	2301      	movs	r3, #1
 8009cc4:	3601      	adds	r6, #1
 8009cc6:	1064      	asrs	r4, r4, #1
 8009cc8:	3708      	adds	r7, #8
 8009cca:	e7d0      	b.n	8009c6e <_strtod_l+0x4de>
 8009ccc:	d0f0      	beq.n	8009cb0 <_strtod_l+0x520>
 8009cce:	4264      	negs	r4, r4
 8009cd0:	f014 020f 	ands.w	r2, r4, #15
 8009cd4:	d00a      	beq.n	8009cec <_strtod_l+0x55c>
 8009cd6:	4b12      	ldr	r3, [pc, #72]	@ (8009d20 <_strtod_l+0x590>)
 8009cd8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009cdc:	4650      	mov	r0, sl
 8009cde:	4659      	mov	r1, fp
 8009ce0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ce4:	f7f6 fdda 	bl	800089c <__aeabi_ddiv>
 8009ce8:	4682      	mov	sl, r0
 8009cea:	468b      	mov	fp, r1
 8009cec:	1124      	asrs	r4, r4, #4
 8009cee:	d0df      	beq.n	8009cb0 <_strtod_l+0x520>
 8009cf0:	2c1f      	cmp	r4, #31
 8009cf2:	dd1f      	ble.n	8009d34 <_strtod_l+0x5a4>
 8009cf4:	2400      	movs	r4, #0
 8009cf6:	46a0      	mov	r8, r4
 8009cf8:	940b      	str	r4, [sp, #44]	@ 0x2c
 8009cfa:	46a1      	mov	r9, r4
 8009cfc:	9a05      	ldr	r2, [sp, #20]
 8009cfe:	2322      	movs	r3, #34	@ 0x22
 8009d00:	f04f 0a00 	mov.w	sl, #0
 8009d04:	f04f 0b00 	mov.w	fp, #0
 8009d08:	6013      	str	r3, [r2, #0]
 8009d0a:	e76b      	b.n	8009be4 <_strtod_l+0x454>
 8009d0c:	0800c9ff 	.word	0x0800c9ff
 8009d10:	0800cb5c 	.word	0x0800cb5c
 8009d14:	0800c9f6 	.word	0x0800c9f6
 8009d18:	0800c9f9 	.word	0x0800c9f9
 8009d1c:	0800cb59 	.word	0x0800cb59
 8009d20:	0800cce8 	.word	0x0800cce8
 8009d24:	0800ccc0 	.word	0x0800ccc0
 8009d28:	7ff00000 	.word	0x7ff00000
 8009d2c:	7ca00000 	.word	0x7ca00000
 8009d30:	7fefffff 	.word	0x7fefffff
 8009d34:	f014 0310 	ands.w	r3, r4, #16
 8009d38:	bf18      	it	ne
 8009d3a:	236a      	movne	r3, #106	@ 0x6a
 8009d3c:	4ea9      	ldr	r6, [pc, #676]	@ (8009fe4 <_strtod_l+0x854>)
 8009d3e:	9308      	str	r3, [sp, #32]
 8009d40:	4650      	mov	r0, sl
 8009d42:	4659      	mov	r1, fp
 8009d44:	2300      	movs	r3, #0
 8009d46:	07e7      	lsls	r7, r4, #31
 8009d48:	d504      	bpl.n	8009d54 <_strtod_l+0x5c4>
 8009d4a:	e9d6 2300 	ldrd	r2, r3, [r6]
 8009d4e:	f7f6 fc7b 	bl	8000648 <__aeabi_dmul>
 8009d52:	2301      	movs	r3, #1
 8009d54:	1064      	asrs	r4, r4, #1
 8009d56:	f106 0608 	add.w	r6, r6, #8
 8009d5a:	d1f4      	bne.n	8009d46 <_strtod_l+0x5b6>
 8009d5c:	b10b      	cbz	r3, 8009d62 <_strtod_l+0x5d2>
 8009d5e:	4682      	mov	sl, r0
 8009d60:	468b      	mov	fp, r1
 8009d62:	9b08      	ldr	r3, [sp, #32]
 8009d64:	b1b3      	cbz	r3, 8009d94 <_strtod_l+0x604>
 8009d66:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8009d6a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8009d6e:	2b00      	cmp	r3, #0
 8009d70:	4659      	mov	r1, fp
 8009d72:	dd0f      	ble.n	8009d94 <_strtod_l+0x604>
 8009d74:	2b1f      	cmp	r3, #31
 8009d76:	dd56      	ble.n	8009e26 <_strtod_l+0x696>
 8009d78:	2b34      	cmp	r3, #52	@ 0x34
 8009d7a:	bfde      	ittt	le
 8009d7c:	f04f 33ff 	movle.w	r3, #4294967295
 8009d80:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8009d84:	4093      	lslle	r3, r2
 8009d86:	f04f 0a00 	mov.w	sl, #0
 8009d8a:	bfcc      	ite	gt
 8009d8c:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8009d90:	ea03 0b01 	andle.w	fp, r3, r1
 8009d94:	2200      	movs	r2, #0
 8009d96:	2300      	movs	r3, #0
 8009d98:	4650      	mov	r0, sl
 8009d9a:	4659      	mov	r1, fp
 8009d9c:	f7f6 febc 	bl	8000b18 <__aeabi_dcmpeq>
 8009da0:	2800      	cmp	r0, #0
 8009da2:	d1a7      	bne.n	8009cf4 <_strtod_l+0x564>
 8009da4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009da6:	9300      	str	r3, [sp, #0]
 8009da8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009daa:	9805      	ldr	r0, [sp, #20]
 8009dac:	462b      	mov	r3, r5
 8009dae:	464a      	mov	r2, r9
 8009db0:	f001 fa6e 	bl	800b290 <__s2b>
 8009db4:	900b      	str	r0, [sp, #44]	@ 0x2c
 8009db6:	2800      	cmp	r0, #0
 8009db8:	f43f af09 	beq.w	8009bce <_strtod_l+0x43e>
 8009dbc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009dbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009dc0:	2a00      	cmp	r2, #0
 8009dc2:	eba3 0308 	sub.w	r3, r3, r8
 8009dc6:	bfa8      	it	ge
 8009dc8:	2300      	movge	r3, #0
 8009dca:	9312      	str	r3, [sp, #72]	@ 0x48
 8009dcc:	2400      	movs	r4, #0
 8009dce:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8009dd2:	9316      	str	r3, [sp, #88]	@ 0x58
 8009dd4:	46a0      	mov	r8, r4
 8009dd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009dd8:	9805      	ldr	r0, [sp, #20]
 8009dda:	6859      	ldr	r1, [r3, #4]
 8009ddc:	f001 f9b0 	bl	800b140 <_Balloc>
 8009de0:	4681      	mov	r9, r0
 8009de2:	2800      	cmp	r0, #0
 8009de4:	f43f aef7 	beq.w	8009bd6 <_strtod_l+0x446>
 8009de8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009dea:	691a      	ldr	r2, [r3, #16]
 8009dec:	3202      	adds	r2, #2
 8009dee:	f103 010c 	add.w	r1, r3, #12
 8009df2:	0092      	lsls	r2, r2, #2
 8009df4:	300c      	adds	r0, #12
 8009df6:	f000 fd46 	bl	800a886 <memcpy>
 8009dfa:	ec4b ab10 	vmov	d0, sl, fp
 8009dfe:	9805      	ldr	r0, [sp, #20]
 8009e00:	aa1c      	add	r2, sp, #112	@ 0x70
 8009e02:	a91b      	add	r1, sp, #108	@ 0x6c
 8009e04:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8009e08:	f001 fd76 	bl	800b8f8 <__d2b>
 8009e0c:	901a      	str	r0, [sp, #104]	@ 0x68
 8009e0e:	2800      	cmp	r0, #0
 8009e10:	f43f aee1 	beq.w	8009bd6 <_strtod_l+0x446>
 8009e14:	9805      	ldr	r0, [sp, #20]
 8009e16:	2101      	movs	r1, #1
 8009e18:	f001 fad0 	bl	800b3bc <__i2b>
 8009e1c:	4680      	mov	r8, r0
 8009e1e:	b948      	cbnz	r0, 8009e34 <_strtod_l+0x6a4>
 8009e20:	f04f 0800 	mov.w	r8, #0
 8009e24:	e6d7      	b.n	8009bd6 <_strtod_l+0x446>
 8009e26:	f04f 32ff 	mov.w	r2, #4294967295
 8009e2a:	fa02 f303 	lsl.w	r3, r2, r3
 8009e2e:	ea03 0a0a 	and.w	sl, r3, sl
 8009e32:	e7af      	b.n	8009d94 <_strtod_l+0x604>
 8009e34:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8009e36:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8009e38:	2d00      	cmp	r5, #0
 8009e3a:	bfab      	itete	ge
 8009e3c:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8009e3e:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8009e40:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8009e42:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8009e44:	bfac      	ite	ge
 8009e46:	18ef      	addge	r7, r5, r3
 8009e48:	1b5e      	sublt	r6, r3, r5
 8009e4a:	9b08      	ldr	r3, [sp, #32]
 8009e4c:	1aed      	subs	r5, r5, r3
 8009e4e:	4415      	add	r5, r2
 8009e50:	4b65      	ldr	r3, [pc, #404]	@ (8009fe8 <_strtod_l+0x858>)
 8009e52:	3d01      	subs	r5, #1
 8009e54:	429d      	cmp	r5, r3
 8009e56:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8009e5a:	da50      	bge.n	8009efe <_strtod_l+0x76e>
 8009e5c:	1b5b      	subs	r3, r3, r5
 8009e5e:	2b1f      	cmp	r3, #31
 8009e60:	eba2 0203 	sub.w	r2, r2, r3
 8009e64:	f04f 0101 	mov.w	r1, #1
 8009e68:	dc3d      	bgt.n	8009ee6 <_strtod_l+0x756>
 8009e6a:	fa01 f303 	lsl.w	r3, r1, r3
 8009e6e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8009e70:	2300      	movs	r3, #0
 8009e72:	9310      	str	r3, [sp, #64]	@ 0x40
 8009e74:	18bd      	adds	r5, r7, r2
 8009e76:	9b08      	ldr	r3, [sp, #32]
 8009e78:	42af      	cmp	r7, r5
 8009e7a:	4416      	add	r6, r2
 8009e7c:	441e      	add	r6, r3
 8009e7e:	463b      	mov	r3, r7
 8009e80:	bfa8      	it	ge
 8009e82:	462b      	movge	r3, r5
 8009e84:	42b3      	cmp	r3, r6
 8009e86:	bfa8      	it	ge
 8009e88:	4633      	movge	r3, r6
 8009e8a:	2b00      	cmp	r3, #0
 8009e8c:	bfc2      	ittt	gt
 8009e8e:	1aed      	subgt	r5, r5, r3
 8009e90:	1af6      	subgt	r6, r6, r3
 8009e92:	1aff      	subgt	r7, r7, r3
 8009e94:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8009e96:	2b00      	cmp	r3, #0
 8009e98:	dd16      	ble.n	8009ec8 <_strtod_l+0x738>
 8009e9a:	4641      	mov	r1, r8
 8009e9c:	9805      	ldr	r0, [sp, #20]
 8009e9e:	461a      	mov	r2, r3
 8009ea0:	f001 fb44 	bl	800b52c <__pow5mult>
 8009ea4:	4680      	mov	r8, r0
 8009ea6:	2800      	cmp	r0, #0
 8009ea8:	d0ba      	beq.n	8009e20 <_strtod_l+0x690>
 8009eaa:	4601      	mov	r1, r0
 8009eac:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8009eae:	9805      	ldr	r0, [sp, #20]
 8009eb0:	f001 fa9a 	bl	800b3e8 <__multiply>
 8009eb4:	900a      	str	r0, [sp, #40]	@ 0x28
 8009eb6:	2800      	cmp	r0, #0
 8009eb8:	f43f ae8d 	beq.w	8009bd6 <_strtod_l+0x446>
 8009ebc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009ebe:	9805      	ldr	r0, [sp, #20]
 8009ec0:	f001 f97e 	bl	800b1c0 <_Bfree>
 8009ec4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009ec6:	931a      	str	r3, [sp, #104]	@ 0x68
 8009ec8:	2d00      	cmp	r5, #0
 8009eca:	dc1d      	bgt.n	8009f08 <_strtod_l+0x778>
 8009ecc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ece:	2b00      	cmp	r3, #0
 8009ed0:	dd23      	ble.n	8009f1a <_strtod_l+0x78a>
 8009ed2:	4649      	mov	r1, r9
 8009ed4:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8009ed6:	9805      	ldr	r0, [sp, #20]
 8009ed8:	f001 fb28 	bl	800b52c <__pow5mult>
 8009edc:	4681      	mov	r9, r0
 8009ede:	b9e0      	cbnz	r0, 8009f1a <_strtod_l+0x78a>
 8009ee0:	f04f 0900 	mov.w	r9, #0
 8009ee4:	e677      	b.n	8009bd6 <_strtod_l+0x446>
 8009ee6:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8009eea:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8009eee:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8009ef2:	35e2      	adds	r5, #226	@ 0xe2
 8009ef4:	fa01 f305 	lsl.w	r3, r1, r5
 8009ef8:	9310      	str	r3, [sp, #64]	@ 0x40
 8009efa:	9113      	str	r1, [sp, #76]	@ 0x4c
 8009efc:	e7ba      	b.n	8009e74 <_strtod_l+0x6e4>
 8009efe:	2300      	movs	r3, #0
 8009f00:	9310      	str	r3, [sp, #64]	@ 0x40
 8009f02:	2301      	movs	r3, #1
 8009f04:	9313      	str	r3, [sp, #76]	@ 0x4c
 8009f06:	e7b5      	b.n	8009e74 <_strtod_l+0x6e4>
 8009f08:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009f0a:	9805      	ldr	r0, [sp, #20]
 8009f0c:	462a      	mov	r2, r5
 8009f0e:	f001 fb67 	bl	800b5e0 <__lshift>
 8009f12:	901a      	str	r0, [sp, #104]	@ 0x68
 8009f14:	2800      	cmp	r0, #0
 8009f16:	d1d9      	bne.n	8009ecc <_strtod_l+0x73c>
 8009f18:	e65d      	b.n	8009bd6 <_strtod_l+0x446>
 8009f1a:	2e00      	cmp	r6, #0
 8009f1c:	dd07      	ble.n	8009f2e <_strtod_l+0x79e>
 8009f1e:	4649      	mov	r1, r9
 8009f20:	9805      	ldr	r0, [sp, #20]
 8009f22:	4632      	mov	r2, r6
 8009f24:	f001 fb5c 	bl	800b5e0 <__lshift>
 8009f28:	4681      	mov	r9, r0
 8009f2a:	2800      	cmp	r0, #0
 8009f2c:	d0d8      	beq.n	8009ee0 <_strtod_l+0x750>
 8009f2e:	2f00      	cmp	r7, #0
 8009f30:	dd08      	ble.n	8009f44 <_strtod_l+0x7b4>
 8009f32:	4641      	mov	r1, r8
 8009f34:	9805      	ldr	r0, [sp, #20]
 8009f36:	463a      	mov	r2, r7
 8009f38:	f001 fb52 	bl	800b5e0 <__lshift>
 8009f3c:	4680      	mov	r8, r0
 8009f3e:	2800      	cmp	r0, #0
 8009f40:	f43f ae49 	beq.w	8009bd6 <_strtod_l+0x446>
 8009f44:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009f46:	9805      	ldr	r0, [sp, #20]
 8009f48:	464a      	mov	r2, r9
 8009f4a:	f001 fbd1 	bl	800b6f0 <__mdiff>
 8009f4e:	4604      	mov	r4, r0
 8009f50:	2800      	cmp	r0, #0
 8009f52:	f43f ae40 	beq.w	8009bd6 <_strtod_l+0x446>
 8009f56:	68c3      	ldr	r3, [r0, #12]
 8009f58:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009f5a:	2300      	movs	r3, #0
 8009f5c:	60c3      	str	r3, [r0, #12]
 8009f5e:	4641      	mov	r1, r8
 8009f60:	f001 fbaa 	bl	800b6b8 <__mcmp>
 8009f64:	2800      	cmp	r0, #0
 8009f66:	da45      	bge.n	8009ff4 <_strtod_l+0x864>
 8009f68:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009f6a:	ea53 030a 	orrs.w	r3, r3, sl
 8009f6e:	d16b      	bne.n	800a048 <_strtod_l+0x8b8>
 8009f70:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	d167      	bne.n	800a048 <_strtod_l+0x8b8>
 8009f78:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8009f7c:	0d1b      	lsrs	r3, r3, #20
 8009f7e:	051b      	lsls	r3, r3, #20
 8009f80:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8009f84:	d960      	bls.n	800a048 <_strtod_l+0x8b8>
 8009f86:	6963      	ldr	r3, [r4, #20]
 8009f88:	b913      	cbnz	r3, 8009f90 <_strtod_l+0x800>
 8009f8a:	6923      	ldr	r3, [r4, #16]
 8009f8c:	2b01      	cmp	r3, #1
 8009f8e:	dd5b      	ble.n	800a048 <_strtod_l+0x8b8>
 8009f90:	4621      	mov	r1, r4
 8009f92:	2201      	movs	r2, #1
 8009f94:	9805      	ldr	r0, [sp, #20]
 8009f96:	f001 fb23 	bl	800b5e0 <__lshift>
 8009f9a:	4641      	mov	r1, r8
 8009f9c:	4604      	mov	r4, r0
 8009f9e:	f001 fb8b 	bl	800b6b8 <__mcmp>
 8009fa2:	2800      	cmp	r0, #0
 8009fa4:	dd50      	ble.n	800a048 <_strtod_l+0x8b8>
 8009fa6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8009faa:	9a08      	ldr	r2, [sp, #32]
 8009fac:	0d1b      	lsrs	r3, r3, #20
 8009fae:	051b      	lsls	r3, r3, #20
 8009fb0:	2a00      	cmp	r2, #0
 8009fb2:	d06a      	beq.n	800a08a <_strtod_l+0x8fa>
 8009fb4:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8009fb8:	d867      	bhi.n	800a08a <_strtod_l+0x8fa>
 8009fba:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8009fbe:	f67f ae9d 	bls.w	8009cfc <_strtod_l+0x56c>
 8009fc2:	4b0a      	ldr	r3, [pc, #40]	@ (8009fec <_strtod_l+0x85c>)
 8009fc4:	4650      	mov	r0, sl
 8009fc6:	4659      	mov	r1, fp
 8009fc8:	2200      	movs	r2, #0
 8009fca:	f7f6 fb3d 	bl	8000648 <__aeabi_dmul>
 8009fce:	4b08      	ldr	r3, [pc, #32]	@ (8009ff0 <_strtod_l+0x860>)
 8009fd0:	400b      	ands	r3, r1
 8009fd2:	4682      	mov	sl, r0
 8009fd4:	468b      	mov	fp, r1
 8009fd6:	2b00      	cmp	r3, #0
 8009fd8:	f47f ae08 	bne.w	8009bec <_strtod_l+0x45c>
 8009fdc:	9a05      	ldr	r2, [sp, #20]
 8009fde:	2322      	movs	r3, #34	@ 0x22
 8009fe0:	6013      	str	r3, [r2, #0]
 8009fe2:	e603      	b.n	8009bec <_strtod_l+0x45c>
 8009fe4:	0800cb88 	.word	0x0800cb88
 8009fe8:	fffffc02 	.word	0xfffffc02
 8009fec:	39500000 	.word	0x39500000
 8009ff0:	7ff00000 	.word	0x7ff00000
 8009ff4:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8009ff8:	d165      	bne.n	800a0c6 <_strtod_l+0x936>
 8009ffa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8009ffc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800a000:	b35a      	cbz	r2, 800a05a <_strtod_l+0x8ca>
 800a002:	4a9f      	ldr	r2, [pc, #636]	@ (800a280 <_strtod_l+0xaf0>)
 800a004:	4293      	cmp	r3, r2
 800a006:	d12b      	bne.n	800a060 <_strtod_l+0x8d0>
 800a008:	9b08      	ldr	r3, [sp, #32]
 800a00a:	4651      	mov	r1, sl
 800a00c:	b303      	cbz	r3, 800a050 <_strtod_l+0x8c0>
 800a00e:	4b9d      	ldr	r3, [pc, #628]	@ (800a284 <_strtod_l+0xaf4>)
 800a010:	465a      	mov	r2, fp
 800a012:	4013      	ands	r3, r2
 800a014:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800a018:	f04f 32ff 	mov.w	r2, #4294967295
 800a01c:	d81b      	bhi.n	800a056 <_strtod_l+0x8c6>
 800a01e:	0d1b      	lsrs	r3, r3, #20
 800a020:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800a024:	fa02 f303 	lsl.w	r3, r2, r3
 800a028:	4299      	cmp	r1, r3
 800a02a:	d119      	bne.n	800a060 <_strtod_l+0x8d0>
 800a02c:	4b96      	ldr	r3, [pc, #600]	@ (800a288 <_strtod_l+0xaf8>)
 800a02e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a030:	429a      	cmp	r2, r3
 800a032:	d102      	bne.n	800a03a <_strtod_l+0x8aa>
 800a034:	3101      	adds	r1, #1
 800a036:	f43f adce 	beq.w	8009bd6 <_strtod_l+0x446>
 800a03a:	4b92      	ldr	r3, [pc, #584]	@ (800a284 <_strtod_l+0xaf4>)
 800a03c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a03e:	401a      	ands	r2, r3
 800a040:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800a044:	f04f 0a00 	mov.w	sl, #0
 800a048:	9b08      	ldr	r3, [sp, #32]
 800a04a:	2b00      	cmp	r3, #0
 800a04c:	d1b9      	bne.n	8009fc2 <_strtod_l+0x832>
 800a04e:	e5cd      	b.n	8009bec <_strtod_l+0x45c>
 800a050:	f04f 33ff 	mov.w	r3, #4294967295
 800a054:	e7e8      	b.n	800a028 <_strtod_l+0x898>
 800a056:	4613      	mov	r3, r2
 800a058:	e7e6      	b.n	800a028 <_strtod_l+0x898>
 800a05a:	ea53 030a 	orrs.w	r3, r3, sl
 800a05e:	d0a2      	beq.n	8009fa6 <_strtod_l+0x816>
 800a060:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a062:	b1db      	cbz	r3, 800a09c <_strtod_l+0x90c>
 800a064:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800a066:	4213      	tst	r3, r2
 800a068:	d0ee      	beq.n	800a048 <_strtod_l+0x8b8>
 800a06a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a06c:	9a08      	ldr	r2, [sp, #32]
 800a06e:	4650      	mov	r0, sl
 800a070:	4659      	mov	r1, fp
 800a072:	b1bb      	cbz	r3, 800a0a4 <_strtod_l+0x914>
 800a074:	f7ff fb6b 	bl	800974e <sulp>
 800a078:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a07c:	ec53 2b10 	vmov	r2, r3, d0
 800a080:	f7f6 f92c 	bl	80002dc <__adddf3>
 800a084:	4682      	mov	sl, r0
 800a086:	468b      	mov	fp, r1
 800a088:	e7de      	b.n	800a048 <_strtod_l+0x8b8>
 800a08a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800a08e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800a092:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800a096:	f04f 3aff 	mov.w	sl, #4294967295
 800a09a:	e7d5      	b.n	800a048 <_strtod_l+0x8b8>
 800a09c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a09e:	ea13 0f0a 	tst.w	r3, sl
 800a0a2:	e7e1      	b.n	800a068 <_strtod_l+0x8d8>
 800a0a4:	f7ff fb53 	bl	800974e <sulp>
 800a0a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a0ac:	ec53 2b10 	vmov	r2, r3, d0
 800a0b0:	f7f6 f912 	bl	80002d8 <__aeabi_dsub>
 800a0b4:	2200      	movs	r2, #0
 800a0b6:	2300      	movs	r3, #0
 800a0b8:	4682      	mov	sl, r0
 800a0ba:	468b      	mov	fp, r1
 800a0bc:	f7f6 fd2c 	bl	8000b18 <__aeabi_dcmpeq>
 800a0c0:	2800      	cmp	r0, #0
 800a0c2:	d0c1      	beq.n	800a048 <_strtod_l+0x8b8>
 800a0c4:	e61a      	b.n	8009cfc <_strtod_l+0x56c>
 800a0c6:	4641      	mov	r1, r8
 800a0c8:	4620      	mov	r0, r4
 800a0ca:	f001 fc6d 	bl	800b9a8 <__ratio>
 800a0ce:	ec57 6b10 	vmov	r6, r7, d0
 800a0d2:	2200      	movs	r2, #0
 800a0d4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a0d8:	4630      	mov	r0, r6
 800a0da:	4639      	mov	r1, r7
 800a0dc:	f7f6 fd30 	bl	8000b40 <__aeabi_dcmple>
 800a0e0:	2800      	cmp	r0, #0
 800a0e2:	d06f      	beq.n	800a1c4 <_strtod_l+0xa34>
 800a0e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a0e6:	2b00      	cmp	r3, #0
 800a0e8:	d17a      	bne.n	800a1e0 <_strtod_l+0xa50>
 800a0ea:	f1ba 0f00 	cmp.w	sl, #0
 800a0ee:	d158      	bne.n	800a1a2 <_strtod_l+0xa12>
 800a0f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a0f2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a0f6:	2b00      	cmp	r3, #0
 800a0f8:	d15a      	bne.n	800a1b0 <_strtod_l+0xa20>
 800a0fa:	4b64      	ldr	r3, [pc, #400]	@ (800a28c <_strtod_l+0xafc>)
 800a0fc:	2200      	movs	r2, #0
 800a0fe:	4630      	mov	r0, r6
 800a100:	4639      	mov	r1, r7
 800a102:	f7f6 fd13 	bl	8000b2c <__aeabi_dcmplt>
 800a106:	2800      	cmp	r0, #0
 800a108:	d159      	bne.n	800a1be <_strtod_l+0xa2e>
 800a10a:	4630      	mov	r0, r6
 800a10c:	4639      	mov	r1, r7
 800a10e:	4b60      	ldr	r3, [pc, #384]	@ (800a290 <_strtod_l+0xb00>)
 800a110:	2200      	movs	r2, #0
 800a112:	f7f6 fa99 	bl	8000648 <__aeabi_dmul>
 800a116:	4606      	mov	r6, r0
 800a118:	460f      	mov	r7, r1
 800a11a:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800a11e:	9606      	str	r6, [sp, #24]
 800a120:	9307      	str	r3, [sp, #28]
 800a122:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a126:	4d57      	ldr	r5, [pc, #348]	@ (800a284 <_strtod_l+0xaf4>)
 800a128:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800a12c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a12e:	401d      	ands	r5, r3
 800a130:	4b58      	ldr	r3, [pc, #352]	@ (800a294 <_strtod_l+0xb04>)
 800a132:	429d      	cmp	r5, r3
 800a134:	f040 80b2 	bne.w	800a29c <_strtod_l+0xb0c>
 800a138:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a13a:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800a13e:	ec4b ab10 	vmov	d0, sl, fp
 800a142:	f001 fb69 	bl	800b818 <__ulp>
 800a146:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a14a:	ec51 0b10 	vmov	r0, r1, d0
 800a14e:	f7f6 fa7b 	bl	8000648 <__aeabi_dmul>
 800a152:	4652      	mov	r2, sl
 800a154:	465b      	mov	r3, fp
 800a156:	f7f6 f8c1 	bl	80002dc <__adddf3>
 800a15a:	460b      	mov	r3, r1
 800a15c:	4949      	ldr	r1, [pc, #292]	@ (800a284 <_strtod_l+0xaf4>)
 800a15e:	4a4e      	ldr	r2, [pc, #312]	@ (800a298 <_strtod_l+0xb08>)
 800a160:	4019      	ands	r1, r3
 800a162:	4291      	cmp	r1, r2
 800a164:	4682      	mov	sl, r0
 800a166:	d942      	bls.n	800a1ee <_strtod_l+0xa5e>
 800a168:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800a16a:	4b47      	ldr	r3, [pc, #284]	@ (800a288 <_strtod_l+0xaf8>)
 800a16c:	429a      	cmp	r2, r3
 800a16e:	d103      	bne.n	800a178 <_strtod_l+0x9e8>
 800a170:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a172:	3301      	adds	r3, #1
 800a174:	f43f ad2f 	beq.w	8009bd6 <_strtod_l+0x446>
 800a178:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800a288 <_strtod_l+0xaf8>
 800a17c:	f04f 3aff 	mov.w	sl, #4294967295
 800a180:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a182:	9805      	ldr	r0, [sp, #20]
 800a184:	f001 f81c 	bl	800b1c0 <_Bfree>
 800a188:	9805      	ldr	r0, [sp, #20]
 800a18a:	4649      	mov	r1, r9
 800a18c:	f001 f818 	bl	800b1c0 <_Bfree>
 800a190:	9805      	ldr	r0, [sp, #20]
 800a192:	4641      	mov	r1, r8
 800a194:	f001 f814 	bl	800b1c0 <_Bfree>
 800a198:	9805      	ldr	r0, [sp, #20]
 800a19a:	4621      	mov	r1, r4
 800a19c:	f001 f810 	bl	800b1c0 <_Bfree>
 800a1a0:	e619      	b.n	8009dd6 <_strtod_l+0x646>
 800a1a2:	f1ba 0f01 	cmp.w	sl, #1
 800a1a6:	d103      	bne.n	800a1b0 <_strtod_l+0xa20>
 800a1a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a1aa:	2b00      	cmp	r3, #0
 800a1ac:	f43f ada6 	beq.w	8009cfc <_strtod_l+0x56c>
 800a1b0:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800a260 <_strtod_l+0xad0>
 800a1b4:	4f35      	ldr	r7, [pc, #212]	@ (800a28c <_strtod_l+0xafc>)
 800a1b6:	ed8d 7b06 	vstr	d7, [sp, #24]
 800a1ba:	2600      	movs	r6, #0
 800a1bc:	e7b1      	b.n	800a122 <_strtod_l+0x992>
 800a1be:	4f34      	ldr	r7, [pc, #208]	@ (800a290 <_strtod_l+0xb00>)
 800a1c0:	2600      	movs	r6, #0
 800a1c2:	e7aa      	b.n	800a11a <_strtod_l+0x98a>
 800a1c4:	4b32      	ldr	r3, [pc, #200]	@ (800a290 <_strtod_l+0xb00>)
 800a1c6:	4630      	mov	r0, r6
 800a1c8:	4639      	mov	r1, r7
 800a1ca:	2200      	movs	r2, #0
 800a1cc:	f7f6 fa3c 	bl	8000648 <__aeabi_dmul>
 800a1d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a1d2:	4606      	mov	r6, r0
 800a1d4:	460f      	mov	r7, r1
 800a1d6:	2b00      	cmp	r3, #0
 800a1d8:	d09f      	beq.n	800a11a <_strtod_l+0x98a>
 800a1da:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800a1de:	e7a0      	b.n	800a122 <_strtod_l+0x992>
 800a1e0:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800a268 <_strtod_l+0xad8>
 800a1e4:	ed8d 7b06 	vstr	d7, [sp, #24]
 800a1e8:	ec57 6b17 	vmov	r6, r7, d7
 800a1ec:	e799      	b.n	800a122 <_strtod_l+0x992>
 800a1ee:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800a1f2:	9b08      	ldr	r3, [sp, #32]
 800a1f4:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 800a1f8:	2b00      	cmp	r3, #0
 800a1fa:	d1c1      	bne.n	800a180 <_strtod_l+0x9f0>
 800a1fc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800a200:	0d1b      	lsrs	r3, r3, #20
 800a202:	051b      	lsls	r3, r3, #20
 800a204:	429d      	cmp	r5, r3
 800a206:	d1bb      	bne.n	800a180 <_strtod_l+0x9f0>
 800a208:	4630      	mov	r0, r6
 800a20a:	4639      	mov	r1, r7
 800a20c:	f7f6 fd3e 	bl	8000c8c <__aeabi_d2lz>
 800a210:	f7f6 f9ec 	bl	80005ec <__aeabi_l2d>
 800a214:	4602      	mov	r2, r0
 800a216:	460b      	mov	r3, r1
 800a218:	4630      	mov	r0, r6
 800a21a:	4639      	mov	r1, r7
 800a21c:	f7f6 f85c 	bl	80002d8 <__aeabi_dsub>
 800a220:	460b      	mov	r3, r1
 800a222:	4602      	mov	r2, r0
 800a224:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800a228:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800a22c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a22e:	ea46 060a 	orr.w	r6, r6, sl
 800a232:	431e      	orrs	r6, r3
 800a234:	d06f      	beq.n	800a316 <_strtod_l+0xb86>
 800a236:	a30e      	add	r3, pc, #56	@ (adr r3, 800a270 <_strtod_l+0xae0>)
 800a238:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a23c:	f7f6 fc76 	bl	8000b2c <__aeabi_dcmplt>
 800a240:	2800      	cmp	r0, #0
 800a242:	f47f acd3 	bne.w	8009bec <_strtod_l+0x45c>
 800a246:	a30c      	add	r3, pc, #48	@ (adr r3, 800a278 <_strtod_l+0xae8>)
 800a248:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a24c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a250:	f7f6 fc8a 	bl	8000b68 <__aeabi_dcmpgt>
 800a254:	2800      	cmp	r0, #0
 800a256:	d093      	beq.n	800a180 <_strtod_l+0x9f0>
 800a258:	e4c8      	b.n	8009bec <_strtod_l+0x45c>
 800a25a:	bf00      	nop
 800a25c:	f3af 8000 	nop.w
 800a260:	00000000 	.word	0x00000000
 800a264:	bff00000 	.word	0xbff00000
 800a268:	00000000 	.word	0x00000000
 800a26c:	3ff00000 	.word	0x3ff00000
 800a270:	94a03595 	.word	0x94a03595
 800a274:	3fdfffff 	.word	0x3fdfffff
 800a278:	35afe535 	.word	0x35afe535
 800a27c:	3fe00000 	.word	0x3fe00000
 800a280:	000fffff 	.word	0x000fffff
 800a284:	7ff00000 	.word	0x7ff00000
 800a288:	7fefffff 	.word	0x7fefffff
 800a28c:	3ff00000 	.word	0x3ff00000
 800a290:	3fe00000 	.word	0x3fe00000
 800a294:	7fe00000 	.word	0x7fe00000
 800a298:	7c9fffff 	.word	0x7c9fffff
 800a29c:	9b08      	ldr	r3, [sp, #32]
 800a29e:	b323      	cbz	r3, 800a2ea <_strtod_l+0xb5a>
 800a2a0:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800a2a4:	d821      	bhi.n	800a2ea <_strtod_l+0xb5a>
 800a2a6:	a328      	add	r3, pc, #160	@ (adr r3, 800a348 <_strtod_l+0xbb8>)
 800a2a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a2ac:	4630      	mov	r0, r6
 800a2ae:	4639      	mov	r1, r7
 800a2b0:	f7f6 fc46 	bl	8000b40 <__aeabi_dcmple>
 800a2b4:	b1a0      	cbz	r0, 800a2e0 <_strtod_l+0xb50>
 800a2b6:	4639      	mov	r1, r7
 800a2b8:	4630      	mov	r0, r6
 800a2ba:	f7f6 fc5f 	bl	8000b7c <__aeabi_d2uiz>
 800a2be:	2801      	cmp	r0, #1
 800a2c0:	bf38      	it	cc
 800a2c2:	2001      	movcc	r0, #1
 800a2c4:	f7f6 f946 	bl	8000554 <__aeabi_ui2d>
 800a2c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a2ca:	4606      	mov	r6, r0
 800a2cc:	460f      	mov	r7, r1
 800a2ce:	b9fb      	cbnz	r3, 800a310 <_strtod_l+0xb80>
 800a2d0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800a2d4:	9014      	str	r0, [sp, #80]	@ 0x50
 800a2d6:	9315      	str	r3, [sp, #84]	@ 0x54
 800a2d8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800a2dc:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800a2e0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800a2e2:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800a2e6:	1b5b      	subs	r3, r3, r5
 800a2e8:	9311      	str	r3, [sp, #68]	@ 0x44
 800a2ea:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800a2ee:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800a2f2:	f001 fa91 	bl	800b818 <__ulp>
 800a2f6:	4650      	mov	r0, sl
 800a2f8:	ec53 2b10 	vmov	r2, r3, d0
 800a2fc:	4659      	mov	r1, fp
 800a2fe:	f7f6 f9a3 	bl	8000648 <__aeabi_dmul>
 800a302:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800a306:	f7f5 ffe9 	bl	80002dc <__adddf3>
 800a30a:	4682      	mov	sl, r0
 800a30c:	468b      	mov	fp, r1
 800a30e:	e770      	b.n	800a1f2 <_strtod_l+0xa62>
 800a310:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800a314:	e7e0      	b.n	800a2d8 <_strtod_l+0xb48>
 800a316:	a30e      	add	r3, pc, #56	@ (adr r3, 800a350 <_strtod_l+0xbc0>)
 800a318:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a31c:	f7f6 fc06 	bl	8000b2c <__aeabi_dcmplt>
 800a320:	e798      	b.n	800a254 <_strtod_l+0xac4>
 800a322:	2300      	movs	r3, #0
 800a324:	930e      	str	r3, [sp, #56]	@ 0x38
 800a326:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800a328:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a32a:	6013      	str	r3, [r2, #0]
 800a32c:	f7ff ba6d 	b.w	800980a <_strtod_l+0x7a>
 800a330:	2a65      	cmp	r2, #101	@ 0x65
 800a332:	f43f ab68 	beq.w	8009a06 <_strtod_l+0x276>
 800a336:	2a45      	cmp	r2, #69	@ 0x45
 800a338:	f43f ab65 	beq.w	8009a06 <_strtod_l+0x276>
 800a33c:	2301      	movs	r3, #1
 800a33e:	f7ff bba0 	b.w	8009a82 <_strtod_l+0x2f2>
 800a342:	bf00      	nop
 800a344:	f3af 8000 	nop.w
 800a348:	ffc00000 	.word	0xffc00000
 800a34c:	41dfffff 	.word	0x41dfffff
 800a350:	94a03595 	.word	0x94a03595
 800a354:	3fcfffff 	.word	0x3fcfffff

0800a358 <strtod>:
 800a358:	460a      	mov	r2, r1
 800a35a:	4601      	mov	r1, r0
 800a35c:	4802      	ldr	r0, [pc, #8]	@ (800a368 <strtod+0x10>)
 800a35e:	4b03      	ldr	r3, [pc, #12]	@ (800a36c <strtod+0x14>)
 800a360:	6800      	ldr	r0, [r0, #0]
 800a362:	f7ff ba15 	b.w	8009790 <_strtod_l>
 800a366:	bf00      	nop
 800a368:	200001d4 	.word	0x200001d4
 800a36c:	20000068 	.word	0x20000068

0800a370 <_strtol_l.isra.0>:
 800a370:	2b24      	cmp	r3, #36	@ 0x24
 800a372:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a376:	4686      	mov	lr, r0
 800a378:	4690      	mov	r8, r2
 800a37a:	d801      	bhi.n	800a380 <_strtol_l.isra.0+0x10>
 800a37c:	2b01      	cmp	r3, #1
 800a37e:	d106      	bne.n	800a38e <_strtol_l.isra.0+0x1e>
 800a380:	f000 fa54 	bl	800a82c <__errno>
 800a384:	2316      	movs	r3, #22
 800a386:	6003      	str	r3, [r0, #0]
 800a388:	2000      	movs	r0, #0
 800a38a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a38e:	4834      	ldr	r0, [pc, #208]	@ (800a460 <_strtol_l.isra.0+0xf0>)
 800a390:	460d      	mov	r5, r1
 800a392:	462a      	mov	r2, r5
 800a394:	f815 4b01 	ldrb.w	r4, [r5], #1
 800a398:	5d06      	ldrb	r6, [r0, r4]
 800a39a:	f016 0608 	ands.w	r6, r6, #8
 800a39e:	d1f8      	bne.n	800a392 <_strtol_l.isra.0+0x22>
 800a3a0:	2c2d      	cmp	r4, #45	@ 0x2d
 800a3a2:	d110      	bne.n	800a3c6 <_strtol_l.isra.0+0x56>
 800a3a4:	782c      	ldrb	r4, [r5, #0]
 800a3a6:	2601      	movs	r6, #1
 800a3a8:	1c95      	adds	r5, r2, #2
 800a3aa:	f033 0210 	bics.w	r2, r3, #16
 800a3ae:	d115      	bne.n	800a3dc <_strtol_l.isra.0+0x6c>
 800a3b0:	2c30      	cmp	r4, #48	@ 0x30
 800a3b2:	d10d      	bne.n	800a3d0 <_strtol_l.isra.0+0x60>
 800a3b4:	782a      	ldrb	r2, [r5, #0]
 800a3b6:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800a3ba:	2a58      	cmp	r2, #88	@ 0x58
 800a3bc:	d108      	bne.n	800a3d0 <_strtol_l.isra.0+0x60>
 800a3be:	786c      	ldrb	r4, [r5, #1]
 800a3c0:	3502      	adds	r5, #2
 800a3c2:	2310      	movs	r3, #16
 800a3c4:	e00a      	b.n	800a3dc <_strtol_l.isra.0+0x6c>
 800a3c6:	2c2b      	cmp	r4, #43	@ 0x2b
 800a3c8:	bf04      	itt	eq
 800a3ca:	782c      	ldrbeq	r4, [r5, #0]
 800a3cc:	1c95      	addeq	r5, r2, #2
 800a3ce:	e7ec      	b.n	800a3aa <_strtol_l.isra.0+0x3a>
 800a3d0:	2b00      	cmp	r3, #0
 800a3d2:	d1f6      	bne.n	800a3c2 <_strtol_l.isra.0+0x52>
 800a3d4:	2c30      	cmp	r4, #48	@ 0x30
 800a3d6:	bf14      	ite	ne
 800a3d8:	230a      	movne	r3, #10
 800a3da:	2308      	moveq	r3, #8
 800a3dc:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800a3e0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a3e4:	2200      	movs	r2, #0
 800a3e6:	fbbc f9f3 	udiv	r9, ip, r3
 800a3ea:	4610      	mov	r0, r2
 800a3ec:	fb03 ca19 	mls	sl, r3, r9, ip
 800a3f0:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800a3f4:	2f09      	cmp	r7, #9
 800a3f6:	d80f      	bhi.n	800a418 <_strtol_l.isra.0+0xa8>
 800a3f8:	463c      	mov	r4, r7
 800a3fa:	42a3      	cmp	r3, r4
 800a3fc:	dd1b      	ble.n	800a436 <_strtol_l.isra.0+0xc6>
 800a3fe:	1c57      	adds	r7, r2, #1
 800a400:	d007      	beq.n	800a412 <_strtol_l.isra.0+0xa2>
 800a402:	4581      	cmp	r9, r0
 800a404:	d314      	bcc.n	800a430 <_strtol_l.isra.0+0xc0>
 800a406:	d101      	bne.n	800a40c <_strtol_l.isra.0+0x9c>
 800a408:	45a2      	cmp	sl, r4
 800a40a:	db11      	blt.n	800a430 <_strtol_l.isra.0+0xc0>
 800a40c:	fb00 4003 	mla	r0, r0, r3, r4
 800a410:	2201      	movs	r2, #1
 800a412:	f815 4b01 	ldrb.w	r4, [r5], #1
 800a416:	e7eb      	b.n	800a3f0 <_strtol_l.isra.0+0x80>
 800a418:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800a41c:	2f19      	cmp	r7, #25
 800a41e:	d801      	bhi.n	800a424 <_strtol_l.isra.0+0xb4>
 800a420:	3c37      	subs	r4, #55	@ 0x37
 800a422:	e7ea      	b.n	800a3fa <_strtol_l.isra.0+0x8a>
 800a424:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800a428:	2f19      	cmp	r7, #25
 800a42a:	d804      	bhi.n	800a436 <_strtol_l.isra.0+0xc6>
 800a42c:	3c57      	subs	r4, #87	@ 0x57
 800a42e:	e7e4      	b.n	800a3fa <_strtol_l.isra.0+0x8a>
 800a430:	f04f 32ff 	mov.w	r2, #4294967295
 800a434:	e7ed      	b.n	800a412 <_strtol_l.isra.0+0xa2>
 800a436:	1c53      	adds	r3, r2, #1
 800a438:	d108      	bne.n	800a44c <_strtol_l.isra.0+0xdc>
 800a43a:	2322      	movs	r3, #34	@ 0x22
 800a43c:	f8ce 3000 	str.w	r3, [lr]
 800a440:	4660      	mov	r0, ip
 800a442:	f1b8 0f00 	cmp.w	r8, #0
 800a446:	d0a0      	beq.n	800a38a <_strtol_l.isra.0+0x1a>
 800a448:	1e69      	subs	r1, r5, #1
 800a44a:	e006      	b.n	800a45a <_strtol_l.isra.0+0xea>
 800a44c:	b106      	cbz	r6, 800a450 <_strtol_l.isra.0+0xe0>
 800a44e:	4240      	negs	r0, r0
 800a450:	f1b8 0f00 	cmp.w	r8, #0
 800a454:	d099      	beq.n	800a38a <_strtol_l.isra.0+0x1a>
 800a456:	2a00      	cmp	r2, #0
 800a458:	d1f6      	bne.n	800a448 <_strtol_l.isra.0+0xd8>
 800a45a:	f8c8 1000 	str.w	r1, [r8]
 800a45e:	e794      	b.n	800a38a <_strtol_l.isra.0+0x1a>
 800a460:	0800cbb1 	.word	0x0800cbb1

0800a464 <strtol>:
 800a464:	4613      	mov	r3, r2
 800a466:	460a      	mov	r2, r1
 800a468:	4601      	mov	r1, r0
 800a46a:	4802      	ldr	r0, [pc, #8]	@ (800a474 <strtol+0x10>)
 800a46c:	6800      	ldr	r0, [r0, #0]
 800a46e:	f7ff bf7f 	b.w	800a370 <_strtol_l.isra.0>
 800a472:	bf00      	nop
 800a474:	200001d4 	.word	0x200001d4

0800a478 <std>:
 800a478:	2300      	movs	r3, #0
 800a47a:	b510      	push	{r4, lr}
 800a47c:	4604      	mov	r4, r0
 800a47e:	e9c0 3300 	strd	r3, r3, [r0]
 800a482:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a486:	6083      	str	r3, [r0, #8]
 800a488:	8181      	strh	r1, [r0, #12]
 800a48a:	6643      	str	r3, [r0, #100]	@ 0x64
 800a48c:	81c2      	strh	r2, [r0, #14]
 800a48e:	6183      	str	r3, [r0, #24]
 800a490:	4619      	mov	r1, r3
 800a492:	2208      	movs	r2, #8
 800a494:	305c      	adds	r0, #92	@ 0x5c
 800a496:	f000 f92a 	bl	800a6ee <memset>
 800a49a:	4b0d      	ldr	r3, [pc, #52]	@ (800a4d0 <std+0x58>)
 800a49c:	6263      	str	r3, [r4, #36]	@ 0x24
 800a49e:	4b0d      	ldr	r3, [pc, #52]	@ (800a4d4 <std+0x5c>)
 800a4a0:	62a3      	str	r3, [r4, #40]	@ 0x28
 800a4a2:	4b0d      	ldr	r3, [pc, #52]	@ (800a4d8 <std+0x60>)
 800a4a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800a4a6:	4b0d      	ldr	r3, [pc, #52]	@ (800a4dc <std+0x64>)
 800a4a8:	6323      	str	r3, [r4, #48]	@ 0x30
 800a4aa:	4b0d      	ldr	r3, [pc, #52]	@ (800a4e0 <std+0x68>)
 800a4ac:	6224      	str	r4, [r4, #32]
 800a4ae:	429c      	cmp	r4, r3
 800a4b0:	d006      	beq.n	800a4c0 <std+0x48>
 800a4b2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800a4b6:	4294      	cmp	r4, r2
 800a4b8:	d002      	beq.n	800a4c0 <std+0x48>
 800a4ba:	33d0      	adds	r3, #208	@ 0xd0
 800a4bc:	429c      	cmp	r4, r3
 800a4be:	d105      	bne.n	800a4cc <std+0x54>
 800a4c0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800a4c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4c8:	f000 b9da 	b.w	800a880 <__retarget_lock_init_recursive>
 800a4cc:	bd10      	pop	{r4, pc}
 800a4ce:	bf00      	nop
 800a4d0:	0800a669 	.word	0x0800a669
 800a4d4:	0800a68b 	.word	0x0800a68b
 800a4d8:	0800a6c3 	.word	0x0800a6c3
 800a4dc:	0800a6e7 	.word	0x0800a6e7
 800a4e0:	2000515c 	.word	0x2000515c

0800a4e4 <stdio_exit_handler>:
 800a4e4:	4a02      	ldr	r2, [pc, #8]	@ (800a4f0 <stdio_exit_handler+0xc>)
 800a4e6:	4903      	ldr	r1, [pc, #12]	@ (800a4f4 <stdio_exit_handler+0x10>)
 800a4e8:	4803      	ldr	r0, [pc, #12]	@ (800a4f8 <stdio_exit_handler+0x14>)
 800a4ea:	f000 b869 	b.w	800a5c0 <_fwalk_sglue>
 800a4ee:	bf00      	nop
 800a4f0:	2000005c 	.word	0x2000005c
 800a4f4:	0800c17d 	.word	0x0800c17d
 800a4f8:	200001d8 	.word	0x200001d8

0800a4fc <cleanup_stdio>:
 800a4fc:	6841      	ldr	r1, [r0, #4]
 800a4fe:	4b0c      	ldr	r3, [pc, #48]	@ (800a530 <cleanup_stdio+0x34>)
 800a500:	4299      	cmp	r1, r3
 800a502:	b510      	push	{r4, lr}
 800a504:	4604      	mov	r4, r0
 800a506:	d001      	beq.n	800a50c <cleanup_stdio+0x10>
 800a508:	f001 fe38 	bl	800c17c <_fflush_r>
 800a50c:	68a1      	ldr	r1, [r4, #8]
 800a50e:	4b09      	ldr	r3, [pc, #36]	@ (800a534 <cleanup_stdio+0x38>)
 800a510:	4299      	cmp	r1, r3
 800a512:	d002      	beq.n	800a51a <cleanup_stdio+0x1e>
 800a514:	4620      	mov	r0, r4
 800a516:	f001 fe31 	bl	800c17c <_fflush_r>
 800a51a:	68e1      	ldr	r1, [r4, #12]
 800a51c:	4b06      	ldr	r3, [pc, #24]	@ (800a538 <cleanup_stdio+0x3c>)
 800a51e:	4299      	cmp	r1, r3
 800a520:	d004      	beq.n	800a52c <cleanup_stdio+0x30>
 800a522:	4620      	mov	r0, r4
 800a524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a528:	f001 be28 	b.w	800c17c <_fflush_r>
 800a52c:	bd10      	pop	{r4, pc}
 800a52e:	bf00      	nop
 800a530:	2000515c 	.word	0x2000515c
 800a534:	200051c4 	.word	0x200051c4
 800a538:	2000522c 	.word	0x2000522c

0800a53c <global_stdio_init.part.0>:
 800a53c:	b510      	push	{r4, lr}
 800a53e:	4b0b      	ldr	r3, [pc, #44]	@ (800a56c <global_stdio_init.part.0+0x30>)
 800a540:	4c0b      	ldr	r4, [pc, #44]	@ (800a570 <global_stdio_init.part.0+0x34>)
 800a542:	4a0c      	ldr	r2, [pc, #48]	@ (800a574 <global_stdio_init.part.0+0x38>)
 800a544:	601a      	str	r2, [r3, #0]
 800a546:	4620      	mov	r0, r4
 800a548:	2200      	movs	r2, #0
 800a54a:	2104      	movs	r1, #4
 800a54c:	f7ff ff94 	bl	800a478 <std>
 800a550:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800a554:	2201      	movs	r2, #1
 800a556:	2109      	movs	r1, #9
 800a558:	f7ff ff8e 	bl	800a478 <std>
 800a55c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800a560:	2202      	movs	r2, #2
 800a562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a566:	2112      	movs	r1, #18
 800a568:	f7ff bf86 	b.w	800a478 <std>
 800a56c:	20005294 	.word	0x20005294
 800a570:	2000515c 	.word	0x2000515c
 800a574:	0800a4e5 	.word	0x0800a4e5

0800a578 <__sfp_lock_acquire>:
 800a578:	4801      	ldr	r0, [pc, #4]	@ (800a580 <__sfp_lock_acquire+0x8>)
 800a57a:	f000 b982 	b.w	800a882 <__retarget_lock_acquire_recursive>
 800a57e:	bf00      	nop
 800a580:	2000529d 	.word	0x2000529d

0800a584 <__sfp_lock_release>:
 800a584:	4801      	ldr	r0, [pc, #4]	@ (800a58c <__sfp_lock_release+0x8>)
 800a586:	f000 b97d 	b.w	800a884 <__retarget_lock_release_recursive>
 800a58a:	bf00      	nop
 800a58c:	2000529d 	.word	0x2000529d

0800a590 <__sinit>:
 800a590:	b510      	push	{r4, lr}
 800a592:	4604      	mov	r4, r0
 800a594:	f7ff fff0 	bl	800a578 <__sfp_lock_acquire>
 800a598:	6a23      	ldr	r3, [r4, #32]
 800a59a:	b11b      	cbz	r3, 800a5a4 <__sinit+0x14>
 800a59c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5a0:	f7ff bff0 	b.w	800a584 <__sfp_lock_release>
 800a5a4:	4b04      	ldr	r3, [pc, #16]	@ (800a5b8 <__sinit+0x28>)
 800a5a6:	6223      	str	r3, [r4, #32]
 800a5a8:	4b04      	ldr	r3, [pc, #16]	@ (800a5bc <__sinit+0x2c>)
 800a5aa:	681b      	ldr	r3, [r3, #0]
 800a5ac:	2b00      	cmp	r3, #0
 800a5ae:	d1f5      	bne.n	800a59c <__sinit+0xc>
 800a5b0:	f7ff ffc4 	bl	800a53c <global_stdio_init.part.0>
 800a5b4:	e7f2      	b.n	800a59c <__sinit+0xc>
 800a5b6:	bf00      	nop
 800a5b8:	0800a4fd 	.word	0x0800a4fd
 800a5bc:	20005294 	.word	0x20005294

0800a5c0 <_fwalk_sglue>:
 800a5c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a5c4:	4607      	mov	r7, r0
 800a5c6:	4688      	mov	r8, r1
 800a5c8:	4614      	mov	r4, r2
 800a5ca:	2600      	movs	r6, #0
 800a5cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800a5d0:	f1b9 0901 	subs.w	r9, r9, #1
 800a5d4:	d505      	bpl.n	800a5e2 <_fwalk_sglue+0x22>
 800a5d6:	6824      	ldr	r4, [r4, #0]
 800a5d8:	2c00      	cmp	r4, #0
 800a5da:	d1f7      	bne.n	800a5cc <_fwalk_sglue+0xc>
 800a5dc:	4630      	mov	r0, r6
 800a5de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a5e2:	89ab      	ldrh	r3, [r5, #12]
 800a5e4:	2b01      	cmp	r3, #1
 800a5e6:	d907      	bls.n	800a5f8 <_fwalk_sglue+0x38>
 800a5e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800a5ec:	3301      	adds	r3, #1
 800a5ee:	d003      	beq.n	800a5f8 <_fwalk_sglue+0x38>
 800a5f0:	4629      	mov	r1, r5
 800a5f2:	4638      	mov	r0, r7
 800a5f4:	47c0      	blx	r8
 800a5f6:	4306      	orrs	r6, r0
 800a5f8:	3568      	adds	r5, #104	@ 0x68
 800a5fa:	e7e9      	b.n	800a5d0 <_fwalk_sglue+0x10>

0800a5fc <sniprintf>:
 800a5fc:	b40c      	push	{r2, r3}
 800a5fe:	b530      	push	{r4, r5, lr}
 800a600:	4b18      	ldr	r3, [pc, #96]	@ (800a664 <sniprintf+0x68>)
 800a602:	1e0c      	subs	r4, r1, #0
 800a604:	681d      	ldr	r5, [r3, #0]
 800a606:	b09d      	sub	sp, #116	@ 0x74
 800a608:	da08      	bge.n	800a61c <sniprintf+0x20>
 800a60a:	238b      	movs	r3, #139	@ 0x8b
 800a60c:	602b      	str	r3, [r5, #0]
 800a60e:	f04f 30ff 	mov.w	r0, #4294967295
 800a612:	b01d      	add	sp, #116	@ 0x74
 800a614:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a618:	b002      	add	sp, #8
 800a61a:	4770      	bx	lr
 800a61c:	f44f 7302 	mov.w	r3, #520	@ 0x208
 800a620:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a624:	f04f 0300 	mov.w	r3, #0
 800a628:	931b      	str	r3, [sp, #108]	@ 0x6c
 800a62a:	bf14      	ite	ne
 800a62c:	f104 33ff 	addne.w	r3, r4, #4294967295
 800a630:	4623      	moveq	r3, r4
 800a632:	9304      	str	r3, [sp, #16]
 800a634:	9307      	str	r3, [sp, #28]
 800a636:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a63a:	9002      	str	r0, [sp, #8]
 800a63c:	9006      	str	r0, [sp, #24]
 800a63e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a642:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800a644:	ab21      	add	r3, sp, #132	@ 0x84
 800a646:	a902      	add	r1, sp, #8
 800a648:	4628      	mov	r0, r5
 800a64a:	9301      	str	r3, [sp, #4]
 800a64c:	f001 fa8a 	bl	800bb64 <_svfiprintf_r>
 800a650:	1c43      	adds	r3, r0, #1
 800a652:	bfbc      	itt	lt
 800a654:	238b      	movlt	r3, #139	@ 0x8b
 800a656:	602b      	strlt	r3, [r5, #0]
 800a658:	2c00      	cmp	r4, #0
 800a65a:	d0da      	beq.n	800a612 <sniprintf+0x16>
 800a65c:	9b02      	ldr	r3, [sp, #8]
 800a65e:	2200      	movs	r2, #0
 800a660:	701a      	strb	r2, [r3, #0]
 800a662:	e7d6      	b.n	800a612 <sniprintf+0x16>
 800a664:	200001d4 	.word	0x200001d4

0800a668 <__sread>:
 800a668:	b510      	push	{r4, lr}
 800a66a:	460c      	mov	r4, r1
 800a66c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a670:	f000 f8b8 	bl	800a7e4 <_read_r>
 800a674:	2800      	cmp	r0, #0
 800a676:	bfab      	itete	ge
 800a678:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800a67a:	89a3      	ldrhlt	r3, [r4, #12]
 800a67c:	181b      	addge	r3, r3, r0
 800a67e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800a682:	bfac      	ite	ge
 800a684:	6563      	strge	r3, [r4, #84]	@ 0x54
 800a686:	81a3      	strhlt	r3, [r4, #12]
 800a688:	bd10      	pop	{r4, pc}

0800a68a <__swrite>:
 800a68a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a68e:	461f      	mov	r7, r3
 800a690:	898b      	ldrh	r3, [r1, #12]
 800a692:	05db      	lsls	r3, r3, #23
 800a694:	4605      	mov	r5, r0
 800a696:	460c      	mov	r4, r1
 800a698:	4616      	mov	r6, r2
 800a69a:	d505      	bpl.n	800a6a8 <__swrite+0x1e>
 800a69c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a6a0:	2302      	movs	r3, #2
 800a6a2:	2200      	movs	r2, #0
 800a6a4:	f000 f88c 	bl	800a7c0 <_lseek_r>
 800a6a8:	89a3      	ldrh	r3, [r4, #12]
 800a6aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a6ae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800a6b2:	81a3      	strh	r3, [r4, #12]
 800a6b4:	4632      	mov	r2, r6
 800a6b6:	463b      	mov	r3, r7
 800a6b8:	4628      	mov	r0, r5
 800a6ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a6be:	f000 b8a3 	b.w	800a808 <_write_r>

0800a6c2 <__sseek>:
 800a6c2:	b510      	push	{r4, lr}
 800a6c4:	460c      	mov	r4, r1
 800a6c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a6ca:	f000 f879 	bl	800a7c0 <_lseek_r>
 800a6ce:	1c43      	adds	r3, r0, #1
 800a6d0:	89a3      	ldrh	r3, [r4, #12]
 800a6d2:	bf15      	itete	ne
 800a6d4:	6560      	strne	r0, [r4, #84]	@ 0x54
 800a6d6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800a6da:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800a6de:	81a3      	strheq	r3, [r4, #12]
 800a6e0:	bf18      	it	ne
 800a6e2:	81a3      	strhne	r3, [r4, #12]
 800a6e4:	bd10      	pop	{r4, pc}

0800a6e6 <__sclose>:
 800a6e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a6ea:	f000 b859 	b.w	800a7a0 <_close_r>

0800a6ee <memset>:
 800a6ee:	4402      	add	r2, r0
 800a6f0:	4603      	mov	r3, r0
 800a6f2:	4293      	cmp	r3, r2
 800a6f4:	d100      	bne.n	800a6f8 <memset+0xa>
 800a6f6:	4770      	bx	lr
 800a6f8:	f803 1b01 	strb.w	r1, [r3], #1
 800a6fc:	e7f9      	b.n	800a6f2 <memset+0x4>

0800a6fe <strncmp>:
 800a6fe:	b510      	push	{r4, lr}
 800a700:	b16a      	cbz	r2, 800a71e <strncmp+0x20>
 800a702:	3901      	subs	r1, #1
 800a704:	1884      	adds	r4, r0, r2
 800a706:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a70a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a70e:	429a      	cmp	r2, r3
 800a710:	d103      	bne.n	800a71a <strncmp+0x1c>
 800a712:	42a0      	cmp	r0, r4
 800a714:	d001      	beq.n	800a71a <strncmp+0x1c>
 800a716:	2a00      	cmp	r2, #0
 800a718:	d1f5      	bne.n	800a706 <strncmp+0x8>
 800a71a:	1ad0      	subs	r0, r2, r3
 800a71c:	bd10      	pop	{r4, pc}
 800a71e:	4610      	mov	r0, r2
 800a720:	e7fc      	b.n	800a71c <strncmp+0x1e>

0800a722 <strncpy>:
 800a722:	b510      	push	{r4, lr}
 800a724:	3901      	subs	r1, #1
 800a726:	4603      	mov	r3, r0
 800a728:	b132      	cbz	r2, 800a738 <strncpy+0x16>
 800a72a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a72e:	f803 4b01 	strb.w	r4, [r3], #1
 800a732:	3a01      	subs	r2, #1
 800a734:	2c00      	cmp	r4, #0
 800a736:	d1f7      	bne.n	800a728 <strncpy+0x6>
 800a738:	441a      	add	r2, r3
 800a73a:	2100      	movs	r1, #0
 800a73c:	4293      	cmp	r3, r2
 800a73e:	d100      	bne.n	800a742 <strncpy+0x20>
 800a740:	bd10      	pop	{r4, pc}
 800a742:	f803 1b01 	strb.w	r1, [r3], #1
 800a746:	e7f9      	b.n	800a73c <strncpy+0x1a>

0800a748 <__strtok_r>:
 800a748:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a74a:	4604      	mov	r4, r0
 800a74c:	b908      	cbnz	r0, 800a752 <__strtok_r+0xa>
 800a74e:	6814      	ldr	r4, [r2, #0]
 800a750:	b144      	cbz	r4, 800a764 <__strtok_r+0x1c>
 800a752:	4620      	mov	r0, r4
 800a754:	f814 5b01 	ldrb.w	r5, [r4], #1
 800a758:	460f      	mov	r7, r1
 800a75a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800a75e:	b91e      	cbnz	r6, 800a768 <__strtok_r+0x20>
 800a760:	b965      	cbnz	r5, 800a77c <__strtok_r+0x34>
 800a762:	6015      	str	r5, [r2, #0]
 800a764:	2000      	movs	r0, #0
 800a766:	e005      	b.n	800a774 <__strtok_r+0x2c>
 800a768:	42b5      	cmp	r5, r6
 800a76a:	d1f6      	bne.n	800a75a <__strtok_r+0x12>
 800a76c:	2b00      	cmp	r3, #0
 800a76e:	d1f0      	bne.n	800a752 <__strtok_r+0xa>
 800a770:	6014      	str	r4, [r2, #0]
 800a772:	7003      	strb	r3, [r0, #0]
 800a774:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a776:	461c      	mov	r4, r3
 800a778:	e00c      	b.n	800a794 <__strtok_r+0x4c>
 800a77a:	b91d      	cbnz	r5, 800a784 <__strtok_r+0x3c>
 800a77c:	4627      	mov	r7, r4
 800a77e:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a782:	460e      	mov	r6, r1
 800a784:	f816 5b01 	ldrb.w	r5, [r6], #1
 800a788:	42ab      	cmp	r3, r5
 800a78a:	d1f6      	bne.n	800a77a <__strtok_r+0x32>
 800a78c:	2b00      	cmp	r3, #0
 800a78e:	d0f2      	beq.n	800a776 <__strtok_r+0x2e>
 800a790:	2300      	movs	r3, #0
 800a792:	703b      	strb	r3, [r7, #0]
 800a794:	6014      	str	r4, [r2, #0]
 800a796:	e7ed      	b.n	800a774 <__strtok_r+0x2c>

0800a798 <strtok_r>:
 800a798:	2301      	movs	r3, #1
 800a79a:	f7ff bfd5 	b.w	800a748 <__strtok_r>
	...

0800a7a0 <_close_r>:
 800a7a0:	b538      	push	{r3, r4, r5, lr}
 800a7a2:	4d06      	ldr	r5, [pc, #24]	@ (800a7bc <_close_r+0x1c>)
 800a7a4:	2300      	movs	r3, #0
 800a7a6:	4604      	mov	r4, r0
 800a7a8:	4608      	mov	r0, r1
 800a7aa:	602b      	str	r3, [r5, #0]
 800a7ac:	f7f8 fcb6 	bl	800311c <_close>
 800a7b0:	1c43      	adds	r3, r0, #1
 800a7b2:	d102      	bne.n	800a7ba <_close_r+0x1a>
 800a7b4:	682b      	ldr	r3, [r5, #0]
 800a7b6:	b103      	cbz	r3, 800a7ba <_close_r+0x1a>
 800a7b8:	6023      	str	r3, [r4, #0]
 800a7ba:	bd38      	pop	{r3, r4, r5, pc}
 800a7bc:	20005298 	.word	0x20005298

0800a7c0 <_lseek_r>:
 800a7c0:	b538      	push	{r3, r4, r5, lr}
 800a7c2:	4d07      	ldr	r5, [pc, #28]	@ (800a7e0 <_lseek_r+0x20>)
 800a7c4:	4604      	mov	r4, r0
 800a7c6:	4608      	mov	r0, r1
 800a7c8:	4611      	mov	r1, r2
 800a7ca:	2200      	movs	r2, #0
 800a7cc:	602a      	str	r2, [r5, #0]
 800a7ce:	461a      	mov	r2, r3
 800a7d0:	f7f8 fccb 	bl	800316a <_lseek>
 800a7d4:	1c43      	adds	r3, r0, #1
 800a7d6:	d102      	bne.n	800a7de <_lseek_r+0x1e>
 800a7d8:	682b      	ldr	r3, [r5, #0]
 800a7da:	b103      	cbz	r3, 800a7de <_lseek_r+0x1e>
 800a7dc:	6023      	str	r3, [r4, #0]
 800a7de:	bd38      	pop	{r3, r4, r5, pc}
 800a7e0:	20005298 	.word	0x20005298

0800a7e4 <_read_r>:
 800a7e4:	b538      	push	{r3, r4, r5, lr}
 800a7e6:	4d07      	ldr	r5, [pc, #28]	@ (800a804 <_read_r+0x20>)
 800a7e8:	4604      	mov	r4, r0
 800a7ea:	4608      	mov	r0, r1
 800a7ec:	4611      	mov	r1, r2
 800a7ee:	2200      	movs	r2, #0
 800a7f0:	602a      	str	r2, [r5, #0]
 800a7f2:	461a      	mov	r2, r3
 800a7f4:	f7f8 fc59 	bl	80030aa <_read>
 800a7f8:	1c43      	adds	r3, r0, #1
 800a7fa:	d102      	bne.n	800a802 <_read_r+0x1e>
 800a7fc:	682b      	ldr	r3, [r5, #0]
 800a7fe:	b103      	cbz	r3, 800a802 <_read_r+0x1e>
 800a800:	6023      	str	r3, [r4, #0]
 800a802:	bd38      	pop	{r3, r4, r5, pc}
 800a804:	20005298 	.word	0x20005298

0800a808 <_write_r>:
 800a808:	b538      	push	{r3, r4, r5, lr}
 800a80a:	4d07      	ldr	r5, [pc, #28]	@ (800a828 <_write_r+0x20>)
 800a80c:	4604      	mov	r4, r0
 800a80e:	4608      	mov	r0, r1
 800a810:	4611      	mov	r1, r2
 800a812:	2200      	movs	r2, #0
 800a814:	602a      	str	r2, [r5, #0]
 800a816:	461a      	mov	r2, r3
 800a818:	f7f8 fc64 	bl	80030e4 <_write>
 800a81c:	1c43      	adds	r3, r0, #1
 800a81e:	d102      	bne.n	800a826 <_write_r+0x1e>
 800a820:	682b      	ldr	r3, [r5, #0]
 800a822:	b103      	cbz	r3, 800a826 <_write_r+0x1e>
 800a824:	6023      	str	r3, [r4, #0]
 800a826:	bd38      	pop	{r3, r4, r5, pc}
 800a828:	20005298 	.word	0x20005298

0800a82c <__errno>:
 800a82c:	4b01      	ldr	r3, [pc, #4]	@ (800a834 <__errno+0x8>)
 800a82e:	6818      	ldr	r0, [r3, #0]
 800a830:	4770      	bx	lr
 800a832:	bf00      	nop
 800a834:	200001d4 	.word	0x200001d4

0800a838 <__libc_init_array>:
 800a838:	b570      	push	{r4, r5, r6, lr}
 800a83a:	4d0d      	ldr	r5, [pc, #52]	@ (800a870 <__libc_init_array+0x38>)
 800a83c:	4c0d      	ldr	r4, [pc, #52]	@ (800a874 <__libc_init_array+0x3c>)
 800a83e:	1b64      	subs	r4, r4, r5
 800a840:	10a4      	asrs	r4, r4, #2
 800a842:	2600      	movs	r6, #0
 800a844:	42a6      	cmp	r6, r4
 800a846:	d109      	bne.n	800a85c <__libc_init_array+0x24>
 800a848:	4d0b      	ldr	r5, [pc, #44]	@ (800a878 <__libc_init_array+0x40>)
 800a84a:	4c0c      	ldr	r4, [pc, #48]	@ (800a87c <__libc_init_array+0x44>)
 800a84c:	f002 f80e 	bl	800c86c <_init>
 800a850:	1b64      	subs	r4, r4, r5
 800a852:	10a4      	asrs	r4, r4, #2
 800a854:	2600      	movs	r6, #0
 800a856:	42a6      	cmp	r6, r4
 800a858:	d105      	bne.n	800a866 <__libc_init_array+0x2e>
 800a85a:	bd70      	pop	{r4, r5, r6, pc}
 800a85c:	f855 3b04 	ldr.w	r3, [r5], #4
 800a860:	4798      	blx	r3
 800a862:	3601      	adds	r6, #1
 800a864:	e7ee      	b.n	800a844 <__libc_init_array+0xc>
 800a866:	f855 3b04 	ldr.w	r3, [r5], #4
 800a86a:	4798      	blx	r3
 800a86c:	3601      	adds	r6, #1
 800a86e:	e7f2      	b.n	800a856 <__libc_init_array+0x1e>
 800a870:	0800cdb8 	.word	0x0800cdb8
 800a874:	0800cdb8 	.word	0x0800cdb8
 800a878:	0800cdb8 	.word	0x0800cdb8
 800a87c:	0800cdbc 	.word	0x0800cdbc

0800a880 <__retarget_lock_init_recursive>:
 800a880:	4770      	bx	lr

0800a882 <__retarget_lock_acquire_recursive>:
 800a882:	4770      	bx	lr

0800a884 <__retarget_lock_release_recursive>:
 800a884:	4770      	bx	lr

0800a886 <memcpy>:
 800a886:	440a      	add	r2, r1
 800a888:	4291      	cmp	r1, r2
 800a88a:	f100 33ff 	add.w	r3, r0, #4294967295
 800a88e:	d100      	bne.n	800a892 <memcpy+0xc>
 800a890:	4770      	bx	lr
 800a892:	b510      	push	{r4, lr}
 800a894:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a898:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a89c:	4291      	cmp	r1, r2
 800a89e:	d1f9      	bne.n	800a894 <memcpy+0xe>
 800a8a0:	bd10      	pop	{r4, pc}
 800a8a2:	0000      	movs	r0, r0
 800a8a4:	0000      	movs	r0, r0
	...

0800a8a8 <nan>:
 800a8a8:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800a8b0 <nan+0x8>
 800a8ac:	4770      	bx	lr
 800a8ae:	bf00      	nop
 800a8b0:	00000000 	.word	0x00000000
 800a8b4:	7ff80000 	.word	0x7ff80000

0800a8b8 <_free_r>:
 800a8b8:	b538      	push	{r3, r4, r5, lr}
 800a8ba:	4605      	mov	r5, r0
 800a8bc:	2900      	cmp	r1, #0
 800a8be:	d041      	beq.n	800a944 <_free_r+0x8c>
 800a8c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a8c4:	1f0c      	subs	r4, r1, #4
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	bfb8      	it	lt
 800a8ca:	18e4      	addlt	r4, r4, r3
 800a8cc:	f000 fc2c 	bl	800b128 <__malloc_lock>
 800a8d0:	4a1d      	ldr	r2, [pc, #116]	@ (800a948 <_free_r+0x90>)
 800a8d2:	6813      	ldr	r3, [r2, #0]
 800a8d4:	b933      	cbnz	r3, 800a8e4 <_free_r+0x2c>
 800a8d6:	6063      	str	r3, [r4, #4]
 800a8d8:	6014      	str	r4, [r2, #0]
 800a8da:	4628      	mov	r0, r5
 800a8dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a8e0:	f000 bc28 	b.w	800b134 <__malloc_unlock>
 800a8e4:	42a3      	cmp	r3, r4
 800a8e6:	d908      	bls.n	800a8fa <_free_r+0x42>
 800a8e8:	6820      	ldr	r0, [r4, #0]
 800a8ea:	1821      	adds	r1, r4, r0
 800a8ec:	428b      	cmp	r3, r1
 800a8ee:	bf01      	itttt	eq
 800a8f0:	6819      	ldreq	r1, [r3, #0]
 800a8f2:	685b      	ldreq	r3, [r3, #4]
 800a8f4:	1809      	addeq	r1, r1, r0
 800a8f6:	6021      	streq	r1, [r4, #0]
 800a8f8:	e7ed      	b.n	800a8d6 <_free_r+0x1e>
 800a8fa:	461a      	mov	r2, r3
 800a8fc:	685b      	ldr	r3, [r3, #4]
 800a8fe:	b10b      	cbz	r3, 800a904 <_free_r+0x4c>
 800a900:	42a3      	cmp	r3, r4
 800a902:	d9fa      	bls.n	800a8fa <_free_r+0x42>
 800a904:	6811      	ldr	r1, [r2, #0]
 800a906:	1850      	adds	r0, r2, r1
 800a908:	42a0      	cmp	r0, r4
 800a90a:	d10b      	bne.n	800a924 <_free_r+0x6c>
 800a90c:	6820      	ldr	r0, [r4, #0]
 800a90e:	4401      	add	r1, r0
 800a910:	1850      	adds	r0, r2, r1
 800a912:	4283      	cmp	r3, r0
 800a914:	6011      	str	r1, [r2, #0]
 800a916:	d1e0      	bne.n	800a8da <_free_r+0x22>
 800a918:	6818      	ldr	r0, [r3, #0]
 800a91a:	685b      	ldr	r3, [r3, #4]
 800a91c:	6053      	str	r3, [r2, #4]
 800a91e:	4408      	add	r0, r1
 800a920:	6010      	str	r0, [r2, #0]
 800a922:	e7da      	b.n	800a8da <_free_r+0x22>
 800a924:	d902      	bls.n	800a92c <_free_r+0x74>
 800a926:	230c      	movs	r3, #12
 800a928:	602b      	str	r3, [r5, #0]
 800a92a:	e7d6      	b.n	800a8da <_free_r+0x22>
 800a92c:	6820      	ldr	r0, [r4, #0]
 800a92e:	1821      	adds	r1, r4, r0
 800a930:	428b      	cmp	r3, r1
 800a932:	bf04      	itt	eq
 800a934:	6819      	ldreq	r1, [r3, #0]
 800a936:	685b      	ldreq	r3, [r3, #4]
 800a938:	6063      	str	r3, [r4, #4]
 800a93a:	bf04      	itt	eq
 800a93c:	1809      	addeq	r1, r1, r0
 800a93e:	6021      	streq	r1, [r4, #0]
 800a940:	6054      	str	r4, [r2, #4]
 800a942:	e7ca      	b.n	800a8da <_free_r+0x22>
 800a944:	bd38      	pop	{r3, r4, r5, pc}
 800a946:	bf00      	nop
 800a948:	200052a4 	.word	0x200052a4

0800a94c <rshift>:
 800a94c:	6903      	ldr	r3, [r0, #16]
 800a94e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800a952:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a956:	ea4f 1261 	mov.w	r2, r1, asr #5
 800a95a:	f100 0414 	add.w	r4, r0, #20
 800a95e:	dd45      	ble.n	800a9ec <rshift+0xa0>
 800a960:	f011 011f 	ands.w	r1, r1, #31
 800a964:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800a968:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800a96c:	d10c      	bne.n	800a988 <rshift+0x3c>
 800a96e:	f100 0710 	add.w	r7, r0, #16
 800a972:	4629      	mov	r1, r5
 800a974:	42b1      	cmp	r1, r6
 800a976:	d334      	bcc.n	800a9e2 <rshift+0x96>
 800a978:	1a9b      	subs	r3, r3, r2
 800a97a:	009b      	lsls	r3, r3, #2
 800a97c:	1eea      	subs	r2, r5, #3
 800a97e:	4296      	cmp	r6, r2
 800a980:	bf38      	it	cc
 800a982:	2300      	movcc	r3, #0
 800a984:	4423      	add	r3, r4
 800a986:	e015      	b.n	800a9b4 <rshift+0x68>
 800a988:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800a98c:	f1c1 0820 	rsb	r8, r1, #32
 800a990:	40cf      	lsrs	r7, r1
 800a992:	f105 0e04 	add.w	lr, r5, #4
 800a996:	46a1      	mov	r9, r4
 800a998:	4576      	cmp	r6, lr
 800a99a:	46f4      	mov	ip, lr
 800a99c:	d815      	bhi.n	800a9ca <rshift+0x7e>
 800a99e:	1a9a      	subs	r2, r3, r2
 800a9a0:	0092      	lsls	r2, r2, #2
 800a9a2:	3a04      	subs	r2, #4
 800a9a4:	3501      	adds	r5, #1
 800a9a6:	42ae      	cmp	r6, r5
 800a9a8:	bf38      	it	cc
 800a9aa:	2200      	movcc	r2, #0
 800a9ac:	18a3      	adds	r3, r4, r2
 800a9ae:	50a7      	str	r7, [r4, r2]
 800a9b0:	b107      	cbz	r7, 800a9b4 <rshift+0x68>
 800a9b2:	3304      	adds	r3, #4
 800a9b4:	1b1a      	subs	r2, r3, r4
 800a9b6:	42a3      	cmp	r3, r4
 800a9b8:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800a9bc:	bf08      	it	eq
 800a9be:	2300      	moveq	r3, #0
 800a9c0:	6102      	str	r2, [r0, #16]
 800a9c2:	bf08      	it	eq
 800a9c4:	6143      	streq	r3, [r0, #20]
 800a9c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a9ca:	f8dc c000 	ldr.w	ip, [ip]
 800a9ce:	fa0c fc08 	lsl.w	ip, ip, r8
 800a9d2:	ea4c 0707 	orr.w	r7, ip, r7
 800a9d6:	f849 7b04 	str.w	r7, [r9], #4
 800a9da:	f85e 7b04 	ldr.w	r7, [lr], #4
 800a9de:	40cf      	lsrs	r7, r1
 800a9e0:	e7da      	b.n	800a998 <rshift+0x4c>
 800a9e2:	f851 cb04 	ldr.w	ip, [r1], #4
 800a9e6:	f847 cf04 	str.w	ip, [r7, #4]!
 800a9ea:	e7c3      	b.n	800a974 <rshift+0x28>
 800a9ec:	4623      	mov	r3, r4
 800a9ee:	e7e1      	b.n	800a9b4 <rshift+0x68>

0800a9f0 <__hexdig_fun>:
 800a9f0:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800a9f4:	2b09      	cmp	r3, #9
 800a9f6:	d802      	bhi.n	800a9fe <__hexdig_fun+0xe>
 800a9f8:	3820      	subs	r0, #32
 800a9fa:	b2c0      	uxtb	r0, r0
 800a9fc:	4770      	bx	lr
 800a9fe:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800aa02:	2b05      	cmp	r3, #5
 800aa04:	d801      	bhi.n	800aa0a <__hexdig_fun+0x1a>
 800aa06:	3847      	subs	r0, #71	@ 0x47
 800aa08:	e7f7      	b.n	800a9fa <__hexdig_fun+0xa>
 800aa0a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800aa0e:	2b05      	cmp	r3, #5
 800aa10:	d801      	bhi.n	800aa16 <__hexdig_fun+0x26>
 800aa12:	3827      	subs	r0, #39	@ 0x27
 800aa14:	e7f1      	b.n	800a9fa <__hexdig_fun+0xa>
 800aa16:	2000      	movs	r0, #0
 800aa18:	4770      	bx	lr
	...

0800aa1c <__gethex>:
 800aa1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa20:	b085      	sub	sp, #20
 800aa22:	468a      	mov	sl, r1
 800aa24:	9302      	str	r3, [sp, #8]
 800aa26:	680b      	ldr	r3, [r1, #0]
 800aa28:	9001      	str	r0, [sp, #4]
 800aa2a:	4690      	mov	r8, r2
 800aa2c:	1c9c      	adds	r4, r3, #2
 800aa2e:	46a1      	mov	r9, r4
 800aa30:	f814 0b01 	ldrb.w	r0, [r4], #1
 800aa34:	2830      	cmp	r0, #48	@ 0x30
 800aa36:	d0fa      	beq.n	800aa2e <__gethex+0x12>
 800aa38:	eba9 0303 	sub.w	r3, r9, r3
 800aa3c:	f1a3 0b02 	sub.w	fp, r3, #2
 800aa40:	f7ff ffd6 	bl	800a9f0 <__hexdig_fun>
 800aa44:	4605      	mov	r5, r0
 800aa46:	2800      	cmp	r0, #0
 800aa48:	d168      	bne.n	800ab1c <__gethex+0x100>
 800aa4a:	49a0      	ldr	r1, [pc, #640]	@ (800accc <__gethex+0x2b0>)
 800aa4c:	2201      	movs	r2, #1
 800aa4e:	4648      	mov	r0, r9
 800aa50:	f7ff fe55 	bl	800a6fe <strncmp>
 800aa54:	4607      	mov	r7, r0
 800aa56:	2800      	cmp	r0, #0
 800aa58:	d167      	bne.n	800ab2a <__gethex+0x10e>
 800aa5a:	f899 0001 	ldrb.w	r0, [r9, #1]
 800aa5e:	4626      	mov	r6, r4
 800aa60:	f7ff ffc6 	bl	800a9f0 <__hexdig_fun>
 800aa64:	2800      	cmp	r0, #0
 800aa66:	d062      	beq.n	800ab2e <__gethex+0x112>
 800aa68:	4623      	mov	r3, r4
 800aa6a:	7818      	ldrb	r0, [r3, #0]
 800aa6c:	2830      	cmp	r0, #48	@ 0x30
 800aa6e:	4699      	mov	r9, r3
 800aa70:	f103 0301 	add.w	r3, r3, #1
 800aa74:	d0f9      	beq.n	800aa6a <__gethex+0x4e>
 800aa76:	f7ff ffbb 	bl	800a9f0 <__hexdig_fun>
 800aa7a:	fab0 f580 	clz	r5, r0
 800aa7e:	096d      	lsrs	r5, r5, #5
 800aa80:	f04f 0b01 	mov.w	fp, #1
 800aa84:	464a      	mov	r2, r9
 800aa86:	4616      	mov	r6, r2
 800aa88:	3201      	adds	r2, #1
 800aa8a:	7830      	ldrb	r0, [r6, #0]
 800aa8c:	f7ff ffb0 	bl	800a9f0 <__hexdig_fun>
 800aa90:	2800      	cmp	r0, #0
 800aa92:	d1f8      	bne.n	800aa86 <__gethex+0x6a>
 800aa94:	498d      	ldr	r1, [pc, #564]	@ (800accc <__gethex+0x2b0>)
 800aa96:	2201      	movs	r2, #1
 800aa98:	4630      	mov	r0, r6
 800aa9a:	f7ff fe30 	bl	800a6fe <strncmp>
 800aa9e:	2800      	cmp	r0, #0
 800aaa0:	d13f      	bne.n	800ab22 <__gethex+0x106>
 800aaa2:	b944      	cbnz	r4, 800aab6 <__gethex+0x9a>
 800aaa4:	1c74      	adds	r4, r6, #1
 800aaa6:	4622      	mov	r2, r4
 800aaa8:	4616      	mov	r6, r2
 800aaaa:	3201      	adds	r2, #1
 800aaac:	7830      	ldrb	r0, [r6, #0]
 800aaae:	f7ff ff9f 	bl	800a9f0 <__hexdig_fun>
 800aab2:	2800      	cmp	r0, #0
 800aab4:	d1f8      	bne.n	800aaa8 <__gethex+0x8c>
 800aab6:	1ba4      	subs	r4, r4, r6
 800aab8:	00a7      	lsls	r7, r4, #2
 800aaba:	7833      	ldrb	r3, [r6, #0]
 800aabc:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800aac0:	2b50      	cmp	r3, #80	@ 0x50
 800aac2:	d13e      	bne.n	800ab42 <__gethex+0x126>
 800aac4:	7873      	ldrb	r3, [r6, #1]
 800aac6:	2b2b      	cmp	r3, #43	@ 0x2b
 800aac8:	d033      	beq.n	800ab32 <__gethex+0x116>
 800aaca:	2b2d      	cmp	r3, #45	@ 0x2d
 800aacc:	d034      	beq.n	800ab38 <__gethex+0x11c>
 800aace:	1c71      	adds	r1, r6, #1
 800aad0:	2400      	movs	r4, #0
 800aad2:	7808      	ldrb	r0, [r1, #0]
 800aad4:	f7ff ff8c 	bl	800a9f0 <__hexdig_fun>
 800aad8:	1e43      	subs	r3, r0, #1
 800aada:	b2db      	uxtb	r3, r3
 800aadc:	2b18      	cmp	r3, #24
 800aade:	d830      	bhi.n	800ab42 <__gethex+0x126>
 800aae0:	f1a0 0210 	sub.w	r2, r0, #16
 800aae4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800aae8:	f7ff ff82 	bl	800a9f0 <__hexdig_fun>
 800aaec:	f100 3cff 	add.w	ip, r0, #4294967295
 800aaf0:	fa5f fc8c 	uxtb.w	ip, ip
 800aaf4:	f1bc 0f18 	cmp.w	ip, #24
 800aaf8:	f04f 030a 	mov.w	r3, #10
 800aafc:	d91e      	bls.n	800ab3c <__gethex+0x120>
 800aafe:	b104      	cbz	r4, 800ab02 <__gethex+0xe6>
 800ab00:	4252      	negs	r2, r2
 800ab02:	4417      	add	r7, r2
 800ab04:	f8ca 1000 	str.w	r1, [sl]
 800ab08:	b1ed      	cbz	r5, 800ab46 <__gethex+0x12a>
 800ab0a:	f1bb 0f00 	cmp.w	fp, #0
 800ab0e:	bf0c      	ite	eq
 800ab10:	2506      	moveq	r5, #6
 800ab12:	2500      	movne	r5, #0
 800ab14:	4628      	mov	r0, r5
 800ab16:	b005      	add	sp, #20
 800ab18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab1c:	2500      	movs	r5, #0
 800ab1e:	462c      	mov	r4, r5
 800ab20:	e7b0      	b.n	800aa84 <__gethex+0x68>
 800ab22:	2c00      	cmp	r4, #0
 800ab24:	d1c7      	bne.n	800aab6 <__gethex+0x9a>
 800ab26:	4627      	mov	r7, r4
 800ab28:	e7c7      	b.n	800aaba <__gethex+0x9e>
 800ab2a:	464e      	mov	r6, r9
 800ab2c:	462f      	mov	r7, r5
 800ab2e:	2501      	movs	r5, #1
 800ab30:	e7c3      	b.n	800aaba <__gethex+0x9e>
 800ab32:	2400      	movs	r4, #0
 800ab34:	1cb1      	adds	r1, r6, #2
 800ab36:	e7cc      	b.n	800aad2 <__gethex+0xb6>
 800ab38:	2401      	movs	r4, #1
 800ab3a:	e7fb      	b.n	800ab34 <__gethex+0x118>
 800ab3c:	fb03 0002 	mla	r0, r3, r2, r0
 800ab40:	e7ce      	b.n	800aae0 <__gethex+0xc4>
 800ab42:	4631      	mov	r1, r6
 800ab44:	e7de      	b.n	800ab04 <__gethex+0xe8>
 800ab46:	eba6 0309 	sub.w	r3, r6, r9
 800ab4a:	3b01      	subs	r3, #1
 800ab4c:	4629      	mov	r1, r5
 800ab4e:	2b07      	cmp	r3, #7
 800ab50:	dc0a      	bgt.n	800ab68 <__gethex+0x14c>
 800ab52:	9801      	ldr	r0, [sp, #4]
 800ab54:	f000 faf4 	bl	800b140 <_Balloc>
 800ab58:	4604      	mov	r4, r0
 800ab5a:	b940      	cbnz	r0, 800ab6e <__gethex+0x152>
 800ab5c:	4b5c      	ldr	r3, [pc, #368]	@ (800acd0 <__gethex+0x2b4>)
 800ab5e:	4602      	mov	r2, r0
 800ab60:	21e4      	movs	r1, #228	@ 0xe4
 800ab62:	485c      	ldr	r0, [pc, #368]	@ (800acd4 <__gethex+0x2b8>)
 800ab64:	f001 fb5c 	bl	800c220 <__assert_func>
 800ab68:	3101      	adds	r1, #1
 800ab6a:	105b      	asrs	r3, r3, #1
 800ab6c:	e7ef      	b.n	800ab4e <__gethex+0x132>
 800ab6e:	f100 0a14 	add.w	sl, r0, #20
 800ab72:	2300      	movs	r3, #0
 800ab74:	4655      	mov	r5, sl
 800ab76:	469b      	mov	fp, r3
 800ab78:	45b1      	cmp	r9, r6
 800ab7a:	d337      	bcc.n	800abec <__gethex+0x1d0>
 800ab7c:	f845 bb04 	str.w	fp, [r5], #4
 800ab80:	eba5 050a 	sub.w	r5, r5, sl
 800ab84:	10ad      	asrs	r5, r5, #2
 800ab86:	6125      	str	r5, [r4, #16]
 800ab88:	4658      	mov	r0, fp
 800ab8a:	f000 fbcb 	bl	800b324 <__hi0bits>
 800ab8e:	016d      	lsls	r5, r5, #5
 800ab90:	f8d8 6000 	ldr.w	r6, [r8]
 800ab94:	1a2d      	subs	r5, r5, r0
 800ab96:	42b5      	cmp	r5, r6
 800ab98:	dd54      	ble.n	800ac44 <__gethex+0x228>
 800ab9a:	1bad      	subs	r5, r5, r6
 800ab9c:	4629      	mov	r1, r5
 800ab9e:	4620      	mov	r0, r4
 800aba0:	f000 ff57 	bl	800ba52 <__any_on>
 800aba4:	4681      	mov	r9, r0
 800aba6:	b178      	cbz	r0, 800abc8 <__gethex+0x1ac>
 800aba8:	1e6b      	subs	r3, r5, #1
 800abaa:	1159      	asrs	r1, r3, #5
 800abac:	f003 021f 	and.w	r2, r3, #31
 800abb0:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800abb4:	f04f 0901 	mov.w	r9, #1
 800abb8:	fa09 f202 	lsl.w	r2, r9, r2
 800abbc:	420a      	tst	r2, r1
 800abbe:	d003      	beq.n	800abc8 <__gethex+0x1ac>
 800abc0:	454b      	cmp	r3, r9
 800abc2:	dc36      	bgt.n	800ac32 <__gethex+0x216>
 800abc4:	f04f 0902 	mov.w	r9, #2
 800abc8:	4629      	mov	r1, r5
 800abca:	4620      	mov	r0, r4
 800abcc:	f7ff febe 	bl	800a94c <rshift>
 800abd0:	442f      	add	r7, r5
 800abd2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800abd6:	42bb      	cmp	r3, r7
 800abd8:	da42      	bge.n	800ac60 <__gethex+0x244>
 800abda:	9801      	ldr	r0, [sp, #4]
 800abdc:	4621      	mov	r1, r4
 800abde:	f000 faef 	bl	800b1c0 <_Bfree>
 800abe2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800abe4:	2300      	movs	r3, #0
 800abe6:	6013      	str	r3, [r2, #0]
 800abe8:	25a3      	movs	r5, #163	@ 0xa3
 800abea:	e793      	b.n	800ab14 <__gethex+0xf8>
 800abec:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800abf0:	2a2e      	cmp	r2, #46	@ 0x2e
 800abf2:	d012      	beq.n	800ac1a <__gethex+0x1fe>
 800abf4:	2b20      	cmp	r3, #32
 800abf6:	d104      	bne.n	800ac02 <__gethex+0x1e6>
 800abf8:	f845 bb04 	str.w	fp, [r5], #4
 800abfc:	f04f 0b00 	mov.w	fp, #0
 800ac00:	465b      	mov	r3, fp
 800ac02:	7830      	ldrb	r0, [r6, #0]
 800ac04:	9303      	str	r3, [sp, #12]
 800ac06:	f7ff fef3 	bl	800a9f0 <__hexdig_fun>
 800ac0a:	9b03      	ldr	r3, [sp, #12]
 800ac0c:	f000 000f 	and.w	r0, r0, #15
 800ac10:	4098      	lsls	r0, r3
 800ac12:	ea4b 0b00 	orr.w	fp, fp, r0
 800ac16:	3304      	adds	r3, #4
 800ac18:	e7ae      	b.n	800ab78 <__gethex+0x15c>
 800ac1a:	45b1      	cmp	r9, r6
 800ac1c:	d8ea      	bhi.n	800abf4 <__gethex+0x1d8>
 800ac1e:	492b      	ldr	r1, [pc, #172]	@ (800accc <__gethex+0x2b0>)
 800ac20:	9303      	str	r3, [sp, #12]
 800ac22:	2201      	movs	r2, #1
 800ac24:	4630      	mov	r0, r6
 800ac26:	f7ff fd6a 	bl	800a6fe <strncmp>
 800ac2a:	9b03      	ldr	r3, [sp, #12]
 800ac2c:	2800      	cmp	r0, #0
 800ac2e:	d1e1      	bne.n	800abf4 <__gethex+0x1d8>
 800ac30:	e7a2      	b.n	800ab78 <__gethex+0x15c>
 800ac32:	1ea9      	subs	r1, r5, #2
 800ac34:	4620      	mov	r0, r4
 800ac36:	f000 ff0c 	bl	800ba52 <__any_on>
 800ac3a:	2800      	cmp	r0, #0
 800ac3c:	d0c2      	beq.n	800abc4 <__gethex+0x1a8>
 800ac3e:	f04f 0903 	mov.w	r9, #3
 800ac42:	e7c1      	b.n	800abc8 <__gethex+0x1ac>
 800ac44:	da09      	bge.n	800ac5a <__gethex+0x23e>
 800ac46:	1b75      	subs	r5, r6, r5
 800ac48:	4621      	mov	r1, r4
 800ac4a:	9801      	ldr	r0, [sp, #4]
 800ac4c:	462a      	mov	r2, r5
 800ac4e:	f000 fcc7 	bl	800b5e0 <__lshift>
 800ac52:	1b7f      	subs	r7, r7, r5
 800ac54:	4604      	mov	r4, r0
 800ac56:	f100 0a14 	add.w	sl, r0, #20
 800ac5a:	f04f 0900 	mov.w	r9, #0
 800ac5e:	e7b8      	b.n	800abd2 <__gethex+0x1b6>
 800ac60:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800ac64:	42bd      	cmp	r5, r7
 800ac66:	dd6f      	ble.n	800ad48 <__gethex+0x32c>
 800ac68:	1bed      	subs	r5, r5, r7
 800ac6a:	42ae      	cmp	r6, r5
 800ac6c:	dc34      	bgt.n	800acd8 <__gethex+0x2bc>
 800ac6e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ac72:	2b02      	cmp	r3, #2
 800ac74:	d022      	beq.n	800acbc <__gethex+0x2a0>
 800ac76:	2b03      	cmp	r3, #3
 800ac78:	d024      	beq.n	800acc4 <__gethex+0x2a8>
 800ac7a:	2b01      	cmp	r3, #1
 800ac7c:	d115      	bne.n	800acaa <__gethex+0x28e>
 800ac7e:	42ae      	cmp	r6, r5
 800ac80:	d113      	bne.n	800acaa <__gethex+0x28e>
 800ac82:	2e01      	cmp	r6, #1
 800ac84:	d10b      	bne.n	800ac9e <__gethex+0x282>
 800ac86:	9a02      	ldr	r2, [sp, #8]
 800ac88:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800ac8c:	6013      	str	r3, [r2, #0]
 800ac8e:	2301      	movs	r3, #1
 800ac90:	6123      	str	r3, [r4, #16]
 800ac92:	f8ca 3000 	str.w	r3, [sl]
 800ac96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ac98:	2562      	movs	r5, #98	@ 0x62
 800ac9a:	601c      	str	r4, [r3, #0]
 800ac9c:	e73a      	b.n	800ab14 <__gethex+0xf8>
 800ac9e:	1e71      	subs	r1, r6, #1
 800aca0:	4620      	mov	r0, r4
 800aca2:	f000 fed6 	bl	800ba52 <__any_on>
 800aca6:	2800      	cmp	r0, #0
 800aca8:	d1ed      	bne.n	800ac86 <__gethex+0x26a>
 800acaa:	9801      	ldr	r0, [sp, #4]
 800acac:	4621      	mov	r1, r4
 800acae:	f000 fa87 	bl	800b1c0 <_Bfree>
 800acb2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800acb4:	2300      	movs	r3, #0
 800acb6:	6013      	str	r3, [r2, #0]
 800acb8:	2550      	movs	r5, #80	@ 0x50
 800acba:	e72b      	b.n	800ab14 <__gethex+0xf8>
 800acbc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800acbe:	2b00      	cmp	r3, #0
 800acc0:	d1f3      	bne.n	800acaa <__gethex+0x28e>
 800acc2:	e7e0      	b.n	800ac86 <__gethex+0x26a>
 800acc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800acc6:	2b00      	cmp	r3, #0
 800acc8:	d1dd      	bne.n	800ac86 <__gethex+0x26a>
 800acca:	e7ee      	b.n	800acaa <__gethex+0x28e>
 800accc:	0800c9f4 	.word	0x0800c9f4
 800acd0:	0800ca0a 	.word	0x0800ca0a
 800acd4:	0800ca1b 	.word	0x0800ca1b
 800acd8:	1e6f      	subs	r7, r5, #1
 800acda:	f1b9 0f00 	cmp.w	r9, #0
 800acde:	d130      	bne.n	800ad42 <__gethex+0x326>
 800ace0:	b127      	cbz	r7, 800acec <__gethex+0x2d0>
 800ace2:	4639      	mov	r1, r7
 800ace4:	4620      	mov	r0, r4
 800ace6:	f000 feb4 	bl	800ba52 <__any_on>
 800acea:	4681      	mov	r9, r0
 800acec:	117a      	asrs	r2, r7, #5
 800acee:	2301      	movs	r3, #1
 800acf0:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800acf4:	f007 071f 	and.w	r7, r7, #31
 800acf8:	40bb      	lsls	r3, r7
 800acfa:	4213      	tst	r3, r2
 800acfc:	4629      	mov	r1, r5
 800acfe:	4620      	mov	r0, r4
 800ad00:	bf18      	it	ne
 800ad02:	f049 0902 	orrne.w	r9, r9, #2
 800ad06:	f7ff fe21 	bl	800a94c <rshift>
 800ad0a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800ad0e:	1b76      	subs	r6, r6, r5
 800ad10:	2502      	movs	r5, #2
 800ad12:	f1b9 0f00 	cmp.w	r9, #0
 800ad16:	d047      	beq.n	800ada8 <__gethex+0x38c>
 800ad18:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ad1c:	2b02      	cmp	r3, #2
 800ad1e:	d015      	beq.n	800ad4c <__gethex+0x330>
 800ad20:	2b03      	cmp	r3, #3
 800ad22:	d017      	beq.n	800ad54 <__gethex+0x338>
 800ad24:	2b01      	cmp	r3, #1
 800ad26:	d109      	bne.n	800ad3c <__gethex+0x320>
 800ad28:	f019 0f02 	tst.w	r9, #2
 800ad2c:	d006      	beq.n	800ad3c <__gethex+0x320>
 800ad2e:	f8da 3000 	ldr.w	r3, [sl]
 800ad32:	ea49 0903 	orr.w	r9, r9, r3
 800ad36:	f019 0f01 	tst.w	r9, #1
 800ad3a:	d10e      	bne.n	800ad5a <__gethex+0x33e>
 800ad3c:	f045 0510 	orr.w	r5, r5, #16
 800ad40:	e032      	b.n	800ada8 <__gethex+0x38c>
 800ad42:	f04f 0901 	mov.w	r9, #1
 800ad46:	e7d1      	b.n	800acec <__gethex+0x2d0>
 800ad48:	2501      	movs	r5, #1
 800ad4a:	e7e2      	b.n	800ad12 <__gethex+0x2f6>
 800ad4c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ad4e:	f1c3 0301 	rsb	r3, r3, #1
 800ad52:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ad54:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ad56:	2b00      	cmp	r3, #0
 800ad58:	d0f0      	beq.n	800ad3c <__gethex+0x320>
 800ad5a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800ad5e:	f104 0314 	add.w	r3, r4, #20
 800ad62:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800ad66:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800ad6a:	f04f 0c00 	mov.w	ip, #0
 800ad6e:	4618      	mov	r0, r3
 800ad70:	f853 2b04 	ldr.w	r2, [r3], #4
 800ad74:	f1b2 3fff 	cmp.w	r2, #4294967295
 800ad78:	d01b      	beq.n	800adb2 <__gethex+0x396>
 800ad7a:	3201      	adds	r2, #1
 800ad7c:	6002      	str	r2, [r0, #0]
 800ad7e:	2d02      	cmp	r5, #2
 800ad80:	f104 0314 	add.w	r3, r4, #20
 800ad84:	d13c      	bne.n	800ae00 <__gethex+0x3e4>
 800ad86:	f8d8 2000 	ldr.w	r2, [r8]
 800ad8a:	3a01      	subs	r2, #1
 800ad8c:	42b2      	cmp	r2, r6
 800ad8e:	d109      	bne.n	800ada4 <__gethex+0x388>
 800ad90:	1171      	asrs	r1, r6, #5
 800ad92:	2201      	movs	r2, #1
 800ad94:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800ad98:	f006 061f 	and.w	r6, r6, #31
 800ad9c:	fa02 f606 	lsl.w	r6, r2, r6
 800ada0:	421e      	tst	r6, r3
 800ada2:	d13a      	bne.n	800ae1a <__gethex+0x3fe>
 800ada4:	f045 0520 	orr.w	r5, r5, #32
 800ada8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800adaa:	601c      	str	r4, [r3, #0]
 800adac:	9b02      	ldr	r3, [sp, #8]
 800adae:	601f      	str	r7, [r3, #0]
 800adb0:	e6b0      	b.n	800ab14 <__gethex+0xf8>
 800adb2:	4299      	cmp	r1, r3
 800adb4:	f843 cc04 	str.w	ip, [r3, #-4]
 800adb8:	d8d9      	bhi.n	800ad6e <__gethex+0x352>
 800adba:	68a3      	ldr	r3, [r4, #8]
 800adbc:	459b      	cmp	fp, r3
 800adbe:	db17      	blt.n	800adf0 <__gethex+0x3d4>
 800adc0:	6861      	ldr	r1, [r4, #4]
 800adc2:	9801      	ldr	r0, [sp, #4]
 800adc4:	3101      	adds	r1, #1
 800adc6:	f000 f9bb 	bl	800b140 <_Balloc>
 800adca:	4681      	mov	r9, r0
 800adcc:	b918      	cbnz	r0, 800add6 <__gethex+0x3ba>
 800adce:	4b1a      	ldr	r3, [pc, #104]	@ (800ae38 <__gethex+0x41c>)
 800add0:	4602      	mov	r2, r0
 800add2:	2184      	movs	r1, #132	@ 0x84
 800add4:	e6c5      	b.n	800ab62 <__gethex+0x146>
 800add6:	6922      	ldr	r2, [r4, #16]
 800add8:	3202      	adds	r2, #2
 800adda:	f104 010c 	add.w	r1, r4, #12
 800adde:	0092      	lsls	r2, r2, #2
 800ade0:	300c      	adds	r0, #12
 800ade2:	f7ff fd50 	bl	800a886 <memcpy>
 800ade6:	4621      	mov	r1, r4
 800ade8:	9801      	ldr	r0, [sp, #4]
 800adea:	f000 f9e9 	bl	800b1c0 <_Bfree>
 800adee:	464c      	mov	r4, r9
 800adf0:	6923      	ldr	r3, [r4, #16]
 800adf2:	1c5a      	adds	r2, r3, #1
 800adf4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800adf8:	6122      	str	r2, [r4, #16]
 800adfa:	2201      	movs	r2, #1
 800adfc:	615a      	str	r2, [r3, #20]
 800adfe:	e7be      	b.n	800ad7e <__gethex+0x362>
 800ae00:	6922      	ldr	r2, [r4, #16]
 800ae02:	455a      	cmp	r2, fp
 800ae04:	dd0b      	ble.n	800ae1e <__gethex+0x402>
 800ae06:	2101      	movs	r1, #1
 800ae08:	4620      	mov	r0, r4
 800ae0a:	f7ff fd9f 	bl	800a94c <rshift>
 800ae0e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ae12:	3701      	adds	r7, #1
 800ae14:	42bb      	cmp	r3, r7
 800ae16:	f6ff aee0 	blt.w	800abda <__gethex+0x1be>
 800ae1a:	2501      	movs	r5, #1
 800ae1c:	e7c2      	b.n	800ada4 <__gethex+0x388>
 800ae1e:	f016 061f 	ands.w	r6, r6, #31
 800ae22:	d0fa      	beq.n	800ae1a <__gethex+0x3fe>
 800ae24:	4453      	add	r3, sl
 800ae26:	f1c6 0620 	rsb	r6, r6, #32
 800ae2a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800ae2e:	f000 fa79 	bl	800b324 <__hi0bits>
 800ae32:	42b0      	cmp	r0, r6
 800ae34:	dbe7      	blt.n	800ae06 <__gethex+0x3ea>
 800ae36:	e7f0      	b.n	800ae1a <__gethex+0x3fe>
 800ae38:	0800ca0a 	.word	0x0800ca0a

0800ae3c <L_shift>:
 800ae3c:	f1c2 0208 	rsb	r2, r2, #8
 800ae40:	0092      	lsls	r2, r2, #2
 800ae42:	b570      	push	{r4, r5, r6, lr}
 800ae44:	f1c2 0620 	rsb	r6, r2, #32
 800ae48:	6843      	ldr	r3, [r0, #4]
 800ae4a:	6804      	ldr	r4, [r0, #0]
 800ae4c:	fa03 f506 	lsl.w	r5, r3, r6
 800ae50:	432c      	orrs	r4, r5
 800ae52:	40d3      	lsrs	r3, r2
 800ae54:	6004      	str	r4, [r0, #0]
 800ae56:	f840 3f04 	str.w	r3, [r0, #4]!
 800ae5a:	4288      	cmp	r0, r1
 800ae5c:	d3f4      	bcc.n	800ae48 <L_shift+0xc>
 800ae5e:	bd70      	pop	{r4, r5, r6, pc}

0800ae60 <__match>:
 800ae60:	b530      	push	{r4, r5, lr}
 800ae62:	6803      	ldr	r3, [r0, #0]
 800ae64:	3301      	adds	r3, #1
 800ae66:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ae6a:	b914      	cbnz	r4, 800ae72 <__match+0x12>
 800ae6c:	6003      	str	r3, [r0, #0]
 800ae6e:	2001      	movs	r0, #1
 800ae70:	bd30      	pop	{r4, r5, pc}
 800ae72:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ae76:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800ae7a:	2d19      	cmp	r5, #25
 800ae7c:	bf98      	it	ls
 800ae7e:	3220      	addls	r2, #32
 800ae80:	42a2      	cmp	r2, r4
 800ae82:	d0f0      	beq.n	800ae66 <__match+0x6>
 800ae84:	2000      	movs	r0, #0
 800ae86:	e7f3      	b.n	800ae70 <__match+0x10>

0800ae88 <__hexnan>:
 800ae88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae8c:	680b      	ldr	r3, [r1, #0]
 800ae8e:	6801      	ldr	r1, [r0, #0]
 800ae90:	115e      	asrs	r6, r3, #5
 800ae92:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800ae96:	f013 031f 	ands.w	r3, r3, #31
 800ae9a:	b087      	sub	sp, #28
 800ae9c:	bf18      	it	ne
 800ae9e:	3604      	addne	r6, #4
 800aea0:	2500      	movs	r5, #0
 800aea2:	1f37      	subs	r7, r6, #4
 800aea4:	4682      	mov	sl, r0
 800aea6:	4690      	mov	r8, r2
 800aea8:	9301      	str	r3, [sp, #4]
 800aeaa:	f846 5c04 	str.w	r5, [r6, #-4]
 800aeae:	46b9      	mov	r9, r7
 800aeb0:	463c      	mov	r4, r7
 800aeb2:	9502      	str	r5, [sp, #8]
 800aeb4:	46ab      	mov	fp, r5
 800aeb6:	784a      	ldrb	r2, [r1, #1]
 800aeb8:	1c4b      	adds	r3, r1, #1
 800aeba:	9303      	str	r3, [sp, #12]
 800aebc:	b342      	cbz	r2, 800af10 <__hexnan+0x88>
 800aebe:	4610      	mov	r0, r2
 800aec0:	9105      	str	r1, [sp, #20]
 800aec2:	9204      	str	r2, [sp, #16]
 800aec4:	f7ff fd94 	bl	800a9f0 <__hexdig_fun>
 800aec8:	2800      	cmp	r0, #0
 800aeca:	d151      	bne.n	800af70 <__hexnan+0xe8>
 800aecc:	9a04      	ldr	r2, [sp, #16]
 800aece:	9905      	ldr	r1, [sp, #20]
 800aed0:	2a20      	cmp	r2, #32
 800aed2:	d818      	bhi.n	800af06 <__hexnan+0x7e>
 800aed4:	9b02      	ldr	r3, [sp, #8]
 800aed6:	459b      	cmp	fp, r3
 800aed8:	dd13      	ble.n	800af02 <__hexnan+0x7a>
 800aeda:	454c      	cmp	r4, r9
 800aedc:	d206      	bcs.n	800aeec <__hexnan+0x64>
 800aede:	2d07      	cmp	r5, #7
 800aee0:	dc04      	bgt.n	800aeec <__hexnan+0x64>
 800aee2:	462a      	mov	r2, r5
 800aee4:	4649      	mov	r1, r9
 800aee6:	4620      	mov	r0, r4
 800aee8:	f7ff ffa8 	bl	800ae3c <L_shift>
 800aeec:	4544      	cmp	r4, r8
 800aeee:	d952      	bls.n	800af96 <__hexnan+0x10e>
 800aef0:	2300      	movs	r3, #0
 800aef2:	f1a4 0904 	sub.w	r9, r4, #4
 800aef6:	f844 3c04 	str.w	r3, [r4, #-4]
 800aefa:	f8cd b008 	str.w	fp, [sp, #8]
 800aefe:	464c      	mov	r4, r9
 800af00:	461d      	mov	r5, r3
 800af02:	9903      	ldr	r1, [sp, #12]
 800af04:	e7d7      	b.n	800aeb6 <__hexnan+0x2e>
 800af06:	2a29      	cmp	r2, #41	@ 0x29
 800af08:	d157      	bne.n	800afba <__hexnan+0x132>
 800af0a:	3102      	adds	r1, #2
 800af0c:	f8ca 1000 	str.w	r1, [sl]
 800af10:	f1bb 0f00 	cmp.w	fp, #0
 800af14:	d051      	beq.n	800afba <__hexnan+0x132>
 800af16:	454c      	cmp	r4, r9
 800af18:	d206      	bcs.n	800af28 <__hexnan+0xa0>
 800af1a:	2d07      	cmp	r5, #7
 800af1c:	dc04      	bgt.n	800af28 <__hexnan+0xa0>
 800af1e:	462a      	mov	r2, r5
 800af20:	4649      	mov	r1, r9
 800af22:	4620      	mov	r0, r4
 800af24:	f7ff ff8a 	bl	800ae3c <L_shift>
 800af28:	4544      	cmp	r4, r8
 800af2a:	d936      	bls.n	800af9a <__hexnan+0x112>
 800af2c:	f1a8 0204 	sub.w	r2, r8, #4
 800af30:	4623      	mov	r3, r4
 800af32:	f853 1b04 	ldr.w	r1, [r3], #4
 800af36:	f842 1f04 	str.w	r1, [r2, #4]!
 800af3a:	429f      	cmp	r7, r3
 800af3c:	d2f9      	bcs.n	800af32 <__hexnan+0xaa>
 800af3e:	1b3b      	subs	r3, r7, r4
 800af40:	f023 0303 	bic.w	r3, r3, #3
 800af44:	3304      	adds	r3, #4
 800af46:	3401      	adds	r4, #1
 800af48:	3e03      	subs	r6, #3
 800af4a:	42b4      	cmp	r4, r6
 800af4c:	bf88      	it	hi
 800af4e:	2304      	movhi	r3, #4
 800af50:	4443      	add	r3, r8
 800af52:	2200      	movs	r2, #0
 800af54:	f843 2b04 	str.w	r2, [r3], #4
 800af58:	429f      	cmp	r7, r3
 800af5a:	d2fb      	bcs.n	800af54 <__hexnan+0xcc>
 800af5c:	683b      	ldr	r3, [r7, #0]
 800af5e:	b91b      	cbnz	r3, 800af68 <__hexnan+0xe0>
 800af60:	4547      	cmp	r7, r8
 800af62:	d128      	bne.n	800afb6 <__hexnan+0x12e>
 800af64:	2301      	movs	r3, #1
 800af66:	603b      	str	r3, [r7, #0]
 800af68:	2005      	movs	r0, #5
 800af6a:	b007      	add	sp, #28
 800af6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af70:	3501      	adds	r5, #1
 800af72:	2d08      	cmp	r5, #8
 800af74:	f10b 0b01 	add.w	fp, fp, #1
 800af78:	dd06      	ble.n	800af88 <__hexnan+0x100>
 800af7a:	4544      	cmp	r4, r8
 800af7c:	d9c1      	bls.n	800af02 <__hexnan+0x7a>
 800af7e:	2300      	movs	r3, #0
 800af80:	f844 3c04 	str.w	r3, [r4, #-4]
 800af84:	2501      	movs	r5, #1
 800af86:	3c04      	subs	r4, #4
 800af88:	6822      	ldr	r2, [r4, #0]
 800af8a:	f000 000f 	and.w	r0, r0, #15
 800af8e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800af92:	6020      	str	r0, [r4, #0]
 800af94:	e7b5      	b.n	800af02 <__hexnan+0x7a>
 800af96:	2508      	movs	r5, #8
 800af98:	e7b3      	b.n	800af02 <__hexnan+0x7a>
 800af9a:	9b01      	ldr	r3, [sp, #4]
 800af9c:	2b00      	cmp	r3, #0
 800af9e:	d0dd      	beq.n	800af5c <__hexnan+0xd4>
 800afa0:	f1c3 0320 	rsb	r3, r3, #32
 800afa4:	f04f 32ff 	mov.w	r2, #4294967295
 800afa8:	40da      	lsrs	r2, r3
 800afaa:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800afae:	4013      	ands	r3, r2
 800afb0:	f846 3c04 	str.w	r3, [r6, #-4]
 800afb4:	e7d2      	b.n	800af5c <__hexnan+0xd4>
 800afb6:	3f04      	subs	r7, #4
 800afb8:	e7d0      	b.n	800af5c <__hexnan+0xd4>
 800afba:	2004      	movs	r0, #4
 800afbc:	e7d5      	b.n	800af6a <__hexnan+0xe2>
	...

0800afc0 <sbrk_aligned>:
 800afc0:	b570      	push	{r4, r5, r6, lr}
 800afc2:	4e0f      	ldr	r6, [pc, #60]	@ (800b000 <sbrk_aligned+0x40>)
 800afc4:	460c      	mov	r4, r1
 800afc6:	6831      	ldr	r1, [r6, #0]
 800afc8:	4605      	mov	r5, r0
 800afca:	b911      	cbnz	r1, 800afd2 <sbrk_aligned+0x12>
 800afcc:	f001 f918 	bl	800c200 <_sbrk_r>
 800afd0:	6030      	str	r0, [r6, #0]
 800afd2:	4621      	mov	r1, r4
 800afd4:	4628      	mov	r0, r5
 800afd6:	f001 f913 	bl	800c200 <_sbrk_r>
 800afda:	1c43      	adds	r3, r0, #1
 800afdc:	d103      	bne.n	800afe6 <sbrk_aligned+0x26>
 800afde:	f04f 34ff 	mov.w	r4, #4294967295
 800afe2:	4620      	mov	r0, r4
 800afe4:	bd70      	pop	{r4, r5, r6, pc}
 800afe6:	1cc4      	adds	r4, r0, #3
 800afe8:	f024 0403 	bic.w	r4, r4, #3
 800afec:	42a0      	cmp	r0, r4
 800afee:	d0f8      	beq.n	800afe2 <sbrk_aligned+0x22>
 800aff0:	1a21      	subs	r1, r4, r0
 800aff2:	4628      	mov	r0, r5
 800aff4:	f001 f904 	bl	800c200 <_sbrk_r>
 800aff8:	3001      	adds	r0, #1
 800affa:	d1f2      	bne.n	800afe2 <sbrk_aligned+0x22>
 800affc:	e7ef      	b.n	800afde <sbrk_aligned+0x1e>
 800affe:	bf00      	nop
 800b000:	200052a0 	.word	0x200052a0

0800b004 <_malloc_r>:
 800b004:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b008:	1ccd      	adds	r5, r1, #3
 800b00a:	f025 0503 	bic.w	r5, r5, #3
 800b00e:	3508      	adds	r5, #8
 800b010:	2d0c      	cmp	r5, #12
 800b012:	bf38      	it	cc
 800b014:	250c      	movcc	r5, #12
 800b016:	2d00      	cmp	r5, #0
 800b018:	4606      	mov	r6, r0
 800b01a:	db01      	blt.n	800b020 <_malloc_r+0x1c>
 800b01c:	42a9      	cmp	r1, r5
 800b01e:	d904      	bls.n	800b02a <_malloc_r+0x26>
 800b020:	230c      	movs	r3, #12
 800b022:	6033      	str	r3, [r6, #0]
 800b024:	2000      	movs	r0, #0
 800b026:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b02a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800b100 <_malloc_r+0xfc>
 800b02e:	f000 f87b 	bl	800b128 <__malloc_lock>
 800b032:	f8d8 3000 	ldr.w	r3, [r8]
 800b036:	461c      	mov	r4, r3
 800b038:	bb44      	cbnz	r4, 800b08c <_malloc_r+0x88>
 800b03a:	4629      	mov	r1, r5
 800b03c:	4630      	mov	r0, r6
 800b03e:	f7ff ffbf 	bl	800afc0 <sbrk_aligned>
 800b042:	1c43      	adds	r3, r0, #1
 800b044:	4604      	mov	r4, r0
 800b046:	d158      	bne.n	800b0fa <_malloc_r+0xf6>
 800b048:	f8d8 4000 	ldr.w	r4, [r8]
 800b04c:	4627      	mov	r7, r4
 800b04e:	2f00      	cmp	r7, #0
 800b050:	d143      	bne.n	800b0da <_malloc_r+0xd6>
 800b052:	2c00      	cmp	r4, #0
 800b054:	d04b      	beq.n	800b0ee <_malloc_r+0xea>
 800b056:	6823      	ldr	r3, [r4, #0]
 800b058:	4639      	mov	r1, r7
 800b05a:	4630      	mov	r0, r6
 800b05c:	eb04 0903 	add.w	r9, r4, r3
 800b060:	f001 f8ce 	bl	800c200 <_sbrk_r>
 800b064:	4581      	cmp	r9, r0
 800b066:	d142      	bne.n	800b0ee <_malloc_r+0xea>
 800b068:	6821      	ldr	r1, [r4, #0]
 800b06a:	1a6d      	subs	r5, r5, r1
 800b06c:	4629      	mov	r1, r5
 800b06e:	4630      	mov	r0, r6
 800b070:	f7ff ffa6 	bl	800afc0 <sbrk_aligned>
 800b074:	3001      	adds	r0, #1
 800b076:	d03a      	beq.n	800b0ee <_malloc_r+0xea>
 800b078:	6823      	ldr	r3, [r4, #0]
 800b07a:	442b      	add	r3, r5
 800b07c:	6023      	str	r3, [r4, #0]
 800b07e:	f8d8 3000 	ldr.w	r3, [r8]
 800b082:	685a      	ldr	r2, [r3, #4]
 800b084:	bb62      	cbnz	r2, 800b0e0 <_malloc_r+0xdc>
 800b086:	f8c8 7000 	str.w	r7, [r8]
 800b08a:	e00f      	b.n	800b0ac <_malloc_r+0xa8>
 800b08c:	6822      	ldr	r2, [r4, #0]
 800b08e:	1b52      	subs	r2, r2, r5
 800b090:	d420      	bmi.n	800b0d4 <_malloc_r+0xd0>
 800b092:	2a0b      	cmp	r2, #11
 800b094:	d917      	bls.n	800b0c6 <_malloc_r+0xc2>
 800b096:	1961      	adds	r1, r4, r5
 800b098:	42a3      	cmp	r3, r4
 800b09a:	6025      	str	r5, [r4, #0]
 800b09c:	bf18      	it	ne
 800b09e:	6059      	strne	r1, [r3, #4]
 800b0a0:	6863      	ldr	r3, [r4, #4]
 800b0a2:	bf08      	it	eq
 800b0a4:	f8c8 1000 	streq.w	r1, [r8]
 800b0a8:	5162      	str	r2, [r4, r5]
 800b0aa:	604b      	str	r3, [r1, #4]
 800b0ac:	4630      	mov	r0, r6
 800b0ae:	f000 f841 	bl	800b134 <__malloc_unlock>
 800b0b2:	f104 000b 	add.w	r0, r4, #11
 800b0b6:	1d23      	adds	r3, r4, #4
 800b0b8:	f020 0007 	bic.w	r0, r0, #7
 800b0bc:	1ac2      	subs	r2, r0, r3
 800b0be:	bf1c      	itt	ne
 800b0c0:	1a1b      	subne	r3, r3, r0
 800b0c2:	50a3      	strne	r3, [r4, r2]
 800b0c4:	e7af      	b.n	800b026 <_malloc_r+0x22>
 800b0c6:	6862      	ldr	r2, [r4, #4]
 800b0c8:	42a3      	cmp	r3, r4
 800b0ca:	bf0c      	ite	eq
 800b0cc:	f8c8 2000 	streq.w	r2, [r8]
 800b0d0:	605a      	strne	r2, [r3, #4]
 800b0d2:	e7eb      	b.n	800b0ac <_malloc_r+0xa8>
 800b0d4:	4623      	mov	r3, r4
 800b0d6:	6864      	ldr	r4, [r4, #4]
 800b0d8:	e7ae      	b.n	800b038 <_malloc_r+0x34>
 800b0da:	463c      	mov	r4, r7
 800b0dc:	687f      	ldr	r7, [r7, #4]
 800b0de:	e7b6      	b.n	800b04e <_malloc_r+0x4a>
 800b0e0:	461a      	mov	r2, r3
 800b0e2:	685b      	ldr	r3, [r3, #4]
 800b0e4:	42a3      	cmp	r3, r4
 800b0e6:	d1fb      	bne.n	800b0e0 <_malloc_r+0xdc>
 800b0e8:	2300      	movs	r3, #0
 800b0ea:	6053      	str	r3, [r2, #4]
 800b0ec:	e7de      	b.n	800b0ac <_malloc_r+0xa8>
 800b0ee:	230c      	movs	r3, #12
 800b0f0:	6033      	str	r3, [r6, #0]
 800b0f2:	4630      	mov	r0, r6
 800b0f4:	f000 f81e 	bl	800b134 <__malloc_unlock>
 800b0f8:	e794      	b.n	800b024 <_malloc_r+0x20>
 800b0fa:	6005      	str	r5, [r0, #0]
 800b0fc:	e7d6      	b.n	800b0ac <_malloc_r+0xa8>
 800b0fe:	bf00      	nop
 800b100:	200052a4 	.word	0x200052a4

0800b104 <__ascii_mbtowc>:
 800b104:	b082      	sub	sp, #8
 800b106:	b901      	cbnz	r1, 800b10a <__ascii_mbtowc+0x6>
 800b108:	a901      	add	r1, sp, #4
 800b10a:	b142      	cbz	r2, 800b11e <__ascii_mbtowc+0x1a>
 800b10c:	b14b      	cbz	r3, 800b122 <__ascii_mbtowc+0x1e>
 800b10e:	7813      	ldrb	r3, [r2, #0]
 800b110:	600b      	str	r3, [r1, #0]
 800b112:	7812      	ldrb	r2, [r2, #0]
 800b114:	1e10      	subs	r0, r2, #0
 800b116:	bf18      	it	ne
 800b118:	2001      	movne	r0, #1
 800b11a:	b002      	add	sp, #8
 800b11c:	4770      	bx	lr
 800b11e:	4610      	mov	r0, r2
 800b120:	e7fb      	b.n	800b11a <__ascii_mbtowc+0x16>
 800b122:	f06f 0001 	mvn.w	r0, #1
 800b126:	e7f8      	b.n	800b11a <__ascii_mbtowc+0x16>

0800b128 <__malloc_lock>:
 800b128:	4801      	ldr	r0, [pc, #4]	@ (800b130 <__malloc_lock+0x8>)
 800b12a:	f7ff bbaa 	b.w	800a882 <__retarget_lock_acquire_recursive>
 800b12e:	bf00      	nop
 800b130:	2000529c 	.word	0x2000529c

0800b134 <__malloc_unlock>:
 800b134:	4801      	ldr	r0, [pc, #4]	@ (800b13c <__malloc_unlock+0x8>)
 800b136:	f7ff bba5 	b.w	800a884 <__retarget_lock_release_recursive>
 800b13a:	bf00      	nop
 800b13c:	2000529c 	.word	0x2000529c

0800b140 <_Balloc>:
 800b140:	b570      	push	{r4, r5, r6, lr}
 800b142:	69c6      	ldr	r6, [r0, #28]
 800b144:	4604      	mov	r4, r0
 800b146:	460d      	mov	r5, r1
 800b148:	b976      	cbnz	r6, 800b168 <_Balloc+0x28>
 800b14a:	2010      	movs	r0, #16
 800b14c:	f001 f89a 	bl	800c284 <malloc>
 800b150:	4602      	mov	r2, r0
 800b152:	61e0      	str	r0, [r4, #28]
 800b154:	b920      	cbnz	r0, 800b160 <_Balloc+0x20>
 800b156:	4b18      	ldr	r3, [pc, #96]	@ (800b1b8 <_Balloc+0x78>)
 800b158:	4818      	ldr	r0, [pc, #96]	@ (800b1bc <_Balloc+0x7c>)
 800b15a:	216b      	movs	r1, #107	@ 0x6b
 800b15c:	f001 f860 	bl	800c220 <__assert_func>
 800b160:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b164:	6006      	str	r6, [r0, #0]
 800b166:	60c6      	str	r6, [r0, #12]
 800b168:	69e6      	ldr	r6, [r4, #28]
 800b16a:	68f3      	ldr	r3, [r6, #12]
 800b16c:	b183      	cbz	r3, 800b190 <_Balloc+0x50>
 800b16e:	69e3      	ldr	r3, [r4, #28]
 800b170:	68db      	ldr	r3, [r3, #12]
 800b172:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800b176:	b9b8      	cbnz	r0, 800b1a8 <_Balloc+0x68>
 800b178:	2101      	movs	r1, #1
 800b17a:	fa01 f605 	lsl.w	r6, r1, r5
 800b17e:	1d72      	adds	r2, r6, #5
 800b180:	0092      	lsls	r2, r2, #2
 800b182:	4620      	mov	r0, r4
 800b184:	f001 f86a 	bl	800c25c <_calloc_r>
 800b188:	b160      	cbz	r0, 800b1a4 <_Balloc+0x64>
 800b18a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800b18e:	e00e      	b.n	800b1ae <_Balloc+0x6e>
 800b190:	2221      	movs	r2, #33	@ 0x21
 800b192:	2104      	movs	r1, #4
 800b194:	4620      	mov	r0, r4
 800b196:	f001 f861 	bl	800c25c <_calloc_r>
 800b19a:	69e3      	ldr	r3, [r4, #28]
 800b19c:	60f0      	str	r0, [r6, #12]
 800b19e:	68db      	ldr	r3, [r3, #12]
 800b1a0:	2b00      	cmp	r3, #0
 800b1a2:	d1e4      	bne.n	800b16e <_Balloc+0x2e>
 800b1a4:	2000      	movs	r0, #0
 800b1a6:	bd70      	pop	{r4, r5, r6, pc}
 800b1a8:	6802      	ldr	r2, [r0, #0]
 800b1aa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b1ae:	2300      	movs	r3, #0
 800b1b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800b1b4:	e7f7      	b.n	800b1a6 <_Balloc+0x66>
 800b1b6:	bf00      	nop
 800b1b8:	0800ca7b 	.word	0x0800ca7b
 800b1bc:	0800ca92 	.word	0x0800ca92

0800b1c0 <_Bfree>:
 800b1c0:	b570      	push	{r4, r5, r6, lr}
 800b1c2:	69c6      	ldr	r6, [r0, #28]
 800b1c4:	4605      	mov	r5, r0
 800b1c6:	460c      	mov	r4, r1
 800b1c8:	b976      	cbnz	r6, 800b1e8 <_Bfree+0x28>
 800b1ca:	2010      	movs	r0, #16
 800b1cc:	f001 f85a 	bl	800c284 <malloc>
 800b1d0:	4602      	mov	r2, r0
 800b1d2:	61e8      	str	r0, [r5, #28]
 800b1d4:	b920      	cbnz	r0, 800b1e0 <_Bfree+0x20>
 800b1d6:	4b09      	ldr	r3, [pc, #36]	@ (800b1fc <_Bfree+0x3c>)
 800b1d8:	4809      	ldr	r0, [pc, #36]	@ (800b200 <_Bfree+0x40>)
 800b1da:	218f      	movs	r1, #143	@ 0x8f
 800b1dc:	f001 f820 	bl	800c220 <__assert_func>
 800b1e0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b1e4:	6006      	str	r6, [r0, #0]
 800b1e6:	60c6      	str	r6, [r0, #12]
 800b1e8:	b13c      	cbz	r4, 800b1fa <_Bfree+0x3a>
 800b1ea:	69eb      	ldr	r3, [r5, #28]
 800b1ec:	6862      	ldr	r2, [r4, #4]
 800b1ee:	68db      	ldr	r3, [r3, #12]
 800b1f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b1f4:	6021      	str	r1, [r4, #0]
 800b1f6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800b1fa:	bd70      	pop	{r4, r5, r6, pc}
 800b1fc:	0800ca7b 	.word	0x0800ca7b
 800b200:	0800ca92 	.word	0x0800ca92

0800b204 <__multadd>:
 800b204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b208:	690d      	ldr	r5, [r1, #16]
 800b20a:	4607      	mov	r7, r0
 800b20c:	460c      	mov	r4, r1
 800b20e:	461e      	mov	r6, r3
 800b210:	f101 0c14 	add.w	ip, r1, #20
 800b214:	2000      	movs	r0, #0
 800b216:	f8dc 3000 	ldr.w	r3, [ip]
 800b21a:	b299      	uxth	r1, r3
 800b21c:	fb02 6101 	mla	r1, r2, r1, r6
 800b220:	0c1e      	lsrs	r6, r3, #16
 800b222:	0c0b      	lsrs	r3, r1, #16
 800b224:	fb02 3306 	mla	r3, r2, r6, r3
 800b228:	b289      	uxth	r1, r1
 800b22a:	3001      	adds	r0, #1
 800b22c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800b230:	4285      	cmp	r5, r0
 800b232:	f84c 1b04 	str.w	r1, [ip], #4
 800b236:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800b23a:	dcec      	bgt.n	800b216 <__multadd+0x12>
 800b23c:	b30e      	cbz	r6, 800b282 <__multadd+0x7e>
 800b23e:	68a3      	ldr	r3, [r4, #8]
 800b240:	42ab      	cmp	r3, r5
 800b242:	dc19      	bgt.n	800b278 <__multadd+0x74>
 800b244:	6861      	ldr	r1, [r4, #4]
 800b246:	4638      	mov	r0, r7
 800b248:	3101      	adds	r1, #1
 800b24a:	f7ff ff79 	bl	800b140 <_Balloc>
 800b24e:	4680      	mov	r8, r0
 800b250:	b928      	cbnz	r0, 800b25e <__multadd+0x5a>
 800b252:	4602      	mov	r2, r0
 800b254:	4b0c      	ldr	r3, [pc, #48]	@ (800b288 <__multadd+0x84>)
 800b256:	480d      	ldr	r0, [pc, #52]	@ (800b28c <__multadd+0x88>)
 800b258:	21ba      	movs	r1, #186	@ 0xba
 800b25a:	f000 ffe1 	bl	800c220 <__assert_func>
 800b25e:	6922      	ldr	r2, [r4, #16]
 800b260:	3202      	adds	r2, #2
 800b262:	f104 010c 	add.w	r1, r4, #12
 800b266:	0092      	lsls	r2, r2, #2
 800b268:	300c      	adds	r0, #12
 800b26a:	f7ff fb0c 	bl	800a886 <memcpy>
 800b26e:	4621      	mov	r1, r4
 800b270:	4638      	mov	r0, r7
 800b272:	f7ff ffa5 	bl	800b1c0 <_Bfree>
 800b276:	4644      	mov	r4, r8
 800b278:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800b27c:	3501      	adds	r5, #1
 800b27e:	615e      	str	r6, [r3, #20]
 800b280:	6125      	str	r5, [r4, #16]
 800b282:	4620      	mov	r0, r4
 800b284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b288:	0800ca0a 	.word	0x0800ca0a
 800b28c:	0800ca92 	.word	0x0800ca92

0800b290 <__s2b>:
 800b290:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b294:	460c      	mov	r4, r1
 800b296:	4615      	mov	r5, r2
 800b298:	461f      	mov	r7, r3
 800b29a:	2209      	movs	r2, #9
 800b29c:	3308      	adds	r3, #8
 800b29e:	4606      	mov	r6, r0
 800b2a0:	fb93 f3f2 	sdiv	r3, r3, r2
 800b2a4:	2100      	movs	r1, #0
 800b2a6:	2201      	movs	r2, #1
 800b2a8:	429a      	cmp	r2, r3
 800b2aa:	db09      	blt.n	800b2c0 <__s2b+0x30>
 800b2ac:	4630      	mov	r0, r6
 800b2ae:	f7ff ff47 	bl	800b140 <_Balloc>
 800b2b2:	b940      	cbnz	r0, 800b2c6 <__s2b+0x36>
 800b2b4:	4602      	mov	r2, r0
 800b2b6:	4b19      	ldr	r3, [pc, #100]	@ (800b31c <__s2b+0x8c>)
 800b2b8:	4819      	ldr	r0, [pc, #100]	@ (800b320 <__s2b+0x90>)
 800b2ba:	21d3      	movs	r1, #211	@ 0xd3
 800b2bc:	f000 ffb0 	bl	800c220 <__assert_func>
 800b2c0:	0052      	lsls	r2, r2, #1
 800b2c2:	3101      	adds	r1, #1
 800b2c4:	e7f0      	b.n	800b2a8 <__s2b+0x18>
 800b2c6:	9b08      	ldr	r3, [sp, #32]
 800b2c8:	6143      	str	r3, [r0, #20]
 800b2ca:	2d09      	cmp	r5, #9
 800b2cc:	f04f 0301 	mov.w	r3, #1
 800b2d0:	6103      	str	r3, [r0, #16]
 800b2d2:	dd16      	ble.n	800b302 <__s2b+0x72>
 800b2d4:	f104 0909 	add.w	r9, r4, #9
 800b2d8:	46c8      	mov	r8, r9
 800b2da:	442c      	add	r4, r5
 800b2dc:	f818 3b01 	ldrb.w	r3, [r8], #1
 800b2e0:	4601      	mov	r1, r0
 800b2e2:	3b30      	subs	r3, #48	@ 0x30
 800b2e4:	220a      	movs	r2, #10
 800b2e6:	4630      	mov	r0, r6
 800b2e8:	f7ff ff8c 	bl	800b204 <__multadd>
 800b2ec:	45a0      	cmp	r8, r4
 800b2ee:	d1f5      	bne.n	800b2dc <__s2b+0x4c>
 800b2f0:	f1a5 0408 	sub.w	r4, r5, #8
 800b2f4:	444c      	add	r4, r9
 800b2f6:	1b2d      	subs	r5, r5, r4
 800b2f8:	1963      	adds	r3, r4, r5
 800b2fa:	42bb      	cmp	r3, r7
 800b2fc:	db04      	blt.n	800b308 <__s2b+0x78>
 800b2fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b302:	340a      	adds	r4, #10
 800b304:	2509      	movs	r5, #9
 800b306:	e7f6      	b.n	800b2f6 <__s2b+0x66>
 800b308:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b30c:	4601      	mov	r1, r0
 800b30e:	3b30      	subs	r3, #48	@ 0x30
 800b310:	220a      	movs	r2, #10
 800b312:	4630      	mov	r0, r6
 800b314:	f7ff ff76 	bl	800b204 <__multadd>
 800b318:	e7ee      	b.n	800b2f8 <__s2b+0x68>
 800b31a:	bf00      	nop
 800b31c:	0800ca0a 	.word	0x0800ca0a
 800b320:	0800ca92 	.word	0x0800ca92

0800b324 <__hi0bits>:
 800b324:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800b328:	4603      	mov	r3, r0
 800b32a:	bf36      	itet	cc
 800b32c:	0403      	lslcc	r3, r0, #16
 800b32e:	2000      	movcs	r0, #0
 800b330:	2010      	movcc	r0, #16
 800b332:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800b336:	bf3c      	itt	cc
 800b338:	021b      	lslcc	r3, r3, #8
 800b33a:	3008      	addcc	r0, #8
 800b33c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800b340:	bf3c      	itt	cc
 800b342:	011b      	lslcc	r3, r3, #4
 800b344:	3004      	addcc	r0, #4
 800b346:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800b34a:	bf3c      	itt	cc
 800b34c:	009b      	lslcc	r3, r3, #2
 800b34e:	3002      	addcc	r0, #2
 800b350:	2b00      	cmp	r3, #0
 800b352:	db05      	blt.n	800b360 <__hi0bits+0x3c>
 800b354:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800b358:	f100 0001 	add.w	r0, r0, #1
 800b35c:	bf08      	it	eq
 800b35e:	2020      	moveq	r0, #32
 800b360:	4770      	bx	lr

0800b362 <__lo0bits>:
 800b362:	6803      	ldr	r3, [r0, #0]
 800b364:	4602      	mov	r2, r0
 800b366:	f013 0007 	ands.w	r0, r3, #7
 800b36a:	d00b      	beq.n	800b384 <__lo0bits+0x22>
 800b36c:	07d9      	lsls	r1, r3, #31
 800b36e:	d421      	bmi.n	800b3b4 <__lo0bits+0x52>
 800b370:	0798      	lsls	r0, r3, #30
 800b372:	bf49      	itett	mi
 800b374:	085b      	lsrmi	r3, r3, #1
 800b376:	089b      	lsrpl	r3, r3, #2
 800b378:	2001      	movmi	r0, #1
 800b37a:	6013      	strmi	r3, [r2, #0]
 800b37c:	bf5c      	itt	pl
 800b37e:	6013      	strpl	r3, [r2, #0]
 800b380:	2002      	movpl	r0, #2
 800b382:	4770      	bx	lr
 800b384:	b299      	uxth	r1, r3
 800b386:	b909      	cbnz	r1, 800b38c <__lo0bits+0x2a>
 800b388:	0c1b      	lsrs	r3, r3, #16
 800b38a:	2010      	movs	r0, #16
 800b38c:	b2d9      	uxtb	r1, r3
 800b38e:	b909      	cbnz	r1, 800b394 <__lo0bits+0x32>
 800b390:	3008      	adds	r0, #8
 800b392:	0a1b      	lsrs	r3, r3, #8
 800b394:	0719      	lsls	r1, r3, #28
 800b396:	bf04      	itt	eq
 800b398:	091b      	lsreq	r3, r3, #4
 800b39a:	3004      	addeq	r0, #4
 800b39c:	0799      	lsls	r1, r3, #30
 800b39e:	bf04      	itt	eq
 800b3a0:	089b      	lsreq	r3, r3, #2
 800b3a2:	3002      	addeq	r0, #2
 800b3a4:	07d9      	lsls	r1, r3, #31
 800b3a6:	d403      	bmi.n	800b3b0 <__lo0bits+0x4e>
 800b3a8:	085b      	lsrs	r3, r3, #1
 800b3aa:	f100 0001 	add.w	r0, r0, #1
 800b3ae:	d003      	beq.n	800b3b8 <__lo0bits+0x56>
 800b3b0:	6013      	str	r3, [r2, #0]
 800b3b2:	4770      	bx	lr
 800b3b4:	2000      	movs	r0, #0
 800b3b6:	4770      	bx	lr
 800b3b8:	2020      	movs	r0, #32
 800b3ba:	4770      	bx	lr

0800b3bc <__i2b>:
 800b3bc:	b510      	push	{r4, lr}
 800b3be:	460c      	mov	r4, r1
 800b3c0:	2101      	movs	r1, #1
 800b3c2:	f7ff febd 	bl	800b140 <_Balloc>
 800b3c6:	4602      	mov	r2, r0
 800b3c8:	b928      	cbnz	r0, 800b3d6 <__i2b+0x1a>
 800b3ca:	4b05      	ldr	r3, [pc, #20]	@ (800b3e0 <__i2b+0x24>)
 800b3cc:	4805      	ldr	r0, [pc, #20]	@ (800b3e4 <__i2b+0x28>)
 800b3ce:	f240 1145 	movw	r1, #325	@ 0x145
 800b3d2:	f000 ff25 	bl	800c220 <__assert_func>
 800b3d6:	2301      	movs	r3, #1
 800b3d8:	6144      	str	r4, [r0, #20]
 800b3da:	6103      	str	r3, [r0, #16]
 800b3dc:	bd10      	pop	{r4, pc}
 800b3de:	bf00      	nop
 800b3e0:	0800ca0a 	.word	0x0800ca0a
 800b3e4:	0800ca92 	.word	0x0800ca92

0800b3e8 <__multiply>:
 800b3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3ec:	4617      	mov	r7, r2
 800b3ee:	690a      	ldr	r2, [r1, #16]
 800b3f0:	693b      	ldr	r3, [r7, #16]
 800b3f2:	429a      	cmp	r2, r3
 800b3f4:	bfa8      	it	ge
 800b3f6:	463b      	movge	r3, r7
 800b3f8:	4689      	mov	r9, r1
 800b3fa:	bfa4      	itt	ge
 800b3fc:	460f      	movge	r7, r1
 800b3fe:	4699      	movge	r9, r3
 800b400:	693d      	ldr	r5, [r7, #16]
 800b402:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800b406:	68bb      	ldr	r3, [r7, #8]
 800b408:	6879      	ldr	r1, [r7, #4]
 800b40a:	eb05 060a 	add.w	r6, r5, sl
 800b40e:	42b3      	cmp	r3, r6
 800b410:	b085      	sub	sp, #20
 800b412:	bfb8      	it	lt
 800b414:	3101      	addlt	r1, #1
 800b416:	f7ff fe93 	bl	800b140 <_Balloc>
 800b41a:	b930      	cbnz	r0, 800b42a <__multiply+0x42>
 800b41c:	4602      	mov	r2, r0
 800b41e:	4b41      	ldr	r3, [pc, #260]	@ (800b524 <__multiply+0x13c>)
 800b420:	4841      	ldr	r0, [pc, #260]	@ (800b528 <__multiply+0x140>)
 800b422:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800b426:	f000 fefb 	bl	800c220 <__assert_func>
 800b42a:	f100 0414 	add.w	r4, r0, #20
 800b42e:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800b432:	4623      	mov	r3, r4
 800b434:	2200      	movs	r2, #0
 800b436:	4573      	cmp	r3, lr
 800b438:	d320      	bcc.n	800b47c <__multiply+0x94>
 800b43a:	f107 0814 	add.w	r8, r7, #20
 800b43e:	f109 0114 	add.w	r1, r9, #20
 800b442:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800b446:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800b44a:	9302      	str	r3, [sp, #8]
 800b44c:	1beb      	subs	r3, r5, r7
 800b44e:	3b15      	subs	r3, #21
 800b450:	f023 0303 	bic.w	r3, r3, #3
 800b454:	3304      	adds	r3, #4
 800b456:	3715      	adds	r7, #21
 800b458:	42bd      	cmp	r5, r7
 800b45a:	bf38      	it	cc
 800b45c:	2304      	movcc	r3, #4
 800b45e:	9301      	str	r3, [sp, #4]
 800b460:	9b02      	ldr	r3, [sp, #8]
 800b462:	9103      	str	r1, [sp, #12]
 800b464:	428b      	cmp	r3, r1
 800b466:	d80c      	bhi.n	800b482 <__multiply+0x9a>
 800b468:	2e00      	cmp	r6, #0
 800b46a:	dd03      	ble.n	800b474 <__multiply+0x8c>
 800b46c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800b470:	2b00      	cmp	r3, #0
 800b472:	d055      	beq.n	800b520 <__multiply+0x138>
 800b474:	6106      	str	r6, [r0, #16]
 800b476:	b005      	add	sp, #20
 800b478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b47c:	f843 2b04 	str.w	r2, [r3], #4
 800b480:	e7d9      	b.n	800b436 <__multiply+0x4e>
 800b482:	f8b1 a000 	ldrh.w	sl, [r1]
 800b486:	f1ba 0f00 	cmp.w	sl, #0
 800b48a:	d01f      	beq.n	800b4cc <__multiply+0xe4>
 800b48c:	46c4      	mov	ip, r8
 800b48e:	46a1      	mov	r9, r4
 800b490:	2700      	movs	r7, #0
 800b492:	f85c 2b04 	ldr.w	r2, [ip], #4
 800b496:	f8d9 3000 	ldr.w	r3, [r9]
 800b49a:	fa1f fb82 	uxth.w	fp, r2
 800b49e:	b29b      	uxth	r3, r3
 800b4a0:	fb0a 330b 	mla	r3, sl, fp, r3
 800b4a4:	443b      	add	r3, r7
 800b4a6:	f8d9 7000 	ldr.w	r7, [r9]
 800b4aa:	0c12      	lsrs	r2, r2, #16
 800b4ac:	0c3f      	lsrs	r7, r7, #16
 800b4ae:	fb0a 7202 	mla	r2, sl, r2, r7
 800b4b2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800b4b6:	b29b      	uxth	r3, r3
 800b4b8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b4bc:	4565      	cmp	r5, ip
 800b4be:	f849 3b04 	str.w	r3, [r9], #4
 800b4c2:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800b4c6:	d8e4      	bhi.n	800b492 <__multiply+0xaa>
 800b4c8:	9b01      	ldr	r3, [sp, #4]
 800b4ca:	50e7      	str	r7, [r4, r3]
 800b4cc:	9b03      	ldr	r3, [sp, #12]
 800b4ce:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800b4d2:	3104      	adds	r1, #4
 800b4d4:	f1b9 0f00 	cmp.w	r9, #0
 800b4d8:	d020      	beq.n	800b51c <__multiply+0x134>
 800b4da:	6823      	ldr	r3, [r4, #0]
 800b4dc:	4647      	mov	r7, r8
 800b4de:	46a4      	mov	ip, r4
 800b4e0:	f04f 0a00 	mov.w	sl, #0
 800b4e4:	f8b7 b000 	ldrh.w	fp, [r7]
 800b4e8:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800b4ec:	fb09 220b 	mla	r2, r9, fp, r2
 800b4f0:	4452      	add	r2, sl
 800b4f2:	b29b      	uxth	r3, r3
 800b4f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b4f8:	f84c 3b04 	str.w	r3, [ip], #4
 800b4fc:	f857 3b04 	ldr.w	r3, [r7], #4
 800b500:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800b504:	f8bc 3000 	ldrh.w	r3, [ip]
 800b508:	fb09 330a 	mla	r3, r9, sl, r3
 800b50c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800b510:	42bd      	cmp	r5, r7
 800b512:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800b516:	d8e5      	bhi.n	800b4e4 <__multiply+0xfc>
 800b518:	9a01      	ldr	r2, [sp, #4]
 800b51a:	50a3      	str	r3, [r4, r2]
 800b51c:	3404      	adds	r4, #4
 800b51e:	e79f      	b.n	800b460 <__multiply+0x78>
 800b520:	3e01      	subs	r6, #1
 800b522:	e7a1      	b.n	800b468 <__multiply+0x80>
 800b524:	0800ca0a 	.word	0x0800ca0a
 800b528:	0800ca92 	.word	0x0800ca92

0800b52c <__pow5mult>:
 800b52c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b530:	4615      	mov	r5, r2
 800b532:	f012 0203 	ands.w	r2, r2, #3
 800b536:	4607      	mov	r7, r0
 800b538:	460e      	mov	r6, r1
 800b53a:	d007      	beq.n	800b54c <__pow5mult+0x20>
 800b53c:	4c25      	ldr	r4, [pc, #148]	@ (800b5d4 <__pow5mult+0xa8>)
 800b53e:	3a01      	subs	r2, #1
 800b540:	2300      	movs	r3, #0
 800b542:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800b546:	f7ff fe5d 	bl	800b204 <__multadd>
 800b54a:	4606      	mov	r6, r0
 800b54c:	10ad      	asrs	r5, r5, #2
 800b54e:	d03d      	beq.n	800b5cc <__pow5mult+0xa0>
 800b550:	69fc      	ldr	r4, [r7, #28]
 800b552:	b97c      	cbnz	r4, 800b574 <__pow5mult+0x48>
 800b554:	2010      	movs	r0, #16
 800b556:	f000 fe95 	bl	800c284 <malloc>
 800b55a:	4602      	mov	r2, r0
 800b55c:	61f8      	str	r0, [r7, #28]
 800b55e:	b928      	cbnz	r0, 800b56c <__pow5mult+0x40>
 800b560:	4b1d      	ldr	r3, [pc, #116]	@ (800b5d8 <__pow5mult+0xac>)
 800b562:	481e      	ldr	r0, [pc, #120]	@ (800b5dc <__pow5mult+0xb0>)
 800b564:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800b568:	f000 fe5a 	bl	800c220 <__assert_func>
 800b56c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b570:	6004      	str	r4, [r0, #0]
 800b572:	60c4      	str	r4, [r0, #12]
 800b574:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800b578:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b57c:	b94c      	cbnz	r4, 800b592 <__pow5mult+0x66>
 800b57e:	f240 2171 	movw	r1, #625	@ 0x271
 800b582:	4638      	mov	r0, r7
 800b584:	f7ff ff1a 	bl	800b3bc <__i2b>
 800b588:	2300      	movs	r3, #0
 800b58a:	f8c8 0008 	str.w	r0, [r8, #8]
 800b58e:	4604      	mov	r4, r0
 800b590:	6003      	str	r3, [r0, #0]
 800b592:	f04f 0900 	mov.w	r9, #0
 800b596:	07eb      	lsls	r3, r5, #31
 800b598:	d50a      	bpl.n	800b5b0 <__pow5mult+0x84>
 800b59a:	4631      	mov	r1, r6
 800b59c:	4622      	mov	r2, r4
 800b59e:	4638      	mov	r0, r7
 800b5a0:	f7ff ff22 	bl	800b3e8 <__multiply>
 800b5a4:	4631      	mov	r1, r6
 800b5a6:	4680      	mov	r8, r0
 800b5a8:	4638      	mov	r0, r7
 800b5aa:	f7ff fe09 	bl	800b1c0 <_Bfree>
 800b5ae:	4646      	mov	r6, r8
 800b5b0:	106d      	asrs	r5, r5, #1
 800b5b2:	d00b      	beq.n	800b5cc <__pow5mult+0xa0>
 800b5b4:	6820      	ldr	r0, [r4, #0]
 800b5b6:	b938      	cbnz	r0, 800b5c8 <__pow5mult+0x9c>
 800b5b8:	4622      	mov	r2, r4
 800b5ba:	4621      	mov	r1, r4
 800b5bc:	4638      	mov	r0, r7
 800b5be:	f7ff ff13 	bl	800b3e8 <__multiply>
 800b5c2:	6020      	str	r0, [r4, #0]
 800b5c4:	f8c0 9000 	str.w	r9, [r0]
 800b5c8:	4604      	mov	r4, r0
 800b5ca:	e7e4      	b.n	800b596 <__pow5mult+0x6a>
 800b5cc:	4630      	mov	r0, r6
 800b5ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b5d2:	bf00      	nop
 800b5d4:	0800ccb4 	.word	0x0800ccb4
 800b5d8:	0800ca7b 	.word	0x0800ca7b
 800b5dc:	0800ca92 	.word	0x0800ca92

0800b5e0 <__lshift>:
 800b5e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b5e4:	460c      	mov	r4, r1
 800b5e6:	6849      	ldr	r1, [r1, #4]
 800b5e8:	6923      	ldr	r3, [r4, #16]
 800b5ea:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b5ee:	68a3      	ldr	r3, [r4, #8]
 800b5f0:	4607      	mov	r7, r0
 800b5f2:	4691      	mov	r9, r2
 800b5f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b5f8:	f108 0601 	add.w	r6, r8, #1
 800b5fc:	42b3      	cmp	r3, r6
 800b5fe:	db0b      	blt.n	800b618 <__lshift+0x38>
 800b600:	4638      	mov	r0, r7
 800b602:	f7ff fd9d 	bl	800b140 <_Balloc>
 800b606:	4605      	mov	r5, r0
 800b608:	b948      	cbnz	r0, 800b61e <__lshift+0x3e>
 800b60a:	4602      	mov	r2, r0
 800b60c:	4b28      	ldr	r3, [pc, #160]	@ (800b6b0 <__lshift+0xd0>)
 800b60e:	4829      	ldr	r0, [pc, #164]	@ (800b6b4 <__lshift+0xd4>)
 800b610:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800b614:	f000 fe04 	bl	800c220 <__assert_func>
 800b618:	3101      	adds	r1, #1
 800b61a:	005b      	lsls	r3, r3, #1
 800b61c:	e7ee      	b.n	800b5fc <__lshift+0x1c>
 800b61e:	2300      	movs	r3, #0
 800b620:	f100 0114 	add.w	r1, r0, #20
 800b624:	f100 0210 	add.w	r2, r0, #16
 800b628:	4618      	mov	r0, r3
 800b62a:	4553      	cmp	r3, sl
 800b62c:	db33      	blt.n	800b696 <__lshift+0xb6>
 800b62e:	6920      	ldr	r0, [r4, #16]
 800b630:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b634:	f104 0314 	add.w	r3, r4, #20
 800b638:	f019 091f 	ands.w	r9, r9, #31
 800b63c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b640:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800b644:	d02b      	beq.n	800b69e <__lshift+0xbe>
 800b646:	f1c9 0e20 	rsb	lr, r9, #32
 800b64a:	468a      	mov	sl, r1
 800b64c:	2200      	movs	r2, #0
 800b64e:	6818      	ldr	r0, [r3, #0]
 800b650:	fa00 f009 	lsl.w	r0, r0, r9
 800b654:	4310      	orrs	r0, r2
 800b656:	f84a 0b04 	str.w	r0, [sl], #4
 800b65a:	f853 2b04 	ldr.w	r2, [r3], #4
 800b65e:	459c      	cmp	ip, r3
 800b660:	fa22 f20e 	lsr.w	r2, r2, lr
 800b664:	d8f3      	bhi.n	800b64e <__lshift+0x6e>
 800b666:	ebac 0304 	sub.w	r3, ip, r4
 800b66a:	3b15      	subs	r3, #21
 800b66c:	f023 0303 	bic.w	r3, r3, #3
 800b670:	3304      	adds	r3, #4
 800b672:	f104 0015 	add.w	r0, r4, #21
 800b676:	4560      	cmp	r0, ip
 800b678:	bf88      	it	hi
 800b67a:	2304      	movhi	r3, #4
 800b67c:	50ca      	str	r2, [r1, r3]
 800b67e:	b10a      	cbz	r2, 800b684 <__lshift+0xa4>
 800b680:	f108 0602 	add.w	r6, r8, #2
 800b684:	3e01      	subs	r6, #1
 800b686:	4638      	mov	r0, r7
 800b688:	612e      	str	r6, [r5, #16]
 800b68a:	4621      	mov	r1, r4
 800b68c:	f7ff fd98 	bl	800b1c0 <_Bfree>
 800b690:	4628      	mov	r0, r5
 800b692:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b696:	f842 0f04 	str.w	r0, [r2, #4]!
 800b69a:	3301      	adds	r3, #1
 800b69c:	e7c5      	b.n	800b62a <__lshift+0x4a>
 800b69e:	3904      	subs	r1, #4
 800b6a0:	f853 2b04 	ldr.w	r2, [r3], #4
 800b6a4:	f841 2f04 	str.w	r2, [r1, #4]!
 800b6a8:	459c      	cmp	ip, r3
 800b6aa:	d8f9      	bhi.n	800b6a0 <__lshift+0xc0>
 800b6ac:	e7ea      	b.n	800b684 <__lshift+0xa4>
 800b6ae:	bf00      	nop
 800b6b0:	0800ca0a 	.word	0x0800ca0a
 800b6b4:	0800ca92 	.word	0x0800ca92

0800b6b8 <__mcmp>:
 800b6b8:	690a      	ldr	r2, [r1, #16]
 800b6ba:	4603      	mov	r3, r0
 800b6bc:	6900      	ldr	r0, [r0, #16]
 800b6be:	1a80      	subs	r0, r0, r2
 800b6c0:	b530      	push	{r4, r5, lr}
 800b6c2:	d10e      	bne.n	800b6e2 <__mcmp+0x2a>
 800b6c4:	3314      	adds	r3, #20
 800b6c6:	3114      	adds	r1, #20
 800b6c8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800b6cc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800b6d0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800b6d4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800b6d8:	4295      	cmp	r5, r2
 800b6da:	d003      	beq.n	800b6e4 <__mcmp+0x2c>
 800b6dc:	d205      	bcs.n	800b6ea <__mcmp+0x32>
 800b6de:	f04f 30ff 	mov.w	r0, #4294967295
 800b6e2:	bd30      	pop	{r4, r5, pc}
 800b6e4:	42a3      	cmp	r3, r4
 800b6e6:	d3f3      	bcc.n	800b6d0 <__mcmp+0x18>
 800b6e8:	e7fb      	b.n	800b6e2 <__mcmp+0x2a>
 800b6ea:	2001      	movs	r0, #1
 800b6ec:	e7f9      	b.n	800b6e2 <__mcmp+0x2a>
	...

0800b6f0 <__mdiff>:
 800b6f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6f4:	4689      	mov	r9, r1
 800b6f6:	4606      	mov	r6, r0
 800b6f8:	4611      	mov	r1, r2
 800b6fa:	4648      	mov	r0, r9
 800b6fc:	4614      	mov	r4, r2
 800b6fe:	f7ff ffdb 	bl	800b6b8 <__mcmp>
 800b702:	1e05      	subs	r5, r0, #0
 800b704:	d112      	bne.n	800b72c <__mdiff+0x3c>
 800b706:	4629      	mov	r1, r5
 800b708:	4630      	mov	r0, r6
 800b70a:	f7ff fd19 	bl	800b140 <_Balloc>
 800b70e:	4602      	mov	r2, r0
 800b710:	b928      	cbnz	r0, 800b71e <__mdiff+0x2e>
 800b712:	4b3f      	ldr	r3, [pc, #252]	@ (800b810 <__mdiff+0x120>)
 800b714:	f240 2137 	movw	r1, #567	@ 0x237
 800b718:	483e      	ldr	r0, [pc, #248]	@ (800b814 <__mdiff+0x124>)
 800b71a:	f000 fd81 	bl	800c220 <__assert_func>
 800b71e:	2301      	movs	r3, #1
 800b720:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800b724:	4610      	mov	r0, r2
 800b726:	b003      	add	sp, #12
 800b728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b72c:	bfbc      	itt	lt
 800b72e:	464b      	movlt	r3, r9
 800b730:	46a1      	movlt	r9, r4
 800b732:	4630      	mov	r0, r6
 800b734:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800b738:	bfba      	itte	lt
 800b73a:	461c      	movlt	r4, r3
 800b73c:	2501      	movlt	r5, #1
 800b73e:	2500      	movge	r5, #0
 800b740:	f7ff fcfe 	bl	800b140 <_Balloc>
 800b744:	4602      	mov	r2, r0
 800b746:	b918      	cbnz	r0, 800b750 <__mdiff+0x60>
 800b748:	4b31      	ldr	r3, [pc, #196]	@ (800b810 <__mdiff+0x120>)
 800b74a:	f240 2145 	movw	r1, #581	@ 0x245
 800b74e:	e7e3      	b.n	800b718 <__mdiff+0x28>
 800b750:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800b754:	6926      	ldr	r6, [r4, #16]
 800b756:	60c5      	str	r5, [r0, #12]
 800b758:	f109 0310 	add.w	r3, r9, #16
 800b75c:	f109 0514 	add.w	r5, r9, #20
 800b760:	f104 0e14 	add.w	lr, r4, #20
 800b764:	f100 0b14 	add.w	fp, r0, #20
 800b768:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800b76c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800b770:	9301      	str	r3, [sp, #4]
 800b772:	46d9      	mov	r9, fp
 800b774:	f04f 0c00 	mov.w	ip, #0
 800b778:	9b01      	ldr	r3, [sp, #4]
 800b77a:	f85e 0b04 	ldr.w	r0, [lr], #4
 800b77e:	f853 af04 	ldr.w	sl, [r3, #4]!
 800b782:	9301      	str	r3, [sp, #4]
 800b784:	fa1f f38a 	uxth.w	r3, sl
 800b788:	4619      	mov	r1, r3
 800b78a:	b283      	uxth	r3, r0
 800b78c:	1acb      	subs	r3, r1, r3
 800b78e:	0c00      	lsrs	r0, r0, #16
 800b790:	4463      	add	r3, ip
 800b792:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800b796:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800b79a:	b29b      	uxth	r3, r3
 800b79c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b7a0:	4576      	cmp	r6, lr
 800b7a2:	f849 3b04 	str.w	r3, [r9], #4
 800b7a6:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800b7aa:	d8e5      	bhi.n	800b778 <__mdiff+0x88>
 800b7ac:	1b33      	subs	r3, r6, r4
 800b7ae:	3b15      	subs	r3, #21
 800b7b0:	f023 0303 	bic.w	r3, r3, #3
 800b7b4:	3415      	adds	r4, #21
 800b7b6:	3304      	adds	r3, #4
 800b7b8:	42a6      	cmp	r6, r4
 800b7ba:	bf38      	it	cc
 800b7bc:	2304      	movcc	r3, #4
 800b7be:	441d      	add	r5, r3
 800b7c0:	445b      	add	r3, fp
 800b7c2:	461e      	mov	r6, r3
 800b7c4:	462c      	mov	r4, r5
 800b7c6:	4544      	cmp	r4, r8
 800b7c8:	d30e      	bcc.n	800b7e8 <__mdiff+0xf8>
 800b7ca:	f108 0103 	add.w	r1, r8, #3
 800b7ce:	1b49      	subs	r1, r1, r5
 800b7d0:	f021 0103 	bic.w	r1, r1, #3
 800b7d4:	3d03      	subs	r5, #3
 800b7d6:	45a8      	cmp	r8, r5
 800b7d8:	bf38      	it	cc
 800b7da:	2100      	movcc	r1, #0
 800b7dc:	440b      	add	r3, r1
 800b7de:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b7e2:	b191      	cbz	r1, 800b80a <__mdiff+0x11a>
 800b7e4:	6117      	str	r7, [r2, #16]
 800b7e6:	e79d      	b.n	800b724 <__mdiff+0x34>
 800b7e8:	f854 1b04 	ldr.w	r1, [r4], #4
 800b7ec:	46e6      	mov	lr, ip
 800b7ee:	0c08      	lsrs	r0, r1, #16
 800b7f0:	fa1c fc81 	uxtah	ip, ip, r1
 800b7f4:	4471      	add	r1, lr
 800b7f6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800b7fa:	b289      	uxth	r1, r1
 800b7fc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800b800:	f846 1b04 	str.w	r1, [r6], #4
 800b804:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800b808:	e7dd      	b.n	800b7c6 <__mdiff+0xd6>
 800b80a:	3f01      	subs	r7, #1
 800b80c:	e7e7      	b.n	800b7de <__mdiff+0xee>
 800b80e:	bf00      	nop
 800b810:	0800ca0a 	.word	0x0800ca0a
 800b814:	0800ca92 	.word	0x0800ca92

0800b818 <__ulp>:
 800b818:	b082      	sub	sp, #8
 800b81a:	ed8d 0b00 	vstr	d0, [sp]
 800b81e:	9a01      	ldr	r2, [sp, #4]
 800b820:	4b0f      	ldr	r3, [pc, #60]	@ (800b860 <__ulp+0x48>)
 800b822:	4013      	ands	r3, r2
 800b824:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800b828:	2b00      	cmp	r3, #0
 800b82a:	dc08      	bgt.n	800b83e <__ulp+0x26>
 800b82c:	425b      	negs	r3, r3
 800b82e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800b832:	ea4f 5223 	mov.w	r2, r3, asr #20
 800b836:	da04      	bge.n	800b842 <__ulp+0x2a>
 800b838:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800b83c:	4113      	asrs	r3, r2
 800b83e:	2200      	movs	r2, #0
 800b840:	e008      	b.n	800b854 <__ulp+0x3c>
 800b842:	f1a2 0314 	sub.w	r3, r2, #20
 800b846:	2b1e      	cmp	r3, #30
 800b848:	bfda      	itte	le
 800b84a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800b84e:	40da      	lsrle	r2, r3
 800b850:	2201      	movgt	r2, #1
 800b852:	2300      	movs	r3, #0
 800b854:	4619      	mov	r1, r3
 800b856:	4610      	mov	r0, r2
 800b858:	ec41 0b10 	vmov	d0, r0, r1
 800b85c:	b002      	add	sp, #8
 800b85e:	4770      	bx	lr
 800b860:	7ff00000 	.word	0x7ff00000

0800b864 <__b2d>:
 800b864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b868:	6906      	ldr	r6, [r0, #16]
 800b86a:	f100 0814 	add.w	r8, r0, #20
 800b86e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800b872:	1f37      	subs	r7, r6, #4
 800b874:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800b878:	4610      	mov	r0, r2
 800b87a:	f7ff fd53 	bl	800b324 <__hi0bits>
 800b87e:	f1c0 0320 	rsb	r3, r0, #32
 800b882:	280a      	cmp	r0, #10
 800b884:	600b      	str	r3, [r1, #0]
 800b886:	491b      	ldr	r1, [pc, #108]	@ (800b8f4 <__b2d+0x90>)
 800b888:	dc15      	bgt.n	800b8b6 <__b2d+0x52>
 800b88a:	f1c0 0c0b 	rsb	ip, r0, #11
 800b88e:	fa22 f30c 	lsr.w	r3, r2, ip
 800b892:	45b8      	cmp	r8, r7
 800b894:	ea43 0501 	orr.w	r5, r3, r1
 800b898:	bf34      	ite	cc
 800b89a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800b89e:	2300      	movcs	r3, #0
 800b8a0:	3015      	adds	r0, #21
 800b8a2:	fa02 f000 	lsl.w	r0, r2, r0
 800b8a6:	fa23 f30c 	lsr.w	r3, r3, ip
 800b8aa:	4303      	orrs	r3, r0
 800b8ac:	461c      	mov	r4, r3
 800b8ae:	ec45 4b10 	vmov	d0, r4, r5
 800b8b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8b6:	45b8      	cmp	r8, r7
 800b8b8:	bf3a      	itte	cc
 800b8ba:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800b8be:	f1a6 0708 	subcc.w	r7, r6, #8
 800b8c2:	2300      	movcs	r3, #0
 800b8c4:	380b      	subs	r0, #11
 800b8c6:	d012      	beq.n	800b8ee <__b2d+0x8a>
 800b8c8:	f1c0 0120 	rsb	r1, r0, #32
 800b8cc:	fa23 f401 	lsr.w	r4, r3, r1
 800b8d0:	4082      	lsls	r2, r0
 800b8d2:	4322      	orrs	r2, r4
 800b8d4:	4547      	cmp	r7, r8
 800b8d6:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800b8da:	bf8c      	ite	hi
 800b8dc:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800b8e0:	2200      	movls	r2, #0
 800b8e2:	4083      	lsls	r3, r0
 800b8e4:	40ca      	lsrs	r2, r1
 800b8e6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800b8ea:	4313      	orrs	r3, r2
 800b8ec:	e7de      	b.n	800b8ac <__b2d+0x48>
 800b8ee:	ea42 0501 	orr.w	r5, r2, r1
 800b8f2:	e7db      	b.n	800b8ac <__b2d+0x48>
 800b8f4:	3ff00000 	.word	0x3ff00000

0800b8f8 <__d2b>:
 800b8f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b8fc:	460f      	mov	r7, r1
 800b8fe:	2101      	movs	r1, #1
 800b900:	ec59 8b10 	vmov	r8, r9, d0
 800b904:	4616      	mov	r6, r2
 800b906:	f7ff fc1b 	bl	800b140 <_Balloc>
 800b90a:	4604      	mov	r4, r0
 800b90c:	b930      	cbnz	r0, 800b91c <__d2b+0x24>
 800b90e:	4602      	mov	r2, r0
 800b910:	4b23      	ldr	r3, [pc, #140]	@ (800b9a0 <__d2b+0xa8>)
 800b912:	4824      	ldr	r0, [pc, #144]	@ (800b9a4 <__d2b+0xac>)
 800b914:	f240 310f 	movw	r1, #783	@ 0x30f
 800b918:	f000 fc82 	bl	800c220 <__assert_func>
 800b91c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800b920:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800b924:	b10d      	cbz	r5, 800b92a <__d2b+0x32>
 800b926:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800b92a:	9301      	str	r3, [sp, #4]
 800b92c:	f1b8 0300 	subs.w	r3, r8, #0
 800b930:	d023      	beq.n	800b97a <__d2b+0x82>
 800b932:	4668      	mov	r0, sp
 800b934:	9300      	str	r3, [sp, #0]
 800b936:	f7ff fd14 	bl	800b362 <__lo0bits>
 800b93a:	e9dd 1200 	ldrd	r1, r2, [sp]
 800b93e:	b1d0      	cbz	r0, 800b976 <__d2b+0x7e>
 800b940:	f1c0 0320 	rsb	r3, r0, #32
 800b944:	fa02 f303 	lsl.w	r3, r2, r3
 800b948:	430b      	orrs	r3, r1
 800b94a:	40c2      	lsrs	r2, r0
 800b94c:	6163      	str	r3, [r4, #20]
 800b94e:	9201      	str	r2, [sp, #4]
 800b950:	9b01      	ldr	r3, [sp, #4]
 800b952:	61a3      	str	r3, [r4, #24]
 800b954:	2b00      	cmp	r3, #0
 800b956:	bf0c      	ite	eq
 800b958:	2201      	moveq	r2, #1
 800b95a:	2202      	movne	r2, #2
 800b95c:	6122      	str	r2, [r4, #16]
 800b95e:	b1a5      	cbz	r5, 800b98a <__d2b+0x92>
 800b960:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800b964:	4405      	add	r5, r0
 800b966:	603d      	str	r5, [r7, #0]
 800b968:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800b96c:	6030      	str	r0, [r6, #0]
 800b96e:	4620      	mov	r0, r4
 800b970:	b003      	add	sp, #12
 800b972:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b976:	6161      	str	r1, [r4, #20]
 800b978:	e7ea      	b.n	800b950 <__d2b+0x58>
 800b97a:	a801      	add	r0, sp, #4
 800b97c:	f7ff fcf1 	bl	800b362 <__lo0bits>
 800b980:	9b01      	ldr	r3, [sp, #4]
 800b982:	6163      	str	r3, [r4, #20]
 800b984:	3020      	adds	r0, #32
 800b986:	2201      	movs	r2, #1
 800b988:	e7e8      	b.n	800b95c <__d2b+0x64>
 800b98a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800b98e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800b992:	6038      	str	r0, [r7, #0]
 800b994:	6918      	ldr	r0, [r3, #16]
 800b996:	f7ff fcc5 	bl	800b324 <__hi0bits>
 800b99a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800b99e:	e7e5      	b.n	800b96c <__d2b+0x74>
 800b9a0:	0800ca0a 	.word	0x0800ca0a
 800b9a4:	0800ca92 	.word	0x0800ca92

0800b9a8 <__ratio>:
 800b9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9ac:	b085      	sub	sp, #20
 800b9ae:	e9cd 1000 	strd	r1, r0, [sp]
 800b9b2:	a902      	add	r1, sp, #8
 800b9b4:	f7ff ff56 	bl	800b864 <__b2d>
 800b9b8:	9800      	ldr	r0, [sp, #0]
 800b9ba:	a903      	add	r1, sp, #12
 800b9bc:	ec55 4b10 	vmov	r4, r5, d0
 800b9c0:	f7ff ff50 	bl	800b864 <__b2d>
 800b9c4:	9b01      	ldr	r3, [sp, #4]
 800b9c6:	6919      	ldr	r1, [r3, #16]
 800b9c8:	9b00      	ldr	r3, [sp, #0]
 800b9ca:	691b      	ldr	r3, [r3, #16]
 800b9cc:	1ac9      	subs	r1, r1, r3
 800b9ce:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800b9d2:	1a9b      	subs	r3, r3, r2
 800b9d4:	ec5b ab10 	vmov	sl, fp, d0
 800b9d8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800b9dc:	2b00      	cmp	r3, #0
 800b9de:	bfce      	itee	gt
 800b9e0:	462a      	movgt	r2, r5
 800b9e2:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800b9e6:	465a      	movle	r2, fp
 800b9e8:	462f      	mov	r7, r5
 800b9ea:	46d9      	mov	r9, fp
 800b9ec:	bfcc      	ite	gt
 800b9ee:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800b9f2:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800b9f6:	464b      	mov	r3, r9
 800b9f8:	4652      	mov	r2, sl
 800b9fa:	4620      	mov	r0, r4
 800b9fc:	4639      	mov	r1, r7
 800b9fe:	f7f4 ff4d 	bl	800089c <__aeabi_ddiv>
 800ba02:	ec41 0b10 	vmov	d0, r0, r1
 800ba06:	b005      	add	sp, #20
 800ba08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ba0c <__copybits>:
 800ba0c:	3901      	subs	r1, #1
 800ba0e:	b570      	push	{r4, r5, r6, lr}
 800ba10:	1149      	asrs	r1, r1, #5
 800ba12:	6914      	ldr	r4, [r2, #16]
 800ba14:	3101      	adds	r1, #1
 800ba16:	f102 0314 	add.w	r3, r2, #20
 800ba1a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800ba1e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800ba22:	1f05      	subs	r5, r0, #4
 800ba24:	42a3      	cmp	r3, r4
 800ba26:	d30c      	bcc.n	800ba42 <__copybits+0x36>
 800ba28:	1aa3      	subs	r3, r4, r2
 800ba2a:	3b11      	subs	r3, #17
 800ba2c:	f023 0303 	bic.w	r3, r3, #3
 800ba30:	3211      	adds	r2, #17
 800ba32:	42a2      	cmp	r2, r4
 800ba34:	bf88      	it	hi
 800ba36:	2300      	movhi	r3, #0
 800ba38:	4418      	add	r0, r3
 800ba3a:	2300      	movs	r3, #0
 800ba3c:	4288      	cmp	r0, r1
 800ba3e:	d305      	bcc.n	800ba4c <__copybits+0x40>
 800ba40:	bd70      	pop	{r4, r5, r6, pc}
 800ba42:	f853 6b04 	ldr.w	r6, [r3], #4
 800ba46:	f845 6f04 	str.w	r6, [r5, #4]!
 800ba4a:	e7eb      	b.n	800ba24 <__copybits+0x18>
 800ba4c:	f840 3b04 	str.w	r3, [r0], #4
 800ba50:	e7f4      	b.n	800ba3c <__copybits+0x30>

0800ba52 <__any_on>:
 800ba52:	f100 0214 	add.w	r2, r0, #20
 800ba56:	6900      	ldr	r0, [r0, #16]
 800ba58:	114b      	asrs	r3, r1, #5
 800ba5a:	4298      	cmp	r0, r3
 800ba5c:	b510      	push	{r4, lr}
 800ba5e:	db11      	blt.n	800ba84 <__any_on+0x32>
 800ba60:	dd0a      	ble.n	800ba78 <__any_on+0x26>
 800ba62:	f011 011f 	ands.w	r1, r1, #31
 800ba66:	d007      	beq.n	800ba78 <__any_on+0x26>
 800ba68:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800ba6c:	fa24 f001 	lsr.w	r0, r4, r1
 800ba70:	fa00 f101 	lsl.w	r1, r0, r1
 800ba74:	428c      	cmp	r4, r1
 800ba76:	d10b      	bne.n	800ba90 <__any_on+0x3e>
 800ba78:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800ba7c:	4293      	cmp	r3, r2
 800ba7e:	d803      	bhi.n	800ba88 <__any_on+0x36>
 800ba80:	2000      	movs	r0, #0
 800ba82:	bd10      	pop	{r4, pc}
 800ba84:	4603      	mov	r3, r0
 800ba86:	e7f7      	b.n	800ba78 <__any_on+0x26>
 800ba88:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800ba8c:	2900      	cmp	r1, #0
 800ba8e:	d0f5      	beq.n	800ba7c <__any_on+0x2a>
 800ba90:	2001      	movs	r0, #1
 800ba92:	e7f6      	b.n	800ba82 <__any_on+0x30>

0800ba94 <__ascii_wctomb>:
 800ba94:	4603      	mov	r3, r0
 800ba96:	4608      	mov	r0, r1
 800ba98:	b141      	cbz	r1, 800baac <__ascii_wctomb+0x18>
 800ba9a:	2aff      	cmp	r2, #255	@ 0xff
 800ba9c:	d904      	bls.n	800baa8 <__ascii_wctomb+0x14>
 800ba9e:	228a      	movs	r2, #138	@ 0x8a
 800baa0:	601a      	str	r2, [r3, #0]
 800baa2:	f04f 30ff 	mov.w	r0, #4294967295
 800baa6:	4770      	bx	lr
 800baa8:	700a      	strb	r2, [r1, #0]
 800baaa:	2001      	movs	r0, #1
 800baac:	4770      	bx	lr

0800baae <__ssputs_r>:
 800baae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bab2:	688e      	ldr	r6, [r1, #8]
 800bab4:	461f      	mov	r7, r3
 800bab6:	42be      	cmp	r6, r7
 800bab8:	680b      	ldr	r3, [r1, #0]
 800baba:	4682      	mov	sl, r0
 800babc:	460c      	mov	r4, r1
 800babe:	4690      	mov	r8, r2
 800bac0:	d82d      	bhi.n	800bb1e <__ssputs_r+0x70>
 800bac2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800bac6:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800baca:	d026      	beq.n	800bb1a <__ssputs_r+0x6c>
 800bacc:	6965      	ldr	r5, [r4, #20]
 800bace:	6909      	ldr	r1, [r1, #16]
 800bad0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800bad4:	eba3 0901 	sub.w	r9, r3, r1
 800bad8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800badc:	1c7b      	adds	r3, r7, #1
 800bade:	444b      	add	r3, r9
 800bae0:	106d      	asrs	r5, r5, #1
 800bae2:	429d      	cmp	r5, r3
 800bae4:	bf38      	it	cc
 800bae6:	461d      	movcc	r5, r3
 800bae8:	0553      	lsls	r3, r2, #21
 800baea:	d527      	bpl.n	800bb3c <__ssputs_r+0x8e>
 800baec:	4629      	mov	r1, r5
 800baee:	f7ff fa89 	bl	800b004 <_malloc_r>
 800baf2:	4606      	mov	r6, r0
 800baf4:	b360      	cbz	r0, 800bb50 <__ssputs_r+0xa2>
 800baf6:	6921      	ldr	r1, [r4, #16]
 800baf8:	464a      	mov	r2, r9
 800bafa:	f7fe fec4 	bl	800a886 <memcpy>
 800bafe:	89a3      	ldrh	r3, [r4, #12]
 800bb00:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800bb04:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800bb08:	81a3      	strh	r3, [r4, #12]
 800bb0a:	6126      	str	r6, [r4, #16]
 800bb0c:	6165      	str	r5, [r4, #20]
 800bb0e:	444e      	add	r6, r9
 800bb10:	eba5 0509 	sub.w	r5, r5, r9
 800bb14:	6026      	str	r6, [r4, #0]
 800bb16:	60a5      	str	r5, [r4, #8]
 800bb18:	463e      	mov	r6, r7
 800bb1a:	42be      	cmp	r6, r7
 800bb1c:	d900      	bls.n	800bb20 <__ssputs_r+0x72>
 800bb1e:	463e      	mov	r6, r7
 800bb20:	6820      	ldr	r0, [r4, #0]
 800bb22:	4632      	mov	r2, r6
 800bb24:	4641      	mov	r1, r8
 800bb26:	f000 fb51 	bl	800c1cc <memmove>
 800bb2a:	68a3      	ldr	r3, [r4, #8]
 800bb2c:	1b9b      	subs	r3, r3, r6
 800bb2e:	60a3      	str	r3, [r4, #8]
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	4433      	add	r3, r6
 800bb34:	6023      	str	r3, [r4, #0]
 800bb36:	2000      	movs	r0, #0
 800bb38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bb3c:	462a      	mov	r2, r5
 800bb3e:	f000 fba9 	bl	800c294 <_realloc_r>
 800bb42:	4606      	mov	r6, r0
 800bb44:	2800      	cmp	r0, #0
 800bb46:	d1e0      	bne.n	800bb0a <__ssputs_r+0x5c>
 800bb48:	6921      	ldr	r1, [r4, #16]
 800bb4a:	4650      	mov	r0, sl
 800bb4c:	f7fe feb4 	bl	800a8b8 <_free_r>
 800bb50:	230c      	movs	r3, #12
 800bb52:	f8ca 3000 	str.w	r3, [sl]
 800bb56:	89a3      	ldrh	r3, [r4, #12]
 800bb58:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800bb5c:	81a3      	strh	r3, [r4, #12]
 800bb5e:	f04f 30ff 	mov.w	r0, #4294967295
 800bb62:	e7e9      	b.n	800bb38 <__ssputs_r+0x8a>

0800bb64 <_svfiprintf_r>:
 800bb64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb68:	4698      	mov	r8, r3
 800bb6a:	898b      	ldrh	r3, [r1, #12]
 800bb6c:	061b      	lsls	r3, r3, #24
 800bb6e:	b09d      	sub	sp, #116	@ 0x74
 800bb70:	4607      	mov	r7, r0
 800bb72:	460d      	mov	r5, r1
 800bb74:	4614      	mov	r4, r2
 800bb76:	d510      	bpl.n	800bb9a <_svfiprintf_r+0x36>
 800bb78:	690b      	ldr	r3, [r1, #16]
 800bb7a:	b973      	cbnz	r3, 800bb9a <_svfiprintf_r+0x36>
 800bb7c:	2140      	movs	r1, #64	@ 0x40
 800bb7e:	f7ff fa41 	bl	800b004 <_malloc_r>
 800bb82:	6028      	str	r0, [r5, #0]
 800bb84:	6128      	str	r0, [r5, #16]
 800bb86:	b930      	cbnz	r0, 800bb96 <_svfiprintf_r+0x32>
 800bb88:	230c      	movs	r3, #12
 800bb8a:	603b      	str	r3, [r7, #0]
 800bb8c:	f04f 30ff 	mov.w	r0, #4294967295
 800bb90:	b01d      	add	sp, #116	@ 0x74
 800bb92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb96:	2340      	movs	r3, #64	@ 0x40
 800bb98:	616b      	str	r3, [r5, #20]
 800bb9a:	2300      	movs	r3, #0
 800bb9c:	9309      	str	r3, [sp, #36]	@ 0x24
 800bb9e:	2320      	movs	r3, #32
 800bba0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800bba4:	f8cd 800c 	str.w	r8, [sp, #12]
 800bba8:	2330      	movs	r3, #48	@ 0x30
 800bbaa:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800bd48 <_svfiprintf_r+0x1e4>
 800bbae:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800bbb2:	f04f 0901 	mov.w	r9, #1
 800bbb6:	4623      	mov	r3, r4
 800bbb8:	469a      	mov	sl, r3
 800bbba:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bbbe:	b10a      	cbz	r2, 800bbc4 <_svfiprintf_r+0x60>
 800bbc0:	2a25      	cmp	r2, #37	@ 0x25
 800bbc2:	d1f9      	bne.n	800bbb8 <_svfiprintf_r+0x54>
 800bbc4:	ebba 0b04 	subs.w	fp, sl, r4
 800bbc8:	d00b      	beq.n	800bbe2 <_svfiprintf_r+0x7e>
 800bbca:	465b      	mov	r3, fp
 800bbcc:	4622      	mov	r2, r4
 800bbce:	4629      	mov	r1, r5
 800bbd0:	4638      	mov	r0, r7
 800bbd2:	f7ff ff6c 	bl	800baae <__ssputs_r>
 800bbd6:	3001      	adds	r0, #1
 800bbd8:	f000 80a7 	beq.w	800bd2a <_svfiprintf_r+0x1c6>
 800bbdc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bbde:	445a      	add	r2, fp
 800bbe0:	9209      	str	r2, [sp, #36]	@ 0x24
 800bbe2:	f89a 3000 	ldrb.w	r3, [sl]
 800bbe6:	2b00      	cmp	r3, #0
 800bbe8:	f000 809f 	beq.w	800bd2a <_svfiprintf_r+0x1c6>
 800bbec:	2300      	movs	r3, #0
 800bbee:	f04f 32ff 	mov.w	r2, #4294967295
 800bbf2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800bbf6:	f10a 0a01 	add.w	sl, sl, #1
 800bbfa:	9304      	str	r3, [sp, #16]
 800bbfc:	9307      	str	r3, [sp, #28]
 800bbfe:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800bc02:	931a      	str	r3, [sp, #104]	@ 0x68
 800bc04:	4654      	mov	r4, sl
 800bc06:	2205      	movs	r2, #5
 800bc08:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bc0c:	484e      	ldr	r0, [pc, #312]	@ (800bd48 <_svfiprintf_r+0x1e4>)
 800bc0e:	f7f4 fb0f 	bl	8000230 <memchr>
 800bc12:	9a04      	ldr	r2, [sp, #16]
 800bc14:	b9d8      	cbnz	r0, 800bc4e <_svfiprintf_r+0xea>
 800bc16:	06d0      	lsls	r0, r2, #27
 800bc18:	bf44      	itt	mi
 800bc1a:	2320      	movmi	r3, #32
 800bc1c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800bc20:	0711      	lsls	r1, r2, #28
 800bc22:	bf44      	itt	mi
 800bc24:	232b      	movmi	r3, #43	@ 0x2b
 800bc26:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800bc2a:	f89a 3000 	ldrb.w	r3, [sl]
 800bc2e:	2b2a      	cmp	r3, #42	@ 0x2a
 800bc30:	d015      	beq.n	800bc5e <_svfiprintf_r+0xfa>
 800bc32:	9a07      	ldr	r2, [sp, #28]
 800bc34:	4654      	mov	r4, sl
 800bc36:	2000      	movs	r0, #0
 800bc38:	f04f 0c0a 	mov.w	ip, #10
 800bc3c:	4621      	mov	r1, r4
 800bc3e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bc42:	3b30      	subs	r3, #48	@ 0x30
 800bc44:	2b09      	cmp	r3, #9
 800bc46:	d94b      	bls.n	800bce0 <_svfiprintf_r+0x17c>
 800bc48:	b1b0      	cbz	r0, 800bc78 <_svfiprintf_r+0x114>
 800bc4a:	9207      	str	r2, [sp, #28]
 800bc4c:	e014      	b.n	800bc78 <_svfiprintf_r+0x114>
 800bc4e:	eba0 0308 	sub.w	r3, r0, r8
 800bc52:	fa09 f303 	lsl.w	r3, r9, r3
 800bc56:	4313      	orrs	r3, r2
 800bc58:	9304      	str	r3, [sp, #16]
 800bc5a:	46a2      	mov	sl, r4
 800bc5c:	e7d2      	b.n	800bc04 <_svfiprintf_r+0xa0>
 800bc5e:	9b03      	ldr	r3, [sp, #12]
 800bc60:	1d19      	adds	r1, r3, #4
 800bc62:	681b      	ldr	r3, [r3, #0]
 800bc64:	9103      	str	r1, [sp, #12]
 800bc66:	2b00      	cmp	r3, #0
 800bc68:	bfbb      	ittet	lt
 800bc6a:	425b      	neglt	r3, r3
 800bc6c:	f042 0202 	orrlt.w	r2, r2, #2
 800bc70:	9307      	strge	r3, [sp, #28]
 800bc72:	9307      	strlt	r3, [sp, #28]
 800bc74:	bfb8      	it	lt
 800bc76:	9204      	strlt	r2, [sp, #16]
 800bc78:	7823      	ldrb	r3, [r4, #0]
 800bc7a:	2b2e      	cmp	r3, #46	@ 0x2e
 800bc7c:	d10a      	bne.n	800bc94 <_svfiprintf_r+0x130>
 800bc7e:	7863      	ldrb	r3, [r4, #1]
 800bc80:	2b2a      	cmp	r3, #42	@ 0x2a
 800bc82:	d132      	bne.n	800bcea <_svfiprintf_r+0x186>
 800bc84:	9b03      	ldr	r3, [sp, #12]
 800bc86:	1d1a      	adds	r2, r3, #4
 800bc88:	681b      	ldr	r3, [r3, #0]
 800bc8a:	9203      	str	r2, [sp, #12]
 800bc8c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800bc90:	3402      	adds	r4, #2
 800bc92:	9305      	str	r3, [sp, #20]
 800bc94:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800bd58 <_svfiprintf_r+0x1f4>
 800bc98:	7821      	ldrb	r1, [r4, #0]
 800bc9a:	2203      	movs	r2, #3
 800bc9c:	4650      	mov	r0, sl
 800bc9e:	f7f4 fac7 	bl	8000230 <memchr>
 800bca2:	b138      	cbz	r0, 800bcb4 <_svfiprintf_r+0x150>
 800bca4:	9b04      	ldr	r3, [sp, #16]
 800bca6:	eba0 000a 	sub.w	r0, r0, sl
 800bcaa:	2240      	movs	r2, #64	@ 0x40
 800bcac:	4082      	lsls	r2, r0
 800bcae:	4313      	orrs	r3, r2
 800bcb0:	3401      	adds	r4, #1
 800bcb2:	9304      	str	r3, [sp, #16]
 800bcb4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bcb8:	4824      	ldr	r0, [pc, #144]	@ (800bd4c <_svfiprintf_r+0x1e8>)
 800bcba:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800bcbe:	2206      	movs	r2, #6
 800bcc0:	f7f4 fab6 	bl	8000230 <memchr>
 800bcc4:	2800      	cmp	r0, #0
 800bcc6:	d036      	beq.n	800bd36 <_svfiprintf_r+0x1d2>
 800bcc8:	4b21      	ldr	r3, [pc, #132]	@ (800bd50 <_svfiprintf_r+0x1ec>)
 800bcca:	bb1b      	cbnz	r3, 800bd14 <_svfiprintf_r+0x1b0>
 800bccc:	9b03      	ldr	r3, [sp, #12]
 800bcce:	3307      	adds	r3, #7
 800bcd0:	f023 0307 	bic.w	r3, r3, #7
 800bcd4:	3308      	adds	r3, #8
 800bcd6:	9303      	str	r3, [sp, #12]
 800bcd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bcda:	4433      	add	r3, r6
 800bcdc:	9309      	str	r3, [sp, #36]	@ 0x24
 800bcde:	e76a      	b.n	800bbb6 <_svfiprintf_r+0x52>
 800bce0:	fb0c 3202 	mla	r2, ip, r2, r3
 800bce4:	460c      	mov	r4, r1
 800bce6:	2001      	movs	r0, #1
 800bce8:	e7a8      	b.n	800bc3c <_svfiprintf_r+0xd8>
 800bcea:	2300      	movs	r3, #0
 800bcec:	3401      	adds	r4, #1
 800bcee:	9305      	str	r3, [sp, #20]
 800bcf0:	4619      	mov	r1, r3
 800bcf2:	f04f 0c0a 	mov.w	ip, #10
 800bcf6:	4620      	mov	r0, r4
 800bcf8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bcfc:	3a30      	subs	r2, #48	@ 0x30
 800bcfe:	2a09      	cmp	r2, #9
 800bd00:	d903      	bls.n	800bd0a <_svfiprintf_r+0x1a6>
 800bd02:	2b00      	cmp	r3, #0
 800bd04:	d0c6      	beq.n	800bc94 <_svfiprintf_r+0x130>
 800bd06:	9105      	str	r1, [sp, #20]
 800bd08:	e7c4      	b.n	800bc94 <_svfiprintf_r+0x130>
 800bd0a:	fb0c 2101 	mla	r1, ip, r1, r2
 800bd0e:	4604      	mov	r4, r0
 800bd10:	2301      	movs	r3, #1
 800bd12:	e7f0      	b.n	800bcf6 <_svfiprintf_r+0x192>
 800bd14:	ab03      	add	r3, sp, #12
 800bd16:	9300      	str	r3, [sp, #0]
 800bd18:	462a      	mov	r2, r5
 800bd1a:	4b0e      	ldr	r3, [pc, #56]	@ (800bd54 <_svfiprintf_r+0x1f0>)
 800bd1c:	a904      	add	r1, sp, #16
 800bd1e:	4638      	mov	r0, r7
 800bd20:	f3af 8000 	nop.w
 800bd24:	1c42      	adds	r2, r0, #1
 800bd26:	4606      	mov	r6, r0
 800bd28:	d1d6      	bne.n	800bcd8 <_svfiprintf_r+0x174>
 800bd2a:	89ab      	ldrh	r3, [r5, #12]
 800bd2c:	065b      	lsls	r3, r3, #25
 800bd2e:	f53f af2d 	bmi.w	800bb8c <_svfiprintf_r+0x28>
 800bd32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bd34:	e72c      	b.n	800bb90 <_svfiprintf_r+0x2c>
 800bd36:	ab03      	add	r3, sp, #12
 800bd38:	9300      	str	r3, [sp, #0]
 800bd3a:	462a      	mov	r2, r5
 800bd3c:	4b05      	ldr	r3, [pc, #20]	@ (800bd54 <_svfiprintf_r+0x1f0>)
 800bd3e:	a904      	add	r1, sp, #16
 800bd40:	4638      	mov	r0, r7
 800bd42:	f000 f879 	bl	800be38 <_printf_i>
 800bd46:	e7ed      	b.n	800bd24 <_svfiprintf_r+0x1c0>
 800bd48:	0800caeb 	.word	0x0800caeb
 800bd4c:	0800caf5 	.word	0x0800caf5
 800bd50:	00000000 	.word	0x00000000
 800bd54:	0800baaf 	.word	0x0800baaf
 800bd58:	0800caf1 	.word	0x0800caf1

0800bd5c <_printf_common>:
 800bd5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bd60:	4616      	mov	r6, r2
 800bd62:	4698      	mov	r8, r3
 800bd64:	688a      	ldr	r2, [r1, #8]
 800bd66:	690b      	ldr	r3, [r1, #16]
 800bd68:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800bd6c:	4293      	cmp	r3, r2
 800bd6e:	bfb8      	it	lt
 800bd70:	4613      	movlt	r3, r2
 800bd72:	6033      	str	r3, [r6, #0]
 800bd74:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800bd78:	4607      	mov	r7, r0
 800bd7a:	460c      	mov	r4, r1
 800bd7c:	b10a      	cbz	r2, 800bd82 <_printf_common+0x26>
 800bd7e:	3301      	adds	r3, #1
 800bd80:	6033      	str	r3, [r6, #0]
 800bd82:	6823      	ldr	r3, [r4, #0]
 800bd84:	0699      	lsls	r1, r3, #26
 800bd86:	bf42      	ittt	mi
 800bd88:	6833      	ldrmi	r3, [r6, #0]
 800bd8a:	3302      	addmi	r3, #2
 800bd8c:	6033      	strmi	r3, [r6, #0]
 800bd8e:	6825      	ldr	r5, [r4, #0]
 800bd90:	f015 0506 	ands.w	r5, r5, #6
 800bd94:	d106      	bne.n	800bda4 <_printf_common+0x48>
 800bd96:	f104 0a19 	add.w	sl, r4, #25
 800bd9a:	68e3      	ldr	r3, [r4, #12]
 800bd9c:	6832      	ldr	r2, [r6, #0]
 800bd9e:	1a9b      	subs	r3, r3, r2
 800bda0:	42ab      	cmp	r3, r5
 800bda2:	dc26      	bgt.n	800bdf2 <_printf_common+0x96>
 800bda4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800bda8:	6822      	ldr	r2, [r4, #0]
 800bdaa:	3b00      	subs	r3, #0
 800bdac:	bf18      	it	ne
 800bdae:	2301      	movne	r3, #1
 800bdb0:	0692      	lsls	r2, r2, #26
 800bdb2:	d42b      	bmi.n	800be0c <_printf_common+0xb0>
 800bdb4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800bdb8:	4641      	mov	r1, r8
 800bdba:	4638      	mov	r0, r7
 800bdbc:	47c8      	blx	r9
 800bdbe:	3001      	adds	r0, #1
 800bdc0:	d01e      	beq.n	800be00 <_printf_common+0xa4>
 800bdc2:	6823      	ldr	r3, [r4, #0]
 800bdc4:	6922      	ldr	r2, [r4, #16]
 800bdc6:	f003 0306 	and.w	r3, r3, #6
 800bdca:	2b04      	cmp	r3, #4
 800bdcc:	bf02      	ittt	eq
 800bdce:	68e5      	ldreq	r5, [r4, #12]
 800bdd0:	6833      	ldreq	r3, [r6, #0]
 800bdd2:	1aed      	subeq	r5, r5, r3
 800bdd4:	68a3      	ldr	r3, [r4, #8]
 800bdd6:	bf0c      	ite	eq
 800bdd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800bddc:	2500      	movne	r5, #0
 800bdde:	4293      	cmp	r3, r2
 800bde0:	bfc4      	itt	gt
 800bde2:	1a9b      	subgt	r3, r3, r2
 800bde4:	18ed      	addgt	r5, r5, r3
 800bde6:	2600      	movs	r6, #0
 800bde8:	341a      	adds	r4, #26
 800bdea:	42b5      	cmp	r5, r6
 800bdec:	d11a      	bne.n	800be24 <_printf_common+0xc8>
 800bdee:	2000      	movs	r0, #0
 800bdf0:	e008      	b.n	800be04 <_printf_common+0xa8>
 800bdf2:	2301      	movs	r3, #1
 800bdf4:	4652      	mov	r2, sl
 800bdf6:	4641      	mov	r1, r8
 800bdf8:	4638      	mov	r0, r7
 800bdfa:	47c8      	blx	r9
 800bdfc:	3001      	adds	r0, #1
 800bdfe:	d103      	bne.n	800be08 <_printf_common+0xac>
 800be00:	f04f 30ff 	mov.w	r0, #4294967295
 800be04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800be08:	3501      	adds	r5, #1
 800be0a:	e7c6      	b.n	800bd9a <_printf_common+0x3e>
 800be0c:	18e1      	adds	r1, r4, r3
 800be0e:	1c5a      	adds	r2, r3, #1
 800be10:	2030      	movs	r0, #48	@ 0x30
 800be12:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800be16:	4422      	add	r2, r4
 800be18:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800be1c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800be20:	3302      	adds	r3, #2
 800be22:	e7c7      	b.n	800bdb4 <_printf_common+0x58>
 800be24:	2301      	movs	r3, #1
 800be26:	4622      	mov	r2, r4
 800be28:	4641      	mov	r1, r8
 800be2a:	4638      	mov	r0, r7
 800be2c:	47c8      	blx	r9
 800be2e:	3001      	adds	r0, #1
 800be30:	d0e6      	beq.n	800be00 <_printf_common+0xa4>
 800be32:	3601      	adds	r6, #1
 800be34:	e7d9      	b.n	800bdea <_printf_common+0x8e>
	...

0800be38 <_printf_i>:
 800be38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800be3c:	7e0f      	ldrb	r7, [r1, #24]
 800be3e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800be40:	2f78      	cmp	r7, #120	@ 0x78
 800be42:	4691      	mov	r9, r2
 800be44:	4680      	mov	r8, r0
 800be46:	460c      	mov	r4, r1
 800be48:	469a      	mov	sl, r3
 800be4a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800be4e:	d807      	bhi.n	800be60 <_printf_i+0x28>
 800be50:	2f62      	cmp	r7, #98	@ 0x62
 800be52:	d80a      	bhi.n	800be6a <_printf_i+0x32>
 800be54:	2f00      	cmp	r7, #0
 800be56:	f000 80d1 	beq.w	800bffc <_printf_i+0x1c4>
 800be5a:	2f58      	cmp	r7, #88	@ 0x58
 800be5c:	f000 80b8 	beq.w	800bfd0 <_printf_i+0x198>
 800be60:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800be64:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800be68:	e03a      	b.n	800bee0 <_printf_i+0xa8>
 800be6a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800be6e:	2b15      	cmp	r3, #21
 800be70:	d8f6      	bhi.n	800be60 <_printf_i+0x28>
 800be72:	a101      	add	r1, pc, #4	@ (adr r1, 800be78 <_printf_i+0x40>)
 800be74:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800be78:	0800bed1 	.word	0x0800bed1
 800be7c:	0800bee5 	.word	0x0800bee5
 800be80:	0800be61 	.word	0x0800be61
 800be84:	0800be61 	.word	0x0800be61
 800be88:	0800be61 	.word	0x0800be61
 800be8c:	0800be61 	.word	0x0800be61
 800be90:	0800bee5 	.word	0x0800bee5
 800be94:	0800be61 	.word	0x0800be61
 800be98:	0800be61 	.word	0x0800be61
 800be9c:	0800be61 	.word	0x0800be61
 800bea0:	0800be61 	.word	0x0800be61
 800bea4:	0800bfe3 	.word	0x0800bfe3
 800bea8:	0800bf0f 	.word	0x0800bf0f
 800beac:	0800bf9d 	.word	0x0800bf9d
 800beb0:	0800be61 	.word	0x0800be61
 800beb4:	0800be61 	.word	0x0800be61
 800beb8:	0800c005 	.word	0x0800c005
 800bebc:	0800be61 	.word	0x0800be61
 800bec0:	0800bf0f 	.word	0x0800bf0f
 800bec4:	0800be61 	.word	0x0800be61
 800bec8:	0800be61 	.word	0x0800be61
 800becc:	0800bfa5 	.word	0x0800bfa5
 800bed0:	6833      	ldr	r3, [r6, #0]
 800bed2:	1d1a      	adds	r2, r3, #4
 800bed4:	681b      	ldr	r3, [r3, #0]
 800bed6:	6032      	str	r2, [r6, #0]
 800bed8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800bedc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800bee0:	2301      	movs	r3, #1
 800bee2:	e09c      	b.n	800c01e <_printf_i+0x1e6>
 800bee4:	6833      	ldr	r3, [r6, #0]
 800bee6:	6820      	ldr	r0, [r4, #0]
 800bee8:	1d19      	adds	r1, r3, #4
 800beea:	6031      	str	r1, [r6, #0]
 800beec:	0606      	lsls	r6, r0, #24
 800beee:	d501      	bpl.n	800bef4 <_printf_i+0xbc>
 800bef0:	681d      	ldr	r5, [r3, #0]
 800bef2:	e003      	b.n	800befc <_printf_i+0xc4>
 800bef4:	0645      	lsls	r5, r0, #25
 800bef6:	d5fb      	bpl.n	800bef0 <_printf_i+0xb8>
 800bef8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800befc:	2d00      	cmp	r5, #0
 800befe:	da03      	bge.n	800bf08 <_printf_i+0xd0>
 800bf00:	232d      	movs	r3, #45	@ 0x2d
 800bf02:	426d      	negs	r5, r5
 800bf04:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800bf08:	4858      	ldr	r0, [pc, #352]	@ (800c06c <_printf_i+0x234>)
 800bf0a:	230a      	movs	r3, #10
 800bf0c:	e011      	b.n	800bf32 <_printf_i+0xfa>
 800bf0e:	6821      	ldr	r1, [r4, #0]
 800bf10:	6833      	ldr	r3, [r6, #0]
 800bf12:	0608      	lsls	r0, r1, #24
 800bf14:	f853 5b04 	ldr.w	r5, [r3], #4
 800bf18:	d402      	bmi.n	800bf20 <_printf_i+0xe8>
 800bf1a:	0649      	lsls	r1, r1, #25
 800bf1c:	bf48      	it	mi
 800bf1e:	b2ad      	uxthmi	r5, r5
 800bf20:	2f6f      	cmp	r7, #111	@ 0x6f
 800bf22:	4852      	ldr	r0, [pc, #328]	@ (800c06c <_printf_i+0x234>)
 800bf24:	6033      	str	r3, [r6, #0]
 800bf26:	bf14      	ite	ne
 800bf28:	230a      	movne	r3, #10
 800bf2a:	2308      	moveq	r3, #8
 800bf2c:	2100      	movs	r1, #0
 800bf2e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800bf32:	6866      	ldr	r6, [r4, #4]
 800bf34:	60a6      	str	r6, [r4, #8]
 800bf36:	2e00      	cmp	r6, #0
 800bf38:	db05      	blt.n	800bf46 <_printf_i+0x10e>
 800bf3a:	6821      	ldr	r1, [r4, #0]
 800bf3c:	432e      	orrs	r6, r5
 800bf3e:	f021 0104 	bic.w	r1, r1, #4
 800bf42:	6021      	str	r1, [r4, #0]
 800bf44:	d04b      	beq.n	800bfde <_printf_i+0x1a6>
 800bf46:	4616      	mov	r6, r2
 800bf48:	fbb5 f1f3 	udiv	r1, r5, r3
 800bf4c:	fb03 5711 	mls	r7, r3, r1, r5
 800bf50:	5dc7      	ldrb	r7, [r0, r7]
 800bf52:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800bf56:	462f      	mov	r7, r5
 800bf58:	42bb      	cmp	r3, r7
 800bf5a:	460d      	mov	r5, r1
 800bf5c:	d9f4      	bls.n	800bf48 <_printf_i+0x110>
 800bf5e:	2b08      	cmp	r3, #8
 800bf60:	d10b      	bne.n	800bf7a <_printf_i+0x142>
 800bf62:	6823      	ldr	r3, [r4, #0]
 800bf64:	07df      	lsls	r7, r3, #31
 800bf66:	d508      	bpl.n	800bf7a <_printf_i+0x142>
 800bf68:	6923      	ldr	r3, [r4, #16]
 800bf6a:	6861      	ldr	r1, [r4, #4]
 800bf6c:	4299      	cmp	r1, r3
 800bf6e:	bfde      	ittt	le
 800bf70:	2330      	movle	r3, #48	@ 0x30
 800bf72:	f806 3c01 	strble.w	r3, [r6, #-1]
 800bf76:	f106 36ff 	addle.w	r6, r6, #4294967295
 800bf7a:	1b92      	subs	r2, r2, r6
 800bf7c:	6122      	str	r2, [r4, #16]
 800bf7e:	f8cd a000 	str.w	sl, [sp]
 800bf82:	464b      	mov	r3, r9
 800bf84:	aa03      	add	r2, sp, #12
 800bf86:	4621      	mov	r1, r4
 800bf88:	4640      	mov	r0, r8
 800bf8a:	f7ff fee7 	bl	800bd5c <_printf_common>
 800bf8e:	3001      	adds	r0, #1
 800bf90:	d14a      	bne.n	800c028 <_printf_i+0x1f0>
 800bf92:	f04f 30ff 	mov.w	r0, #4294967295
 800bf96:	b004      	add	sp, #16
 800bf98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf9c:	6823      	ldr	r3, [r4, #0]
 800bf9e:	f043 0320 	orr.w	r3, r3, #32
 800bfa2:	6023      	str	r3, [r4, #0]
 800bfa4:	4832      	ldr	r0, [pc, #200]	@ (800c070 <_printf_i+0x238>)
 800bfa6:	2778      	movs	r7, #120	@ 0x78
 800bfa8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800bfac:	6823      	ldr	r3, [r4, #0]
 800bfae:	6831      	ldr	r1, [r6, #0]
 800bfb0:	061f      	lsls	r7, r3, #24
 800bfb2:	f851 5b04 	ldr.w	r5, [r1], #4
 800bfb6:	d402      	bmi.n	800bfbe <_printf_i+0x186>
 800bfb8:	065f      	lsls	r7, r3, #25
 800bfba:	bf48      	it	mi
 800bfbc:	b2ad      	uxthmi	r5, r5
 800bfbe:	6031      	str	r1, [r6, #0]
 800bfc0:	07d9      	lsls	r1, r3, #31
 800bfc2:	bf44      	itt	mi
 800bfc4:	f043 0320 	orrmi.w	r3, r3, #32
 800bfc8:	6023      	strmi	r3, [r4, #0]
 800bfca:	b11d      	cbz	r5, 800bfd4 <_printf_i+0x19c>
 800bfcc:	2310      	movs	r3, #16
 800bfce:	e7ad      	b.n	800bf2c <_printf_i+0xf4>
 800bfd0:	4826      	ldr	r0, [pc, #152]	@ (800c06c <_printf_i+0x234>)
 800bfd2:	e7e9      	b.n	800bfa8 <_printf_i+0x170>
 800bfd4:	6823      	ldr	r3, [r4, #0]
 800bfd6:	f023 0320 	bic.w	r3, r3, #32
 800bfda:	6023      	str	r3, [r4, #0]
 800bfdc:	e7f6      	b.n	800bfcc <_printf_i+0x194>
 800bfde:	4616      	mov	r6, r2
 800bfe0:	e7bd      	b.n	800bf5e <_printf_i+0x126>
 800bfe2:	6833      	ldr	r3, [r6, #0]
 800bfe4:	6825      	ldr	r5, [r4, #0]
 800bfe6:	6961      	ldr	r1, [r4, #20]
 800bfe8:	1d18      	adds	r0, r3, #4
 800bfea:	6030      	str	r0, [r6, #0]
 800bfec:	062e      	lsls	r6, r5, #24
 800bfee:	681b      	ldr	r3, [r3, #0]
 800bff0:	d501      	bpl.n	800bff6 <_printf_i+0x1be>
 800bff2:	6019      	str	r1, [r3, #0]
 800bff4:	e002      	b.n	800bffc <_printf_i+0x1c4>
 800bff6:	0668      	lsls	r0, r5, #25
 800bff8:	d5fb      	bpl.n	800bff2 <_printf_i+0x1ba>
 800bffa:	8019      	strh	r1, [r3, #0]
 800bffc:	2300      	movs	r3, #0
 800bffe:	6123      	str	r3, [r4, #16]
 800c000:	4616      	mov	r6, r2
 800c002:	e7bc      	b.n	800bf7e <_printf_i+0x146>
 800c004:	6833      	ldr	r3, [r6, #0]
 800c006:	1d1a      	adds	r2, r3, #4
 800c008:	6032      	str	r2, [r6, #0]
 800c00a:	681e      	ldr	r6, [r3, #0]
 800c00c:	6862      	ldr	r2, [r4, #4]
 800c00e:	2100      	movs	r1, #0
 800c010:	4630      	mov	r0, r6
 800c012:	f7f4 f90d 	bl	8000230 <memchr>
 800c016:	b108      	cbz	r0, 800c01c <_printf_i+0x1e4>
 800c018:	1b80      	subs	r0, r0, r6
 800c01a:	6060      	str	r0, [r4, #4]
 800c01c:	6863      	ldr	r3, [r4, #4]
 800c01e:	6123      	str	r3, [r4, #16]
 800c020:	2300      	movs	r3, #0
 800c022:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800c026:	e7aa      	b.n	800bf7e <_printf_i+0x146>
 800c028:	6923      	ldr	r3, [r4, #16]
 800c02a:	4632      	mov	r2, r6
 800c02c:	4649      	mov	r1, r9
 800c02e:	4640      	mov	r0, r8
 800c030:	47d0      	blx	sl
 800c032:	3001      	adds	r0, #1
 800c034:	d0ad      	beq.n	800bf92 <_printf_i+0x15a>
 800c036:	6823      	ldr	r3, [r4, #0]
 800c038:	079b      	lsls	r3, r3, #30
 800c03a:	d413      	bmi.n	800c064 <_printf_i+0x22c>
 800c03c:	68e0      	ldr	r0, [r4, #12]
 800c03e:	9b03      	ldr	r3, [sp, #12]
 800c040:	4298      	cmp	r0, r3
 800c042:	bfb8      	it	lt
 800c044:	4618      	movlt	r0, r3
 800c046:	e7a6      	b.n	800bf96 <_printf_i+0x15e>
 800c048:	2301      	movs	r3, #1
 800c04a:	4632      	mov	r2, r6
 800c04c:	4649      	mov	r1, r9
 800c04e:	4640      	mov	r0, r8
 800c050:	47d0      	blx	sl
 800c052:	3001      	adds	r0, #1
 800c054:	d09d      	beq.n	800bf92 <_printf_i+0x15a>
 800c056:	3501      	adds	r5, #1
 800c058:	68e3      	ldr	r3, [r4, #12]
 800c05a:	9903      	ldr	r1, [sp, #12]
 800c05c:	1a5b      	subs	r3, r3, r1
 800c05e:	42ab      	cmp	r3, r5
 800c060:	dcf2      	bgt.n	800c048 <_printf_i+0x210>
 800c062:	e7eb      	b.n	800c03c <_printf_i+0x204>
 800c064:	2500      	movs	r5, #0
 800c066:	f104 0619 	add.w	r6, r4, #25
 800c06a:	e7f5      	b.n	800c058 <_printf_i+0x220>
 800c06c:	0800cafc 	.word	0x0800cafc
 800c070:	0800cb0d 	.word	0x0800cb0d

0800c074 <__sflush_r>:
 800c074:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c07c:	0716      	lsls	r6, r2, #28
 800c07e:	4605      	mov	r5, r0
 800c080:	460c      	mov	r4, r1
 800c082:	d454      	bmi.n	800c12e <__sflush_r+0xba>
 800c084:	684b      	ldr	r3, [r1, #4]
 800c086:	2b00      	cmp	r3, #0
 800c088:	dc02      	bgt.n	800c090 <__sflush_r+0x1c>
 800c08a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800c08c:	2b00      	cmp	r3, #0
 800c08e:	dd48      	ble.n	800c122 <__sflush_r+0xae>
 800c090:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c092:	2e00      	cmp	r6, #0
 800c094:	d045      	beq.n	800c122 <__sflush_r+0xae>
 800c096:	2300      	movs	r3, #0
 800c098:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800c09c:	682f      	ldr	r7, [r5, #0]
 800c09e:	6a21      	ldr	r1, [r4, #32]
 800c0a0:	602b      	str	r3, [r5, #0]
 800c0a2:	d030      	beq.n	800c106 <__sflush_r+0x92>
 800c0a4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800c0a6:	89a3      	ldrh	r3, [r4, #12]
 800c0a8:	0759      	lsls	r1, r3, #29
 800c0aa:	d505      	bpl.n	800c0b8 <__sflush_r+0x44>
 800c0ac:	6863      	ldr	r3, [r4, #4]
 800c0ae:	1ad2      	subs	r2, r2, r3
 800c0b0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c0b2:	b10b      	cbz	r3, 800c0b8 <__sflush_r+0x44>
 800c0b4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c0b6:	1ad2      	subs	r2, r2, r3
 800c0b8:	2300      	movs	r3, #0
 800c0ba:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c0bc:	6a21      	ldr	r1, [r4, #32]
 800c0be:	4628      	mov	r0, r5
 800c0c0:	47b0      	blx	r6
 800c0c2:	1c43      	adds	r3, r0, #1
 800c0c4:	89a3      	ldrh	r3, [r4, #12]
 800c0c6:	d106      	bne.n	800c0d6 <__sflush_r+0x62>
 800c0c8:	6829      	ldr	r1, [r5, #0]
 800c0ca:	291d      	cmp	r1, #29
 800c0cc:	d82b      	bhi.n	800c126 <__sflush_r+0xb2>
 800c0ce:	4a2a      	ldr	r2, [pc, #168]	@ (800c178 <__sflush_r+0x104>)
 800c0d0:	40ca      	lsrs	r2, r1
 800c0d2:	07d6      	lsls	r6, r2, #31
 800c0d4:	d527      	bpl.n	800c126 <__sflush_r+0xb2>
 800c0d6:	2200      	movs	r2, #0
 800c0d8:	6062      	str	r2, [r4, #4]
 800c0da:	04d9      	lsls	r1, r3, #19
 800c0dc:	6922      	ldr	r2, [r4, #16]
 800c0de:	6022      	str	r2, [r4, #0]
 800c0e0:	d504      	bpl.n	800c0ec <__sflush_r+0x78>
 800c0e2:	1c42      	adds	r2, r0, #1
 800c0e4:	d101      	bne.n	800c0ea <__sflush_r+0x76>
 800c0e6:	682b      	ldr	r3, [r5, #0]
 800c0e8:	b903      	cbnz	r3, 800c0ec <__sflush_r+0x78>
 800c0ea:	6560      	str	r0, [r4, #84]	@ 0x54
 800c0ec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c0ee:	602f      	str	r7, [r5, #0]
 800c0f0:	b1b9      	cbz	r1, 800c122 <__sflush_r+0xae>
 800c0f2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c0f6:	4299      	cmp	r1, r3
 800c0f8:	d002      	beq.n	800c100 <__sflush_r+0x8c>
 800c0fa:	4628      	mov	r0, r5
 800c0fc:	f7fe fbdc 	bl	800a8b8 <_free_r>
 800c100:	2300      	movs	r3, #0
 800c102:	6363      	str	r3, [r4, #52]	@ 0x34
 800c104:	e00d      	b.n	800c122 <__sflush_r+0xae>
 800c106:	2301      	movs	r3, #1
 800c108:	4628      	mov	r0, r5
 800c10a:	47b0      	blx	r6
 800c10c:	4602      	mov	r2, r0
 800c10e:	1c50      	adds	r0, r2, #1
 800c110:	d1c9      	bne.n	800c0a6 <__sflush_r+0x32>
 800c112:	682b      	ldr	r3, [r5, #0]
 800c114:	2b00      	cmp	r3, #0
 800c116:	d0c6      	beq.n	800c0a6 <__sflush_r+0x32>
 800c118:	2b1d      	cmp	r3, #29
 800c11a:	d001      	beq.n	800c120 <__sflush_r+0xac>
 800c11c:	2b16      	cmp	r3, #22
 800c11e:	d11e      	bne.n	800c15e <__sflush_r+0xea>
 800c120:	602f      	str	r7, [r5, #0]
 800c122:	2000      	movs	r0, #0
 800c124:	e022      	b.n	800c16c <__sflush_r+0xf8>
 800c126:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c12a:	b21b      	sxth	r3, r3
 800c12c:	e01b      	b.n	800c166 <__sflush_r+0xf2>
 800c12e:	690f      	ldr	r7, [r1, #16]
 800c130:	2f00      	cmp	r7, #0
 800c132:	d0f6      	beq.n	800c122 <__sflush_r+0xae>
 800c134:	0793      	lsls	r3, r2, #30
 800c136:	680e      	ldr	r6, [r1, #0]
 800c138:	bf08      	it	eq
 800c13a:	694b      	ldreq	r3, [r1, #20]
 800c13c:	600f      	str	r7, [r1, #0]
 800c13e:	bf18      	it	ne
 800c140:	2300      	movne	r3, #0
 800c142:	eba6 0807 	sub.w	r8, r6, r7
 800c146:	608b      	str	r3, [r1, #8]
 800c148:	f1b8 0f00 	cmp.w	r8, #0
 800c14c:	dde9      	ble.n	800c122 <__sflush_r+0xae>
 800c14e:	6a21      	ldr	r1, [r4, #32]
 800c150:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800c152:	4643      	mov	r3, r8
 800c154:	463a      	mov	r2, r7
 800c156:	4628      	mov	r0, r5
 800c158:	47b0      	blx	r6
 800c15a:	2800      	cmp	r0, #0
 800c15c:	dc08      	bgt.n	800c170 <__sflush_r+0xfc>
 800c15e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c162:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c166:	81a3      	strh	r3, [r4, #12]
 800c168:	f04f 30ff 	mov.w	r0, #4294967295
 800c16c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c170:	4407      	add	r7, r0
 800c172:	eba8 0800 	sub.w	r8, r8, r0
 800c176:	e7e7      	b.n	800c148 <__sflush_r+0xd4>
 800c178:	20400001 	.word	0x20400001

0800c17c <_fflush_r>:
 800c17c:	b538      	push	{r3, r4, r5, lr}
 800c17e:	690b      	ldr	r3, [r1, #16]
 800c180:	4605      	mov	r5, r0
 800c182:	460c      	mov	r4, r1
 800c184:	b913      	cbnz	r3, 800c18c <_fflush_r+0x10>
 800c186:	2500      	movs	r5, #0
 800c188:	4628      	mov	r0, r5
 800c18a:	bd38      	pop	{r3, r4, r5, pc}
 800c18c:	b118      	cbz	r0, 800c196 <_fflush_r+0x1a>
 800c18e:	6a03      	ldr	r3, [r0, #32]
 800c190:	b90b      	cbnz	r3, 800c196 <_fflush_r+0x1a>
 800c192:	f7fe f9fd 	bl	800a590 <__sinit>
 800c196:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c19a:	2b00      	cmp	r3, #0
 800c19c:	d0f3      	beq.n	800c186 <_fflush_r+0xa>
 800c19e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800c1a0:	07d0      	lsls	r0, r2, #31
 800c1a2:	d404      	bmi.n	800c1ae <_fflush_r+0x32>
 800c1a4:	0599      	lsls	r1, r3, #22
 800c1a6:	d402      	bmi.n	800c1ae <_fflush_r+0x32>
 800c1a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c1aa:	f7fe fb6a 	bl	800a882 <__retarget_lock_acquire_recursive>
 800c1ae:	4628      	mov	r0, r5
 800c1b0:	4621      	mov	r1, r4
 800c1b2:	f7ff ff5f 	bl	800c074 <__sflush_r>
 800c1b6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c1b8:	07da      	lsls	r2, r3, #31
 800c1ba:	4605      	mov	r5, r0
 800c1bc:	d4e4      	bmi.n	800c188 <_fflush_r+0xc>
 800c1be:	89a3      	ldrh	r3, [r4, #12]
 800c1c0:	059b      	lsls	r3, r3, #22
 800c1c2:	d4e1      	bmi.n	800c188 <_fflush_r+0xc>
 800c1c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c1c6:	f7fe fb5d 	bl	800a884 <__retarget_lock_release_recursive>
 800c1ca:	e7dd      	b.n	800c188 <_fflush_r+0xc>

0800c1cc <memmove>:
 800c1cc:	4288      	cmp	r0, r1
 800c1ce:	b510      	push	{r4, lr}
 800c1d0:	eb01 0402 	add.w	r4, r1, r2
 800c1d4:	d902      	bls.n	800c1dc <memmove+0x10>
 800c1d6:	4284      	cmp	r4, r0
 800c1d8:	4623      	mov	r3, r4
 800c1da:	d807      	bhi.n	800c1ec <memmove+0x20>
 800c1dc:	1e43      	subs	r3, r0, #1
 800c1de:	42a1      	cmp	r1, r4
 800c1e0:	d008      	beq.n	800c1f4 <memmove+0x28>
 800c1e2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c1e6:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c1ea:	e7f8      	b.n	800c1de <memmove+0x12>
 800c1ec:	4402      	add	r2, r0
 800c1ee:	4601      	mov	r1, r0
 800c1f0:	428a      	cmp	r2, r1
 800c1f2:	d100      	bne.n	800c1f6 <memmove+0x2a>
 800c1f4:	bd10      	pop	{r4, pc}
 800c1f6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c1fa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c1fe:	e7f7      	b.n	800c1f0 <memmove+0x24>

0800c200 <_sbrk_r>:
 800c200:	b538      	push	{r3, r4, r5, lr}
 800c202:	4d06      	ldr	r5, [pc, #24]	@ (800c21c <_sbrk_r+0x1c>)
 800c204:	2300      	movs	r3, #0
 800c206:	4604      	mov	r4, r0
 800c208:	4608      	mov	r0, r1
 800c20a:	602b      	str	r3, [r5, #0]
 800c20c:	f7f6 ffba 	bl	8003184 <_sbrk>
 800c210:	1c43      	adds	r3, r0, #1
 800c212:	d102      	bne.n	800c21a <_sbrk_r+0x1a>
 800c214:	682b      	ldr	r3, [r5, #0]
 800c216:	b103      	cbz	r3, 800c21a <_sbrk_r+0x1a>
 800c218:	6023      	str	r3, [r4, #0]
 800c21a:	bd38      	pop	{r3, r4, r5, pc}
 800c21c:	20005298 	.word	0x20005298

0800c220 <__assert_func>:
 800c220:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c222:	4614      	mov	r4, r2
 800c224:	461a      	mov	r2, r3
 800c226:	4b09      	ldr	r3, [pc, #36]	@ (800c24c <__assert_func+0x2c>)
 800c228:	681b      	ldr	r3, [r3, #0]
 800c22a:	4605      	mov	r5, r0
 800c22c:	68d8      	ldr	r0, [r3, #12]
 800c22e:	b14c      	cbz	r4, 800c244 <__assert_func+0x24>
 800c230:	4b07      	ldr	r3, [pc, #28]	@ (800c250 <__assert_func+0x30>)
 800c232:	9100      	str	r1, [sp, #0]
 800c234:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c238:	4906      	ldr	r1, [pc, #24]	@ (800c254 <__assert_func+0x34>)
 800c23a:	462b      	mov	r3, r5
 800c23c:	f000 f858 	bl	800c2f0 <fiprintf>
 800c240:	f000 f868 	bl	800c314 <abort>
 800c244:	4b04      	ldr	r3, [pc, #16]	@ (800c258 <__assert_func+0x38>)
 800c246:	461c      	mov	r4, r3
 800c248:	e7f3      	b.n	800c232 <__assert_func+0x12>
 800c24a:	bf00      	nop
 800c24c:	200001d4 	.word	0x200001d4
 800c250:	0800cb1e 	.word	0x0800cb1e
 800c254:	0800cb2b 	.word	0x0800cb2b
 800c258:	0800cb59 	.word	0x0800cb59

0800c25c <_calloc_r>:
 800c25c:	b570      	push	{r4, r5, r6, lr}
 800c25e:	fba1 5402 	umull	r5, r4, r1, r2
 800c262:	b934      	cbnz	r4, 800c272 <_calloc_r+0x16>
 800c264:	4629      	mov	r1, r5
 800c266:	f7fe fecd 	bl	800b004 <_malloc_r>
 800c26a:	4606      	mov	r6, r0
 800c26c:	b928      	cbnz	r0, 800c27a <_calloc_r+0x1e>
 800c26e:	4630      	mov	r0, r6
 800c270:	bd70      	pop	{r4, r5, r6, pc}
 800c272:	220c      	movs	r2, #12
 800c274:	6002      	str	r2, [r0, #0]
 800c276:	2600      	movs	r6, #0
 800c278:	e7f9      	b.n	800c26e <_calloc_r+0x12>
 800c27a:	462a      	mov	r2, r5
 800c27c:	4621      	mov	r1, r4
 800c27e:	f7fe fa36 	bl	800a6ee <memset>
 800c282:	e7f4      	b.n	800c26e <_calloc_r+0x12>

0800c284 <malloc>:
 800c284:	4b02      	ldr	r3, [pc, #8]	@ (800c290 <malloc+0xc>)
 800c286:	4601      	mov	r1, r0
 800c288:	6818      	ldr	r0, [r3, #0]
 800c28a:	f7fe bebb 	b.w	800b004 <_malloc_r>
 800c28e:	bf00      	nop
 800c290:	200001d4 	.word	0x200001d4

0800c294 <_realloc_r>:
 800c294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c298:	4607      	mov	r7, r0
 800c29a:	4614      	mov	r4, r2
 800c29c:	460d      	mov	r5, r1
 800c29e:	b921      	cbnz	r1, 800c2aa <_realloc_r+0x16>
 800c2a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c2a4:	4611      	mov	r1, r2
 800c2a6:	f7fe bead 	b.w	800b004 <_malloc_r>
 800c2aa:	b92a      	cbnz	r2, 800c2b8 <_realloc_r+0x24>
 800c2ac:	f7fe fb04 	bl	800a8b8 <_free_r>
 800c2b0:	4625      	mov	r5, r4
 800c2b2:	4628      	mov	r0, r5
 800c2b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c2b8:	f000 f833 	bl	800c322 <_malloc_usable_size_r>
 800c2bc:	4284      	cmp	r4, r0
 800c2be:	4606      	mov	r6, r0
 800c2c0:	d802      	bhi.n	800c2c8 <_realloc_r+0x34>
 800c2c2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800c2c6:	d8f4      	bhi.n	800c2b2 <_realloc_r+0x1e>
 800c2c8:	4621      	mov	r1, r4
 800c2ca:	4638      	mov	r0, r7
 800c2cc:	f7fe fe9a 	bl	800b004 <_malloc_r>
 800c2d0:	4680      	mov	r8, r0
 800c2d2:	b908      	cbnz	r0, 800c2d8 <_realloc_r+0x44>
 800c2d4:	4645      	mov	r5, r8
 800c2d6:	e7ec      	b.n	800c2b2 <_realloc_r+0x1e>
 800c2d8:	42b4      	cmp	r4, r6
 800c2da:	4622      	mov	r2, r4
 800c2dc:	4629      	mov	r1, r5
 800c2de:	bf28      	it	cs
 800c2e0:	4632      	movcs	r2, r6
 800c2e2:	f7fe fad0 	bl	800a886 <memcpy>
 800c2e6:	4629      	mov	r1, r5
 800c2e8:	4638      	mov	r0, r7
 800c2ea:	f7fe fae5 	bl	800a8b8 <_free_r>
 800c2ee:	e7f1      	b.n	800c2d4 <_realloc_r+0x40>

0800c2f0 <fiprintf>:
 800c2f0:	b40e      	push	{r1, r2, r3}
 800c2f2:	b503      	push	{r0, r1, lr}
 800c2f4:	4601      	mov	r1, r0
 800c2f6:	ab03      	add	r3, sp, #12
 800c2f8:	4805      	ldr	r0, [pc, #20]	@ (800c310 <fiprintf+0x20>)
 800c2fa:	f853 2b04 	ldr.w	r2, [r3], #4
 800c2fe:	6800      	ldr	r0, [r0, #0]
 800c300:	9301      	str	r3, [sp, #4]
 800c302:	f000 f83f 	bl	800c384 <_vfiprintf_r>
 800c306:	b002      	add	sp, #8
 800c308:	f85d eb04 	ldr.w	lr, [sp], #4
 800c30c:	b003      	add	sp, #12
 800c30e:	4770      	bx	lr
 800c310:	200001d4 	.word	0x200001d4

0800c314 <abort>:
 800c314:	b508      	push	{r3, lr}
 800c316:	2006      	movs	r0, #6
 800c318:	f000 fa08 	bl	800c72c <raise>
 800c31c:	2001      	movs	r0, #1
 800c31e:	f7f6 feb9 	bl	8003094 <_exit>

0800c322 <_malloc_usable_size_r>:
 800c322:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c326:	1f18      	subs	r0, r3, #4
 800c328:	2b00      	cmp	r3, #0
 800c32a:	bfbc      	itt	lt
 800c32c:	580b      	ldrlt	r3, [r1, r0]
 800c32e:	18c0      	addlt	r0, r0, r3
 800c330:	4770      	bx	lr

0800c332 <__sfputc_r>:
 800c332:	6893      	ldr	r3, [r2, #8]
 800c334:	3b01      	subs	r3, #1
 800c336:	2b00      	cmp	r3, #0
 800c338:	b410      	push	{r4}
 800c33a:	6093      	str	r3, [r2, #8]
 800c33c:	da08      	bge.n	800c350 <__sfputc_r+0x1e>
 800c33e:	6994      	ldr	r4, [r2, #24]
 800c340:	42a3      	cmp	r3, r4
 800c342:	db01      	blt.n	800c348 <__sfputc_r+0x16>
 800c344:	290a      	cmp	r1, #10
 800c346:	d103      	bne.n	800c350 <__sfputc_r+0x1e>
 800c348:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c34c:	f000 b932 	b.w	800c5b4 <__swbuf_r>
 800c350:	6813      	ldr	r3, [r2, #0]
 800c352:	1c58      	adds	r0, r3, #1
 800c354:	6010      	str	r0, [r2, #0]
 800c356:	7019      	strb	r1, [r3, #0]
 800c358:	4608      	mov	r0, r1
 800c35a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c35e:	4770      	bx	lr

0800c360 <__sfputs_r>:
 800c360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c362:	4606      	mov	r6, r0
 800c364:	460f      	mov	r7, r1
 800c366:	4614      	mov	r4, r2
 800c368:	18d5      	adds	r5, r2, r3
 800c36a:	42ac      	cmp	r4, r5
 800c36c:	d101      	bne.n	800c372 <__sfputs_r+0x12>
 800c36e:	2000      	movs	r0, #0
 800c370:	e007      	b.n	800c382 <__sfputs_r+0x22>
 800c372:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c376:	463a      	mov	r2, r7
 800c378:	4630      	mov	r0, r6
 800c37a:	f7ff ffda 	bl	800c332 <__sfputc_r>
 800c37e:	1c43      	adds	r3, r0, #1
 800c380:	d1f3      	bne.n	800c36a <__sfputs_r+0xa>
 800c382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c384 <_vfiprintf_r>:
 800c384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c388:	460d      	mov	r5, r1
 800c38a:	b09d      	sub	sp, #116	@ 0x74
 800c38c:	4614      	mov	r4, r2
 800c38e:	4698      	mov	r8, r3
 800c390:	4606      	mov	r6, r0
 800c392:	b118      	cbz	r0, 800c39c <_vfiprintf_r+0x18>
 800c394:	6a03      	ldr	r3, [r0, #32]
 800c396:	b90b      	cbnz	r3, 800c39c <_vfiprintf_r+0x18>
 800c398:	f7fe f8fa 	bl	800a590 <__sinit>
 800c39c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c39e:	07d9      	lsls	r1, r3, #31
 800c3a0:	d405      	bmi.n	800c3ae <_vfiprintf_r+0x2a>
 800c3a2:	89ab      	ldrh	r3, [r5, #12]
 800c3a4:	059a      	lsls	r2, r3, #22
 800c3a6:	d402      	bmi.n	800c3ae <_vfiprintf_r+0x2a>
 800c3a8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c3aa:	f7fe fa6a 	bl	800a882 <__retarget_lock_acquire_recursive>
 800c3ae:	89ab      	ldrh	r3, [r5, #12]
 800c3b0:	071b      	lsls	r3, r3, #28
 800c3b2:	d501      	bpl.n	800c3b8 <_vfiprintf_r+0x34>
 800c3b4:	692b      	ldr	r3, [r5, #16]
 800c3b6:	b99b      	cbnz	r3, 800c3e0 <_vfiprintf_r+0x5c>
 800c3b8:	4629      	mov	r1, r5
 800c3ba:	4630      	mov	r0, r6
 800c3bc:	f000 f938 	bl	800c630 <__swsetup_r>
 800c3c0:	b170      	cbz	r0, 800c3e0 <_vfiprintf_r+0x5c>
 800c3c2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c3c4:	07dc      	lsls	r4, r3, #31
 800c3c6:	d504      	bpl.n	800c3d2 <_vfiprintf_r+0x4e>
 800c3c8:	f04f 30ff 	mov.w	r0, #4294967295
 800c3cc:	b01d      	add	sp, #116	@ 0x74
 800c3ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3d2:	89ab      	ldrh	r3, [r5, #12]
 800c3d4:	0598      	lsls	r0, r3, #22
 800c3d6:	d4f7      	bmi.n	800c3c8 <_vfiprintf_r+0x44>
 800c3d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c3da:	f7fe fa53 	bl	800a884 <__retarget_lock_release_recursive>
 800c3de:	e7f3      	b.n	800c3c8 <_vfiprintf_r+0x44>
 800c3e0:	2300      	movs	r3, #0
 800c3e2:	9309      	str	r3, [sp, #36]	@ 0x24
 800c3e4:	2320      	movs	r3, #32
 800c3e6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c3ea:	f8cd 800c 	str.w	r8, [sp, #12]
 800c3ee:	2330      	movs	r3, #48	@ 0x30
 800c3f0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800c5a0 <_vfiprintf_r+0x21c>
 800c3f4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c3f8:	f04f 0901 	mov.w	r9, #1
 800c3fc:	4623      	mov	r3, r4
 800c3fe:	469a      	mov	sl, r3
 800c400:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c404:	b10a      	cbz	r2, 800c40a <_vfiprintf_r+0x86>
 800c406:	2a25      	cmp	r2, #37	@ 0x25
 800c408:	d1f9      	bne.n	800c3fe <_vfiprintf_r+0x7a>
 800c40a:	ebba 0b04 	subs.w	fp, sl, r4
 800c40e:	d00b      	beq.n	800c428 <_vfiprintf_r+0xa4>
 800c410:	465b      	mov	r3, fp
 800c412:	4622      	mov	r2, r4
 800c414:	4629      	mov	r1, r5
 800c416:	4630      	mov	r0, r6
 800c418:	f7ff ffa2 	bl	800c360 <__sfputs_r>
 800c41c:	3001      	adds	r0, #1
 800c41e:	f000 80a7 	beq.w	800c570 <_vfiprintf_r+0x1ec>
 800c422:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c424:	445a      	add	r2, fp
 800c426:	9209      	str	r2, [sp, #36]	@ 0x24
 800c428:	f89a 3000 	ldrb.w	r3, [sl]
 800c42c:	2b00      	cmp	r3, #0
 800c42e:	f000 809f 	beq.w	800c570 <_vfiprintf_r+0x1ec>
 800c432:	2300      	movs	r3, #0
 800c434:	f04f 32ff 	mov.w	r2, #4294967295
 800c438:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c43c:	f10a 0a01 	add.w	sl, sl, #1
 800c440:	9304      	str	r3, [sp, #16]
 800c442:	9307      	str	r3, [sp, #28]
 800c444:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c448:	931a      	str	r3, [sp, #104]	@ 0x68
 800c44a:	4654      	mov	r4, sl
 800c44c:	2205      	movs	r2, #5
 800c44e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c452:	4853      	ldr	r0, [pc, #332]	@ (800c5a0 <_vfiprintf_r+0x21c>)
 800c454:	f7f3 feec 	bl	8000230 <memchr>
 800c458:	9a04      	ldr	r2, [sp, #16]
 800c45a:	b9d8      	cbnz	r0, 800c494 <_vfiprintf_r+0x110>
 800c45c:	06d1      	lsls	r1, r2, #27
 800c45e:	bf44      	itt	mi
 800c460:	2320      	movmi	r3, #32
 800c462:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c466:	0713      	lsls	r3, r2, #28
 800c468:	bf44      	itt	mi
 800c46a:	232b      	movmi	r3, #43	@ 0x2b
 800c46c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c470:	f89a 3000 	ldrb.w	r3, [sl]
 800c474:	2b2a      	cmp	r3, #42	@ 0x2a
 800c476:	d015      	beq.n	800c4a4 <_vfiprintf_r+0x120>
 800c478:	9a07      	ldr	r2, [sp, #28]
 800c47a:	4654      	mov	r4, sl
 800c47c:	2000      	movs	r0, #0
 800c47e:	f04f 0c0a 	mov.w	ip, #10
 800c482:	4621      	mov	r1, r4
 800c484:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c488:	3b30      	subs	r3, #48	@ 0x30
 800c48a:	2b09      	cmp	r3, #9
 800c48c:	d94b      	bls.n	800c526 <_vfiprintf_r+0x1a2>
 800c48e:	b1b0      	cbz	r0, 800c4be <_vfiprintf_r+0x13a>
 800c490:	9207      	str	r2, [sp, #28]
 800c492:	e014      	b.n	800c4be <_vfiprintf_r+0x13a>
 800c494:	eba0 0308 	sub.w	r3, r0, r8
 800c498:	fa09 f303 	lsl.w	r3, r9, r3
 800c49c:	4313      	orrs	r3, r2
 800c49e:	9304      	str	r3, [sp, #16]
 800c4a0:	46a2      	mov	sl, r4
 800c4a2:	e7d2      	b.n	800c44a <_vfiprintf_r+0xc6>
 800c4a4:	9b03      	ldr	r3, [sp, #12]
 800c4a6:	1d19      	adds	r1, r3, #4
 800c4a8:	681b      	ldr	r3, [r3, #0]
 800c4aa:	9103      	str	r1, [sp, #12]
 800c4ac:	2b00      	cmp	r3, #0
 800c4ae:	bfbb      	ittet	lt
 800c4b0:	425b      	neglt	r3, r3
 800c4b2:	f042 0202 	orrlt.w	r2, r2, #2
 800c4b6:	9307      	strge	r3, [sp, #28]
 800c4b8:	9307      	strlt	r3, [sp, #28]
 800c4ba:	bfb8      	it	lt
 800c4bc:	9204      	strlt	r2, [sp, #16]
 800c4be:	7823      	ldrb	r3, [r4, #0]
 800c4c0:	2b2e      	cmp	r3, #46	@ 0x2e
 800c4c2:	d10a      	bne.n	800c4da <_vfiprintf_r+0x156>
 800c4c4:	7863      	ldrb	r3, [r4, #1]
 800c4c6:	2b2a      	cmp	r3, #42	@ 0x2a
 800c4c8:	d132      	bne.n	800c530 <_vfiprintf_r+0x1ac>
 800c4ca:	9b03      	ldr	r3, [sp, #12]
 800c4cc:	1d1a      	adds	r2, r3, #4
 800c4ce:	681b      	ldr	r3, [r3, #0]
 800c4d0:	9203      	str	r2, [sp, #12]
 800c4d2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c4d6:	3402      	adds	r4, #2
 800c4d8:	9305      	str	r3, [sp, #20]
 800c4da:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800c5b0 <_vfiprintf_r+0x22c>
 800c4de:	7821      	ldrb	r1, [r4, #0]
 800c4e0:	2203      	movs	r2, #3
 800c4e2:	4650      	mov	r0, sl
 800c4e4:	f7f3 fea4 	bl	8000230 <memchr>
 800c4e8:	b138      	cbz	r0, 800c4fa <_vfiprintf_r+0x176>
 800c4ea:	9b04      	ldr	r3, [sp, #16]
 800c4ec:	eba0 000a 	sub.w	r0, r0, sl
 800c4f0:	2240      	movs	r2, #64	@ 0x40
 800c4f2:	4082      	lsls	r2, r0
 800c4f4:	4313      	orrs	r3, r2
 800c4f6:	3401      	adds	r4, #1
 800c4f8:	9304      	str	r3, [sp, #16]
 800c4fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c4fe:	4829      	ldr	r0, [pc, #164]	@ (800c5a4 <_vfiprintf_r+0x220>)
 800c500:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c504:	2206      	movs	r2, #6
 800c506:	f7f3 fe93 	bl	8000230 <memchr>
 800c50a:	2800      	cmp	r0, #0
 800c50c:	d03f      	beq.n	800c58e <_vfiprintf_r+0x20a>
 800c50e:	4b26      	ldr	r3, [pc, #152]	@ (800c5a8 <_vfiprintf_r+0x224>)
 800c510:	bb1b      	cbnz	r3, 800c55a <_vfiprintf_r+0x1d6>
 800c512:	9b03      	ldr	r3, [sp, #12]
 800c514:	3307      	adds	r3, #7
 800c516:	f023 0307 	bic.w	r3, r3, #7
 800c51a:	3308      	adds	r3, #8
 800c51c:	9303      	str	r3, [sp, #12]
 800c51e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c520:	443b      	add	r3, r7
 800c522:	9309      	str	r3, [sp, #36]	@ 0x24
 800c524:	e76a      	b.n	800c3fc <_vfiprintf_r+0x78>
 800c526:	fb0c 3202 	mla	r2, ip, r2, r3
 800c52a:	460c      	mov	r4, r1
 800c52c:	2001      	movs	r0, #1
 800c52e:	e7a8      	b.n	800c482 <_vfiprintf_r+0xfe>
 800c530:	2300      	movs	r3, #0
 800c532:	3401      	adds	r4, #1
 800c534:	9305      	str	r3, [sp, #20]
 800c536:	4619      	mov	r1, r3
 800c538:	f04f 0c0a 	mov.w	ip, #10
 800c53c:	4620      	mov	r0, r4
 800c53e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c542:	3a30      	subs	r2, #48	@ 0x30
 800c544:	2a09      	cmp	r2, #9
 800c546:	d903      	bls.n	800c550 <_vfiprintf_r+0x1cc>
 800c548:	2b00      	cmp	r3, #0
 800c54a:	d0c6      	beq.n	800c4da <_vfiprintf_r+0x156>
 800c54c:	9105      	str	r1, [sp, #20]
 800c54e:	e7c4      	b.n	800c4da <_vfiprintf_r+0x156>
 800c550:	fb0c 2101 	mla	r1, ip, r1, r2
 800c554:	4604      	mov	r4, r0
 800c556:	2301      	movs	r3, #1
 800c558:	e7f0      	b.n	800c53c <_vfiprintf_r+0x1b8>
 800c55a:	ab03      	add	r3, sp, #12
 800c55c:	9300      	str	r3, [sp, #0]
 800c55e:	462a      	mov	r2, r5
 800c560:	4b12      	ldr	r3, [pc, #72]	@ (800c5ac <_vfiprintf_r+0x228>)
 800c562:	a904      	add	r1, sp, #16
 800c564:	4630      	mov	r0, r6
 800c566:	f3af 8000 	nop.w
 800c56a:	4607      	mov	r7, r0
 800c56c:	1c78      	adds	r0, r7, #1
 800c56e:	d1d6      	bne.n	800c51e <_vfiprintf_r+0x19a>
 800c570:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c572:	07d9      	lsls	r1, r3, #31
 800c574:	d405      	bmi.n	800c582 <_vfiprintf_r+0x1fe>
 800c576:	89ab      	ldrh	r3, [r5, #12]
 800c578:	059a      	lsls	r2, r3, #22
 800c57a:	d402      	bmi.n	800c582 <_vfiprintf_r+0x1fe>
 800c57c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c57e:	f7fe f981 	bl	800a884 <__retarget_lock_release_recursive>
 800c582:	89ab      	ldrh	r3, [r5, #12]
 800c584:	065b      	lsls	r3, r3, #25
 800c586:	f53f af1f 	bmi.w	800c3c8 <_vfiprintf_r+0x44>
 800c58a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c58c:	e71e      	b.n	800c3cc <_vfiprintf_r+0x48>
 800c58e:	ab03      	add	r3, sp, #12
 800c590:	9300      	str	r3, [sp, #0]
 800c592:	462a      	mov	r2, r5
 800c594:	4b05      	ldr	r3, [pc, #20]	@ (800c5ac <_vfiprintf_r+0x228>)
 800c596:	a904      	add	r1, sp, #16
 800c598:	4630      	mov	r0, r6
 800c59a:	f7ff fc4d 	bl	800be38 <_printf_i>
 800c59e:	e7e4      	b.n	800c56a <_vfiprintf_r+0x1e6>
 800c5a0:	0800caeb 	.word	0x0800caeb
 800c5a4:	0800caf5 	.word	0x0800caf5
 800c5a8:	00000000 	.word	0x00000000
 800c5ac:	0800c361 	.word	0x0800c361
 800c5b0:	0800caf1 	.word	0x0800caf1

0800c5b4 <__swbuf_r>:
 800c5b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c5b6:	460e      	mov	r6, r1
 800c5b8:	4614      	mov	r4, r2
 800c5ba:	4605      	mov	r5, r0
 800c5bc:	b118      	cbz	r0, 800c5c6 <__swbuf_r+0x12>
 800c5be:	6a03      	ldr	r3, [r0, #32]
 800c5c0:	b90b      	cbnz	r3, 800c5c6 <__swbuf_r+0x12>
 800c5c2:	f7fd ffe5 	bl	800a590 <__sinit>
 800c5c6:	69a3      	ldr	r3, [r4, #24]
 800c5c8:	60a3      	str	r3, [r4, #8]
 800c5ca:	89a3      	ldrh	r3, [r4, #12]
 800c5cc:	071a      	lsls	r2, r3, #28
 800c5ce:	d501      	bpl.n	800c5d4 <__swbuf_r+0x20>
 800c5d0:	6923      	ldr	r3, [r4, #16]
 800c5d2:	b943      	cbnz	r3, 800c5e6 <__swbuf_r+0x32>
 800c5d4:	4621      	mov	r1, r4
 800c5d6:	4628      	mov	r0, r5
 800c5d8:	f000 f82a 	bl	800c630 <__swsetup_r>
 800c5dc:	b118      	cbz	r0, 800c5e6 <__swbuf_r+0x32>
 800c5de:	f04f 37ff 	mov.w	r7, #4294967295
 800c5e2:	4638      	mov	r0, r7
 800c5e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c5e6:	6823      	ldr	r3, [r4, #0]
 800c5e8:	6922      	ldr	r2, [r4, #16]
 800c5ea:	1a98      	subs	r0, r3, r2
 800c5ec:	6963      	ldr	r3, [r4, #20]
 800c5ee:	b2f6      	uxtb	r6, r6
 800c5f0:	4283      	cmp	r3, r0
 800c5f2:	4637      	mov	r7, r6
 800c5f4:	dc05      	bgt.n	800c602 <__swbuf_r+0x4e>
 800c5f6:	4621      	mov	r1, r4
 800c5f8:	4628      	mov	r0, r5
 800c5fa:	f7ff fdbf 	bl	800c17c <_fflush_r>
 800c5fe:	2800      	cmp	r0, #0
 800c600:	d1ed      	bne.n	800c5de <__swbuf_r+0x2a>
 800c602:	68a3      	ldr	r3, [r4, #8]
 800c604:	3b01      	subs	r3, #1
 800c606:	60a3      	str	r3, [r4, #8]
 800c608:	6823      	ldr	r3, [r4, #0]
 800c60a:	1c5a      	adds	r2, r3, #1
 800c60c:	6022      	str	r2, [r4, #0]
 800c60e:	701e      	strb	r6, [r3, #0]
 800c610:	6962      	ldr	r2, [r4, #20]
 800c612:	1c43      	adds	r3, r0, #1
 800c614:	429a      	cmp	r2, r3
 800c616:	d004      	beq.n	800c622 <__swbuf_r+0x6e>
 800c618:	89a3      	ldrh	r3, [r4, #12]
 800c61a:	07db      	lsls	r3, r3, #31
 800c61c:	d5e1      	bpl.n	800c5e2 <__swbuf_r+0x2e>
 800c61e:	2e0a      	cmp	r6, #10
 800c620:	d1df      	bne.n	800c5e2 <__swbuf_r+0x2e>
 800c622:	4621      	mov	r1, r4
 800c624:	4628      	mov	r0, r5
 800c626:	f7ff fda9 	bl	800c17c <_fflush_r>
 800c62a:	2800      	cmp	r0, #0
 800c62c:	d0d9      	beq.n	800c5e2 <__swbuf_r+0x2e>
 800c62e:	e7d6      	b.n	800c5de <__swbuf_r+0x2a>

0800c630 <__swsetup_r>:
 800c630:	b538      	push	{r3, r4, r5, lr}
 800c632:	4b29      	ldr	r3, [pc, #164]	@ (800c6d8 <__swsetup_r+0xa8>)
 800c634:	4605      	mov	r5, r0
 800c636:	6818      	ldr	r0, [r3, #0]
 800c638:	460c      	mov	r4, r1
 800c63a:	b118      	cbz	r0, 800c644 <__swsetup_r+0x14>
 800c63c:	6a03      	ldr	r3, [r0, #32]
 800c63e:	b90b      	cbnz	r3, 800c644 <__swsetup_r+0x14>
 800c640:	f7fd ffa6 	bl	800a590 <__sinit>
 800c644:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c648:	0719      	lsls	r1, r3, #28
 800c64a:	d422      	bmi.n	800c692 <__swsetup_r+0x62>
 800c64c:	06da      	lsls	r2, r3, #27
 800c64e:	d407      	bmi.n	800c660 <__swsetup_r+0x30>
 800c650:	2209      	movs	r2, #9
 800c652:	602a      	str	r2, [r5, #0]
 800c654:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c658:	81a3      	strh	r3, [r4, #12]
 800c65a:	f04f 30ff 	mov.w	r0, #4294967295
 800c65e:	e033      	b.n	800c6c8 <__swsetup_r+0x98>
 800c660:	0758      	lsls	r0, r3, #29
 800c662:	d512      	bpl.n	800c68a <__swsetup_r+0x5a>
 800c664:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c666:	b141      	cbz	r1, 800c67a <__swsetup_r+0x4a>
 800c668:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c66c:	4299      	cmp	r1, r3
 800c66e:	d002      	beq.n	800c676 <__swsetup_r+0x46>
 800c670:	4628      	mov	r0, r5
 800c672:	f7fe f921 	bl	800a8b8 <_free_r>
 800c676:	2300      	movs	r3, #0
 800c678:	6363      	str	r3, [r4, #52]	@ 0x34
 800c67a:	89a3      	ldrh	r3, [r4, #12]
 800c67c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800c680:	81a3      	strh	r3, [r4, #12]
 800c682:	2300      	movs	r3, #0
 800c684:	6063      	str	r3, [r4, #4]
 800c686:	6923      	ldr	r3, [r4, #16]
 800c688:	6023      	str	r3, [r4, #0]
 800c68a:	89a3      	ldrh	r3, [r4, #12]
 800c68c:	f043 0308 	orr.w	r3, r3, #8
 800c690:	81a3      	strh	r3, [r4, #12]
 800c692:	6923      	ldr	r3, [r4, #16]
 800c694:	b94b      	cbnz	r3, 800c6aa <__swsetup_r+0x7a>
 800c696:	89a3      	ldrh	r3, [r4, #12]
 800c698:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800c69c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c6a0:	d003      	beq.n	800c6aa <__swsetup_r+0x7a>
 800c6a2:	4621      	mov	r1, r4
 800c6a4:	4628      	mov	r0, r5
 800c6a6:	f000 f883 	bl	800c7b0 <__smakebuf_r>
 800c6aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c6ae:	f013 0201 	ands.w	r2, r3, #1
 800c6b2:	d00a      	beq.n	800c6ca <__swsetup_r+0x9a>
 800c6b4:	2200      	movs	r2, #0
 800c6b6:	60a2      	str	r2, [r4, #8]
 800c6b8:	6962      	ldr	r2, [r4, #20]
 800c6ba:	4252      	negs	r2, r2
 800c6bc:	61a2      	str	r2, [r4, #24]
 800c6be:	6922      	ldr	r2, [r4, #16]
 800c6c0:	b942      	cbnz	r2, 800c6d4 <__swsetup_r+0xa4>
 800c6c2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800c6c6:	d1c5      	bne.n	800c654 <__swsetup_r+0x24>
 800c6c8:	bd38      	pop	{r3, r4, r5, pc}
 800c6ca:	0799      	lsls	r1, r3, #30
 800c6cc:	bf58      	it	pl
 800c6ce:	6962      	ldrpl	r2, [r4, #20]
 800c6d0:	60a2      	str	r2, [r4, #8]
 800c6d2:	e7f4      	b.n	800c6be <__swsetup_r+0x8e>
 800c6d4:	2000      	movs	r0, #0
 800c6d6:	e7f7      	b.n	800c6c8 <__swsetup_r+0x98>
 800c6d8:	200001d4 	.word	0x200001d4

0800c6dc <_raise_r>:
 800c6dc:	291f      	cmp	r1, #31
 800c6de:	b538      	push	{r3, r4, r5, lr}
 800c6e0:	4605      	mov	r5, r0
 800c6e2:	460c      	mov	r4, r1
 800c6e4:	d904      	bls.n	800c6f0 <_raise_r+0x14>
 800c6e6:	2316      	movs	r3, #22
 800c6e8:	6003      	str	r3, [r0, #0]
 800c6ea:	f04f 30ff 	mov.w	r0, #4294967295
 800c6ee:	bd38      	pop	{r3, r4, r5, pc}
 800c6f0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800c6f2:	b112      	cbz	r2, 800c6fa <_raise_r+0x1e>
 800c6f4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800c6f8:	b94b      	cbnz	r3, 800c70e <_raise_r+0x32>
 800c6fa:	4628      	mov	r0, r5
 800c6fc:	f000 f830 	bl	800c760 <_getpid_r>
 800c700:	4622      	mov	r2, r4
 800c702:	4601      	mov	r1, r0
 800c704:	4628      	mov	r0, r5
 800c706:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c70a:	f000 b817 	b.w	800c73c <_kill_r>
 800c70e:	2b01      	cmp	r3, #1
 800c710:	d00a      	beq.n	800c728 <_raise_r+0x4c>
 800c712:	1c59      	adds	r1, r3, #1
 800c714:	d103      	bne.n	800c71e <_raise_r+0x42>
 800c716:	2316      	movs	r3, #22
 800c718:	6003      	str	r3, [r0, #0]
 800c71a:	2001      	movs	r0, #1
 800c71c:	e7e7      	b.n	800c6ee <_raise_r+0x12>
 800c71e:	2100      	movs	r1, #0
 800c720:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800c724:	4620      	mov	r0, r4
 800c726:	4798      	blx	r3
 800c728:	2000      	movs	r0, #0
 800c72a:	e7e0      	b.n	800c6ee <_raise_r+0x12>

0800c72c <raise>:
 800c72c:	4b02      	ldr	r3, [pc, #8]	@ (800c738 <raise+0xc>)
 800c72e:	4601      	mov	r1, r0
 800c730:	6818      	ldr	r0, [r3, #0]
 800c732:	f7ff bfd3 	b.w	800c6dc <_raise_r>
 800c736:	bf00      	nop
 800c738:	200001d4 	.word	0x200001d4

0800c73c <_kill_r>:
 800c73c:	b538      	push	{r3, r4, r5, lr}
 800c73e:	4d07      	ldr	r5, [pc, #28]	@ (800c75c <_kill_r+0x20>)
 800c740:	2300      	movs	r3, #0
 800c742:	4604      	mov	r4, r0
 800c744:	4608      	mov	r0, r1
 800c746:	4611      	mov	r1, r2
 800c748:	602b      	str	r3, [r5, #0]
 800c74a:	f7f6 fc93 	bl	8003074 <_kill>
 800c74e:	1c43      	adds	r3, r0, #1
 800c750:	d102      	bne.n	800c758 <_kill_r+0x1c>
 800c752:	682b      	ldr	r3, [r5, #0]
 800c754:	b103      	cbz	r3, 800c758 <_kill_r+0x1c>
 800c756:	6023      	str	r3, [r4, #0]
 800c758:	bd38      	pop	{r3, r4, r5, pc}
 800c75a:	bf00      	nop
 800c75c:	20005298 	.word	0x20005298

0800c760 <_getpid_r>:
 800c760:	f7f6 bc80 	b.w	8003064 <_getpid>

0800c764 <__swhatbuf_r>:
 800c764:	b570      	push	{r4, r5, r6, lr}
 800c766:	460c      	mov	r4, r1
 800c768:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c76c:	2900      	cmp	r1, #0
 800c76e:	b096      	sub	sp, #88	@ 0x58
 800c770:	4615      	mov	r5, r2
 800c772:	461e      	mov	r6, r3
 800c774:	da0d      	bge.n	800c792 <__swhatbuf_r+0x2e>
 800c776:	89a3      	ldrh	r3, [r4, #12]
 800c778:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800c77c:	f04f 0100 	mov.w	r1, #0
 800c780:	bf14      	ite	ne
 800c782:	2340      	movne	r3, #64	@ 0x40
 800c784:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800c788:	2000      	movs	r0, #0
 800c78a:	6031      	str	r1, [r6, #0]
 800c78c:	602b      	str	r3, [r5, #0]
 800c78e:	b016      	add	sp, #88	@ 0x58
 800c790:	bd70      	pop	{r4, r5, r6, pc}
 800c792:	466a      	mov	r2, sp
 800c794:	f000 f848 	bl	800c828 <_fstat_r>
 800c798:	2800      	cmp	r0, #0
 800c79a:	dbec      	blt.n	800c776 <__swhatbuf_r+0x12>
 800c79c:	9901      	ldr	r1, [sp, #4]
 800c79e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800c7a2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800c7a6:	4259      	negs	r1, r3
 800c7a8:	4159      	adcs	r1, r3
 800c7aa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c7ae:	e7eb      	b.n	800c788 <__swhatbuf_r+0x24>

0800c7b0 <__smakebuf_r>:
 800c7b0:	898b      	ldrh	r3, [r1, #12]
 800c7b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c7b4:	079d      	lsls	r5, r3, #30
 800c7b6:	4606      	mov	r6, r0
 800c7b8:	460c      	mov	r4, r1
 800c7ba:	d507      	bpl.n	800c7cc <__smakebuf_r+0x1c>
 800c7bc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800c7c0:	6023      	str	r3, [r4, #0]
 800c7c2:	6123      	str	r3, [r4, #16]
 800c7c4:	2301      	movs	r3, #1
 800c7c6:	6163      	str	r3, [r4, #20]
 800c7c8:	b003      	add	sp, #12
 800c7ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7cc:	ab01      	add	r3, sp, #4
 800c7ce:	466a      	mov	r2, sp
 800c7d0:	f7ff ffc8 	bl	800c764 <__swhatbuf_r>
 800c7d4:	9f00      	ldr	r7, [sp, #0]
 800c7d6:	4605      	mov	r5, r0
 800c7d8:	4639      	mov	r1, r7
 800c7da:	4630      	mov	r0, r6
 800c7dc:	f7fe fc12 	bl	800b004 <_malloc_r>
 800c7e0:	b948      	cbnz	r0, 800c7f6 <__smakebuf_r+0x46>
 800c7e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c7e6:	059a      	lsls	r2, r3, #22
 800c7e8:	d4ee      	bmi.n	800c7c8 <__smakebuf_r+0x18>
 800c7ea:	f023 0303 	bic.w	r3, r3, #3
 800c7ee:	f043 0302 	orr.w	r3, r3, #2
 800c7f2:	81a3      	strh	r3, [r4, #12]
 800c7f4:	e7e2      	b.n	800c7bc <__smakebuf_r+0xc>
 800c7f6:	89a3      	ldrh	r3, [r4, #12]
 800c7f8:	6020      	str	r0, [r4, #0]
 800c7fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c7fe:	81a3      	strh	r3, [r4, #12]
 800c800:	9b01      	ldr	r3, [sp, #4]
 800c802:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800c806:	b15b      	cbz	r3, 800c820 <__smakebuf_r+0x70>
 800c808:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c80c:	4630      	mov	r0, r6
 800c80e:	f000 f81d 	bl	800c84c <_isatty_r>
 800c812:	b128      	cbz	r0, 800c820 <__smakebuf_r+0x70>
 800c814:	89a3      	ldrh	r3, [r4, #12]
 800c816:	f023 0303 	bic.w	r3, r3, #3
 800c81a:	f043 0301 	orr.w	r3, r3, #1
 800c81e:	81a3      	strh	r3, [r4, #12]
 800c820:	89a3      	ldrh	r3, [r4, #12]
 800c822:	431d      	orrs	r5, r3
 800c824:	81a5      	strh	r5, [r4, #12]
 800c826:	e7cf      	b.n	800c7c8 <__smakebuf_r+0x18>

0800c828 <_fstat_r>:
 800c828:	b538      	push	{r3, r4, r5, lr}
 800c82a:	4d07      	ldr	r5, [pc, #28]	@ (800c848 <_fstat_r+0x20>)
 800c82c:	2300      	movs	r3, #0
 800c82e:	4604      	mov	r4, r0
 800c830:	4608      	mov	r0, r1
 800c832:	4611      	mov	r1, r2
 800c834:	602b      	str	r3, [r5, #0]
 800c836:	f7f6 fc7d 	bl	8003134 <_fstat>
 800c83a:	1c43      	adds	r3, r0, #1
 800c83c:	d102      	bne.n	800c844 <_fstat_r+0x1c>
 800c83e:	682b      	ldr	r3, [r5, #0]
 800c840:	b103      	cbz	r3, 800c844 <_fstat_r+0x1c>
 800c842:	6023      	str	r3, [r4, #0]
 800c844:	bd38      	pop	{r3, r4, r5, pc}
 800c846:	bf00      	nop
 800c848:	20005298 	.word	0x20005298

0800c84c <_isatty_r>:
 800c84c:	b538      	push	{r3, r4, r5, lr}
 800c84e:	4d06      	ldr	r5, [pc, #24]	@ (800c868 <_isatty_r+0x1c>)
 800c850:	2300      	movs	r3, #0
 800c852:	4604      	mov	r4, r0
 800c854:	4608      	mov	r0, r1
 800c856:	602b      	str	r3, [r5, #0]
 800c858:	f7f6 fc7c 	bl	8003154 <_isatty>
 800c85c:	1c43      	adds	r3, r0, #1
 800c85e:	d102      	bne.n	800c866 <_isatty_r+0x1a>
 800c860:	682b      	ldr	r3, [r5, #0]
 800c862:	b103      	cbz	r3, 800c866 <_isatty_r+0x1a>
 800c864:	6023      	str	r3, [r4, #0]
 800c866:	bd38      	pop	{r3, r4, r5, pc}
 800c868:	20005298 	.word	0x20005298

0800c86c <_init>:
 800c86c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c86e:	bf00      	nop
 800c870:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c872:	bc08      	pop	{r3}
 800c874:	469e      	mov	lr, r3
 800c876:	4770      	bx	lr

0800c878 <_fini>:
 800c878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c87a:	bf00      	nop
 800c87c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c87e:	bc08      	pop	{r3}
 800c880:	469e      	mov	lr, r3
 800c882:	4770      	bx	lr
